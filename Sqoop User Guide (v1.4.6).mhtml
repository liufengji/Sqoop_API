From: <Saved by Blink>
Subject: Sqoop User Guide (v1.4.6)
Date: Fri, 28 Sep 2017 11:59:48 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_4831_41CE522A.34C6271F"

------=_NextPart_000_4831_41CE522A.34C6271F
Content-Type: text/html
Content-Transfer-Encoding: quoted-printable
Content-Location: https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_free_form_query_imports

<html data-find=3D"_5"><head><meta http-equiv=3D"Content-Type" content=3D"t=
ext/html; charset=3Dwindows-1252"><title>Sqoop User Guide (v1.4.6)</title><=
link rel=3D"stylesheet" href=3D"https://sqoop.apache.org/docs/1.4.6/docbook=
.css" type=3D"text/css"><meta name=3D"generator" content=3D"DocBook XSL Sty=
lesheets V1.75.2"></head><body data-find=3D"_4"><div style=3D"clear:both; m=
argin-bottom: 4px"></div><div align=3D"center"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/index.html"><img src=3D"https://sqoop.apache.org/docs/1.=
4.6/images/home.png" alt=3D"Documentation Home"></a></div><span class=3D"br=
eadcrumbs"><div class=3D"breadcrumbs"><span class=3D"breadcrumb-node">Sqoop=
 User Guide (v1.4.6)</span></div></span><div lang=3D"en" class=3D"article" =
title=3D"Sqoop User Guide (v1.4.6)" data-find=3D"_3"><div class=3D"titlepag=
e"><div><div><h2 class=3D"title"><a name=3D"idp120136"></a>Sqoop User Guide=
 (v1.4.6)</h2></div></div><hr></div><div class=3D"toc"><p><b>Table of Conte=
nts</b></p><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.=
org/docs/1.4.6/SqoopUserGuide.html#_introduction">1. Introduction</a></span=
></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/=
1.4.6/SqoopUserGuide.html#_supported_releases">2. Supported Releases</a></s=
pan></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/do=
cs/1.4.6/SqoopUserGuide.html#_sqoop_releases">3. Sqoop Releases</a></span><=
/dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.=
4.6/SqoopUserGuide.html#_prerequisites">4. Prerequisites</a></span></dt><dt=
><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqo=
opUserGuide.html#_basic_usage">5. Basic Usage</a></span></dt><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_sqoop_tools">6. Sqoop Tools</a></span></dt><dd><dl><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_using_command_aliases">6.1. Using Command Aliases</a></span></dt><dt>=
<span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoo=
pUserGuide.html#_controlling_the_hadoop_installation">6.2. Controlling the =
Hadoop Installation</a></span></dt><dt><span class=3D"section"><a href=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_using_generic_and_s=
pecific_arguments">6.3. Using Generic and Specific Arguments</a></span></dt=
><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6=
/SqoopUserGuide.html#_using_options_files_to_pass_arguments">6.4. Using Opt=
ions Files to Pass Arguments</a></span></dt><dt><span class=3D"section"><a =
href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_using_tool=
s">6.5. Using Tools</a></span></dt></dl></dd><dt><span class=3D"section"><a=
 href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_literal_s=
qoop_import_literal">7. <code class=3D"literal">sqoop-import</code></a></sp=
an></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache=
.org/docs/1.4.6/SqoopUserGuide.html#_purpose">7.1. Purpose</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_syntax">7.2. Syntax</a></span></dt><dd><dl><dt><span cl=
ass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGui=
de.html#_connecting_to_a_database_server">7.2.1. Connecting to a Database S=
erver</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_selecting_the_data_to_import">7.2=
.2. Selecting the Data to Import</a></span></dt><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_free_f=
orm_query_imports">7.2.3. Free-form Query Imports</a></span></dt><dt><span =
class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserG=
uide.html#_controlling_parallelism">7.2.4. Controlling Parallelism</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_controlling_distributed_cache">7.2.5. Controlli=
ng Distributed Cache</a></span></dt><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_controlling_the_im=
port_process">7.2.6. Controlling the Import Process</a></span></dt><dt><spa=
n class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUse=
rGuide.html#_controlling_transaction_isolation">7.2.7. Controlling transact=
ion isolation</a></span></dt><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_controlling_type_mapping"=
>7.2.8. Controlling type mapping</a></span></dt><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_increm=
ental_imports">7.2.9. Incremental Imports</a></span></dt><dt><span class=3D=
"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.htm=
l#_file_formats">7.2.10. File Formats</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_l=
arge_objects">7.2.11. Large Objects</a></span></dt><dt><span class=3D"secti=
on"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_imp=
orting_data_into_hive">7.2.12. Importing Data Into Hive</a></span></dt><dt>=
<span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoo=
pUserGuide.html#_importing_data_into_hbase">7.2.13. Importing Data Into HBa=
se</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apac=
he.org/docs/1.4.6/SqoopUserGuide.html#_importing_data_into_accumulo">7.2.14=
. Importing Data Into Accumulo</a></span></dt><dt><span class=3D"section"><=
a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_addition=
al_import_configuration_properties">7.2.15. Additional Import Configuration=
 Properties</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D=
"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocatio=
ns">7.3. Example Invocations</a></span></dt></dl></dd><dt><span class=3D"se=
ction"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_=
literal_sqoop_import_all_tables_literal">8. <code class=3D"literal">sqoop-i=
mport-all-tables</code></a></span></dt><dd><dl><dt><span class=3D"section">=
<a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpose=
_2">8.1. Purpose</a></span></dt><dt><span class=3D"section"><a href=3D"http=
s://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_2">8.2. Syntax<=
/a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.=
org/docs/1.4.6/SqoopUserGuide.html#_example_invocations_2">8.3. Example Inv=
ocations</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_literal_sqoop_import=
_mainframe_literal">9. <code class=3D"literal">sqoop-import-mainframe</code=
></a></span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqo=
op.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_3">9.1. Purpose</a></=
span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/d=
ocs/1.4.6/SqoopUserGuide.html#_syntax_3">9.2. Syntax</a></span></dt><dd><dl=
><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6=
/SqoopUserGuide.html#_connecting_to_a_mainframe">9.2.1. Connecting to a Mai=
nframe</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.=
apache.org/docs/1.4.6/SqoopUserGuide.html#_selecting_the_files_to_import">9=
.2.2. Selecting the Files to Import</a></span></dt><dt><span class=3D"secti=
on"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_con=
trolling_parallelism_2">9.2.3. Controlling Parallelism</a></span></dt><dt><=
span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoop=
UserGuide.html#_controlling_distributed_cache_2">9.2.4. Controlling Distrib=
uted Cache</a></span></dt><dt><span class=3D"section"><a href=3D"https://sq=
oop.apache.org/docs/1.4.6/SqoopUserGuide.html#_controlling_the_import_proce=
ss_2">9.2.5. Controlling the Import Process</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_file_formats_2">9.2.6. File Formats</a></span></dt><dt><span class=3D=
"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.htm=
l#_importing_data_into_hive_2">9.2.7. Importing Data Into Hive</a></span></=
dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4=
.6/SqoopUserGuide.html#_importing_data_into_hbase_2">9.2.8. Importing Data =
Into HBase</a></span></dt><dt><span class=3D"section"><a href=3D"https://sq=
oop.apache.org/docs/1.4.6/SqoopUserGuide.html#_importing_data_into_accumulo=
_2">9.2.9. Importing Data Into Accumulo</a></span></dt><dt><span class=3D"s=
ection"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#=
_additional_import_configuration_properties_2">9.2.10. Additional Import Co=
nfiguration Properties</a></span></dt></dl></dd><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_exampl=
e_invocations_3">9.3. Example Invocations</a></span></dt></dl></dd><dt><spa=
n class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUse=
rGuide.html#_literal_sqoop_export_literal">10. <code class=3D"literal">sqoo=
p-export</code></a></span></dt><dd><dl><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_4">10.=
1. Purpose</a></span></dt><dt><span class=3D"section"><a href=3D"https://sq=
oop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_4">10.2. Syntax</a></=
span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/d=
ocs/1.4.6/SqoopUserGuide.html#_inserts_vs_updates">10.3. Inserts vs. Update=
s</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apach=
e.org/docs/1.4.6/SqoopUserGuide.html#_exports_and_transactions">10.4. Expor=
ts and Transactions</a></span></dt><dt><span class=3D"section"><a href=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_failed_exports">10.=
5. Failed Exports</a></span></dt><dt><span class=3D"section"><a href=3D"htt=
ps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations_4=
">10.6. Example Invocations</a></span></dt></dl></dd><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#va=
lidation">11. <code class=3D"literal">validation</code></a></span></dt><dd>=
<dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.=
4.6/SqoopUserGuide.html#_purpose_5">11.1. Purpose</a></span></dt><dt><span =
class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserG=
uide.html#_introduction_2">11.2. Introduction</a></span></dt><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_syntax_5">11.3. Syntax</a></span></dt><dt><span class=3D"section"><a=
 href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_configura=
tion">11.4. Configuration</a></span></dt><dt><span class=3D"section"><a hre=
f=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_limitations">=
11.5. Limitations</a></span></dt><dt><span class=3D"section"><a href=3D"htt=
ps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations_5=
">11.6. Example Invocations</a></span></dt></dl></dd><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_s=
aved_jobs">12. Saved Jobs</a></span></dt><dt><span class=3D"section"><a hre=
f=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_literal_sqoop=
_job_literal">13. <code class=3D"literal">sqoop-job</code></a></span></dt><=
dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_purpose_6">13.1. Purpose</a></span></dt><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_syntax_6">13.2. Syntax</a></span></dt><dt><span class=3D"sect=
ion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_sa=
ved_jobs_and_passwords">13.3. Saved jobs and passwords</a></span></dt><dt><=
span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoop=
UserGuide.html#_saved_jobs_and_incremental_imports">13.4. Saved jobs and in=
cremental imports</a></span></dt></dl></dd><dt><span class=3D"section"><a h=
ref=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_literal_sqo=
op_metastore_literal">14. <code class=3D"literal">sqoop-metastore</code></a=
></span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_7">14.1. Purpose</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_syntax_7">14.2. Syntax</a></span></dt></dl></dd=
><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6=
/SqoopUserGuide.html#_literal_sqoop_merge_literal">15. <code class=3D"liter=
al">sqoop-merge</code></a></span></dt><dd><dl><dt><span class=3D"section"><=
a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_=
8">15.1. Purpose</a></span></dt><dt><span class=3D"section"><a href=3D"http=
s://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_8">15.2. Syntax=
</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://sq=
oop.apache.org/docs/1.4.6/SqoopUserGuide.html#_literal_sqoop_codegen_litera=
l">16. <code class=3D"literal">sqoop-codegen</code></a></span></dt><dd><dl>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_purpose_9">16.1. Purpose</a></span></dt><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_syntax_9">16.2. Syntax</a></span></dt><dt><span class=3D"section"><a=
 href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_i=
nvocations_6">16.3. Example Invocations</a></span></dt></dl></dd><dt><span =
class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserG=
uide.html#_literal_sqoop_create_hive_table_literal">17. <code class=3D"lite=
ral">sqoop-create-hive-table</code></a></span></dt><dd><dl><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_purpose_10">17.1. Purpose</a></span></dt><dt><span class=3D"section">=
<a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_=
10">17.2. Syntax</a></span></dt><dt><span class=3D"section"><a href=3D"http=
s://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations_7"=
>17.3. Example Invocations</a></span></dt></dl></dd><dt><span class=3D"sect=
ion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_li=
teral_sqoop_eval_literal">18. <code class=3D"literal">sqoop-eval</code></a>=
</span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.ap=
ache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_11">18.1. Purpose</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_syntax_11">18.2. Syntax</a></span></dt><dt><spa=
n class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUse=
rGuide.html#_example_invocations_8">18.3. Example Invocations</a></span></d=
t></dl></dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org=
/docs/1.4.6/SqoopUserGuide.html#_literal_sqoop_list_databases_literal">19. =
<code class=3D"literal">sqoop-list-databases</code></a></span></dt><dd><dl>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_purpose_12">19.1. Purpose</a></span></dt><dt><span cla=
ss=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuid=
e.html#_syntax_12">19.2. Syntax</a></span></dt><dt><span class=3D"section">=
<a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example=
_invocations_9">19.3. Example Invocations</a></span></dt></dl></dd><dt><spa=
n class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUse=
rGuide.html#_literal_sqoop_list_tables_literal">20. <code class=3D"literal"=
>sqoop-list-tables</code></a></span></dt><dd><dl><dt><span class=3D"section=
"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpo=
se_13">20.1. Purpose</a></span></dt><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_13">20.2. S=
yntax</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations_10">20.3. Exa=
mple Invocations</a></span></dt></dl></dd><dt><span class=3D"section"><a hr=
ef=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_literal_sqoo=
p_help_literal">21. <code class=3D"literal">sqoop-help</code></a></span></d=
t><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/d=
ocs/1.4.6/SqoopUserGuide.html#_purpose_14">21.1. Purpose</a></span></dt><dt=
><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqo=
opUserGuide.html#_syntax_14">21.2. Syntax</a></span></dt><dt><span class=3D=
"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.htm=
l#_example_invocations_11">21.3. Example Invocations</a></span></dt></dl></=
dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4=
.6/SqoopUserGuide.html#_literal_sqoop_version_literal">22. <code class=3D"l=
iteral">sqoop-version</code></a></span></dt><dd><dl><dt><span class=3D"sect=
ion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_pu=
rpose_15">22.1. Purpose</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_15">22.=
2. Syntax</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqo=
op.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations_12">22.3.=
 Example Invocations</a></span></dt></dl></dd><dt><span class=3D"section"><=
a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_sqoop_hc=
atalog_integration">23. Sqoop-HCatalog Integration</a></span></dt><dd><dl><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_hcatalog_background">23.1. HCatalog Background</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_exposing_hcatalog_tables_to_sqoop">23.2. Exposi=
ng HCatalog Tables to Sqoop</a></span></dt><dd><dl><dt><span class=3D"secti=
on"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_new=
_command_line_options">23.2.1. New Command Line Options</a></span></dt><dt>=
<span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoo=
pUserGuide.html#_supported_sqoop_hive_options">23.2.2. Supported Sqoop Hive=
 Options</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoo=
p.apache.org/docs/1.4.6/SqoopUserGuide.html#_direct_mode_support">23.2.3. D=
irect Mode support</a></span></dt><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_unsupported_sqoop_op=
tions">23.2.4. Unsupported Sqoop Options</a></span></dt><dd><dl><dt><span c=
lass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGu=
ide.html#_unsupported_sqoop_hive_import_options">23.2.4.1. Unsupported Sqoo=
p Hive Import Options</a></span></dt><dt><span class=3D"section"><a href=3D=
"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_unsupported_sqoop=
_export_and_import_options">23.2.4.2. Unsupported Sqoop Export and Import O=
ptions</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"http=
s://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_ignored_sqoop_options"=
>23.2.5. Ignored Sqoop Options</a></span></dt></dl></dd><dt><span class=3D"=
section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html=
#_automatic_table_creation">23.3. Automatic Table Creation</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_delimited_text_formats_and_field_and_line_delimiter_cha=
racters">23.4. Delimited Text Formats and Field and Line Delimiter Characte=
rs</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apac=
he.org/docs/1.4.6/SqoopUserGuide.html#_hcatalog_table_requirements">23.5. H=
Catalog Table Requirements</a></span></dt><dt><span class=3D"section"><a hr=
ef=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_support_for_=
partitioning">23.6. Support for Partitioning</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_schema_mapping">23.7. Schema Mapping</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_support_for_hcatalog_data_types">23.8. Support for HCatalog Data Type=
s</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apach=
e.org/docs/1.4.6/SqoopUserGuide.html#_providing_hive_and_hcatalog_libraries=
_for_the_sqoop_job">23.9. Providing Hive and HCatalog Libraries for the Sqo=
op Job</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.=
apache.org/docs/1.4.6/SqoopUserGuide.html#_examples">23.10. Examples</a></s=
pan></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/do=
cs/1.4.6/SqoopUserGuide.html#_import">23.11. Import</a></span></dt><dt><spa=
n class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUse=
rGuide.html#_export">23.12. Export</a></span></dt></dl></dd><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_compatibility_notes">24. Compatibility Notes</a></span></dt><dd><dl><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_supported_databases">24.1. Supported Databases</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_mysql">24.2. MySQL</a></span></dt><dd><dl><dt><=
span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoop=
UserGuide.html#_zerodatetimebehavior">24.2.1. zeroDateTimeBehavior</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_literal_unsigned_literal_columns">24.2.2. <code=
 class=3D"literal">UNSIGNED</code> columns</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_literal_blob_literal_and_literal_clob_literal_columns">24.2.3. <code =
class=3D"literal">BLOB</code> and <code class=3D"literal">CLOB</code> colum=
ns</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apac=
he.org/docs/1.4.6/SqoopUserGuide.html#_importing_views_in_direct_mode">24.2=
.4. Importing views in direct mode</a></span></dt></dl></dd><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_postgresql">24.3. PostgreSQL</a></span></dt><dd><dl><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_importing_views_in_direct_mode_2">24.3.1. Importing views in direct m=
ode</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oracle">24.4. Oracle</a><=
/span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_dates_and_times">24.4.1. Dates and =
Times</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https=
://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_schema_definition_in_hi=
ve">24.5. Schema Definition in Hive</a></span></dt><dt><span class=3D"secti=
on"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_cub=
rid">24.6. CUBRID</a></span></dt></dl></dd><dt><span class=3D"section"><a h=
ref=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#connectors">=
25. Notes for specific connectors</a></span></dt><dd><dl><dt><span class=3D=
"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.htm=
l#_mysql_jdbc_connector">25.1. MySQL JDBC Connector</a></span></dt><dd><dl>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_upsert_functionality">25.1.1. Upsert functionality</a>=
</span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://sqoop.=
apache.org/docs/1.4.6/SqoopUserGuide.html#_mysql_direct_connector">25.2. My=
SQL Direct Connector</a></span></dt><dd><dl><dt><span class=3D"section"><a =
href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_requiremen=
ts">25.2.1. Requirements</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_limitations_2"=
>25.2.2. Limitations</a></span></dt><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_direct_mode_transa=
ctions">25.2.3. Direct-mode Transactions</a></span></dt></dl></dd><dt><span=
 class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUser=
Guide.html#_microsoft_sql_connector">25.3. Microsoft SQL Connector</a></spa=
n></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.=
org/docs/1.4.6/SqoopUserGuide.html#_extra_arguments">25.3.1. Extra argument=
s</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apach=
e.org/docs/1.4.6/SqoopUserGuide.html#_allow_identity_inserts">25.3.2. Allow=
 identity inserts</a></span></dt><dt><span class=3D"section"><a href=3D"htt=
ps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_non_resilient_operati=
ons">25.3.3. Non-resilient operations</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_s=
chema_support">25.3.4. Schema support</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_t=
able_hints">25.3.5. Table hints</a></span></dt></dl></dd><dt><span class=3D=
"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.htm=
l#_postgresql_connector">25.4. PostgreSQL Connector</a></span></dt><dd><dl>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_extra_arguments_2">25.4.1. Extra arguments</a></span><=
/dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.=
4.6/SqoopUserGuide.html#_schema_support_2">25.4.2. Schema support</a></span=
></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache=
.org/docs/1.4.6/SqoopUserGuide.html#_postgresql_direct_connector">25.5. Pos=
tgreSQL Direct Connector</a></span></dt><dd><dl><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_requir=
ements_2">25.5.1. Requirements</a></span></dt><dt><span class=3D"section"><=
a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_limitati=
ons_3">25.5.2. Limitations</a></span></dt></dl></dd><dt><span class=3D"sect=
ion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_pg=
_bulkload_connector">25.6. pg_bulkload connector</a></span></dt><dd><dl><dt=
><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqo=
opUserGuide.html#_purpose_16">25.6.1. Purpose</a></span></dt><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_requirements_3">25.6.2. Requirements</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_syntax_16">25.6.3. Syntax</a></span></dt><dt><span class=3D"section">=
<a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_data_st=
aging">25.6.4. Data Staging</a></span></dt></dl></dd><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_n=
etezza_connector">25.7. Netezza Connector</a></span></dt><dd><dl><dt><span =
class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserG=
uide.html#_extra_arguments_3">25.7.1. Extra arguments</a></span></dt><dt><s=
pan class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopU=
serGuide.html#_direct_mode">25.7.2. Direct Mode</a></span></dt><dt><span cl=
ass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGui=
de.html#_null_string_handling">25.7.3. Null string handling</a></span></dt>=
</dl></dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/d=
ocs/1.4.6/SqoopUserGuide.html#_data_connector_for_oracle_and_hadoop">25.8. =
Data Connector for Oracle and Hadoop</a></span></dt><dd><dl><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_about">25.8.1. About</a></span></dt><dd><dl><dt><span class=3D"sectio=
n"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_jobs=
">25.8.1.1. Jobs</a></span></dt><dt><span class=3D"section"><a href=3D"http=
s://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_how_the_standard_oracl=
e_manager_works_for_imports">25.8.1.2. How The Standard Oracle Manager Work=
s for Imports</a></span></dt><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_how_the_data_connector_fo=
r_oracle_and_hadoop_works_for_imports">25.8.1.3. How The Data Connector for=
 Oracle and Hadoop Works for Imports</a></span></dt><dt><span class=3D"sect=
ion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_da=
ta_connector_for_oracle_and_hadoop_exports">25.8.1.4. Data Connector for Or=
acle and Hadoop Exports</a></span></dt></dl></dd><dt><span class=3D"section=
"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_requi=
rements_4">25.8.2. Requirements</a></span></dt><dd><dl><dt><span class=3D"s=
ection"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#=
_ensure_the_oracle_database_jdbc_driver_is_setup_correctly">25.8.2.1. Ensur=
e The Oracle Database JDBC Driver Is Setup Correctly</a></span></dt><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_oracle_roles_and_privileges">25.8.2.2. Oracle Roles and Privi=
leges</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_additional_oracle_roles_and_privi=
leges_required_for_export">25.8.2.3. Additional Oracle Roles And Privileges=
 Required for Export</a></span></dt><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_supported_data_typ=
es">25.8.2.4. Supported Data Types</a></span></dt></dl></dd><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_execute_sqoop_with_data_connector_for_oracle_and_hadoop">25.8.3. Exec=
ute Sqoop With Data Connector for Oracle and Hadoop</a></span></dt><dd><dl>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_connect_to_oracle_oracle_rac">25.8.3.1. Connect to Ora=
cle / Oracle RAC</a></span></dt><dt><span class=3D"section"><a href=3D"http=
s://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_connect_to_an_oracle_d=
atabase_instance">25.8.3.2. Connect to An Oracle Database Instance</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_connect_to_an_oracle_rac">25.8.3.3. Connect to =
An Oracle RAC</a></span></dt><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_login_to_the_oracle_insta=
nce">25.8.3.4. Login to The Oracle Instance</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_kill_data_connector_for_oracle_and_hadoop_jobs">25.8.3.5. Kill Data C=
onnector for Oracle and Hadoop Jobs</a></span></dt></dl></dd><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_import_data_from_oracle">25.8.4. Import Data from Oracle</a></span><=
/dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org=
/docs/1.4.6/SqoopUserGuide.html#_match_hadoop_files_to_oracle_table_partiti=
ons">25.8.4.1. Match Hadoop Files to Oracle Table Partitions</a></span></dt=
><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6=
/SqoopUserGuide.html#_specify_the_partitions_to_import">25.8.4.2. Specify T=
he Partitions To Import</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_consistent_rea=
d_all_mappers_read_from_the_same_point_in_time">25.8.4.3. Consistent Read: =
All Mappers Read From The Same Point In Time</a></span></dt></dl></dd><dt><=
span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoop=
UserGuide.html#_export_data_into_oracle">25.8.5. Export Data into Oracle</a=
></span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_insert_export">25.8.5.1. Insert-E=
xport</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_update_export">25.8.5.2. Update-E=
xport</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_merge_export">25.8.5.3. Merge-Exp=
ort</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_create_oracle_tables">25.8.5.4. Cre=
ate Oracle Tables</a></span></dt><dt><span class=3D"section"><a href=3D"htt=
ps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_nologging">25.8.5.5. =
NOLOGGING</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqo=
op.apache.org/docs/1.4.6/SqoopUserGuide.html#_partitioning">25.8.5.6. Parti=
tioning</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop=
.apache.org/docs/1.4.6/SqoopUserGuide.html#_match_rows_via_multiple_columns=
">25.8.5.7. Match Rows Via Multiple Columns</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_storage_clauses">25.8.5.8. Storage Clauses</a></span></dt></dl></dd><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_manage_date_and_timestamp_data_types">25.8.6. Manage Da=
te And Timestamp Data Types</a></span></dt><dd><dl><dt><span class=3D"secti=
on"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_imp=
ort_date_and_timestamp_data_types_from_oracle">25.8.6.1. Import Date And Ti=
mestamp Data Types from Oracle</a></span></dt><dt><span class=3D"section"><=
a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_the_data=
_connector_for_oracle_and_hadoop_does_not_apply_a_time_zone_to_date_timesta=
mp_data_types">25.8.6.2. The Data Connector for Oracle and Hadoop Does Not =
Apply A Time Zone to DATE / TIMESTAMP Data Types</a></span></dt><dt><span c=
lass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGu=
ide.html#_the_data_connector_for_oracle_and_hadoop_retains_time_zone_inform=
ation_in_timezone_data_types">25.8.6.3. The Data Connector for Oracle and H=
adoop Retains Time Zone Information in TIMEZONE Data Types</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_data_connector_for_oracle_and_hadoop_explicitly_states_=
time_zone_for_local_timezone_data_types">25.8.6.4. Data Connector for Oracl=
e and Hadoop Explicitly States Time Zone for LOCAL TIMEZONE Data Types</a><=
/span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/=
docs/1.4.6/SqoopUserGuide.html#_java_sql_timestamp">25.8.6.5. java.sql.Time=
stamp</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_export_date_and_timestamp_data_ty=
pes_into_oracle">25.8.6.6. Export Date And Timestamp Data Types into Oracle=
</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://sq=
oop.apache.org/docs/1.4.6/SqoopUserGuide.html#_configure_the_data_connector=
_for_oracle_and_hadoop">25.8.7. Configure The Data Connector for Oracle and=
 Hadoop</a></span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https=
://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_site_template_xm=
l">25.8.7.1. oraoop-site-template.xml</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_o=
raoop_oracle_session_initialization_statements">25.8.7.2. oraoop.oracle.ses=
sion.initialization.statements</a></span></dt><dt><span class=3D"section"><=
a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_t=
able_import_where_clause_location">25.8.7.3. oraoop.table.import.where.clau=
se.location</a></span></dt><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oracle_row_fetch_size">25.8=
.7.4. oracle.row.fetch.size</a></span></dt><dt><span class=3D"section"><a h=
ref=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_impo=
rt_hint">25.8.7.5. oraoop.import.hint</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_o=
raoop_oracle_append_values_hint_usage">25.8.7.6. oraoop.oracle.append.value=
s.hint.usage</a></span></dt><dt><span class=3D"section"><a href=3D"https://=
sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_mapred_map_tasks_speculati=
ve_execution">25.8.7.7. mapred.map.tasks.speculative.execution</a></span></=
dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4=
.6/SqoopUserGuide.html#_oraoop_block_allocation">25.8.7.8. oraoop.block.all=
ocation</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop=
.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_import_omit_lobs_and_lon=
g">25.8.7.9. oraoop.import.omit.lobs.and.long</a></span></dt><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_oraoop_locations">25.8.7.10. oraoop.locations</a></span></dt><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_sqoop_connection_factories">25.8.7.11. sqoop.connection.facto=
ries</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.ap=
ache.org/docs/1.4.6/SqoopUserGuide.html#_expressions_in_oraoop_site_xml">25=
.8.7.12. Expressions in oraoop-site.xml</a></span></dt></dl></dd><dt><span =
class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserG=
uide.html#_troubleshooting_the_data_connector_for_oracle_and_hadoop">25.8.8=
. Troubleshooting The Data Connector for Oracle and Hadoop</a></span></dt><=
dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_quote_oracle_owners_and_tables">25.8.8.1. Quote=
 Oracle Owners And Tables</a></span></dt><dt><span class=3D"section"><a hre=
f=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_quote_oracle_=
columns">25.8.8.2. Quote Oracle Columns</a></span></dt><dt><span class=3D"s=
ection"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#=
_confirm_the_data_connector_for_oracle_and_hadoop_can_initialize_the_oracle=
_session">25.8.8.3. Confirm The Data Connector for Oracle and Hadoop Can In=
itialize The Oracle Session</a></span></dt><dt><span class=3D"section"><a h=
ref=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_check_the_s=
qoop_debug_logs_for_error_messages">25.8.8.4. Check The Sqoop Debug Logs fo=
r Error Messages</a></span></dt><dt><span class=3D"section"><a href=3D"http=
s://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_export_check_tables_ar=
e_compatible">25.8.8.5. Export: Check Tables Are Compatible</a></span></dt>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_export_parallelization">25.8.8.6. Export: Parallelizat=
ion</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_export_check_oraoop_oracle_append_v=
alues_hint_usage">25.8.8.7. Export: Check oraoop.oracle.append.values.hint.=
usage</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_turn_on_verbose">25.8.8.8. Turn O=
n Verbose</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=3D"s=
ection"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#=
_getting_support">26. Getting Support</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_t=
roubleshooting">27. Troubleshooting</a></span></dt><dd><dl><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_general_troubleshooting_process">27.1. General Troubleshooting Proces=
s</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apach=
e.org/docs/1.4.6/SqoopUserGuide.html#_specific_troubleshooting_tips">27.2. =
Specific Troubleshooting Tips</a></span></dt><dd><dl><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_o=
racle_connection_reset_errors">27.2.1. Oracle: Connection Reset Errors</a><=
/span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/=
docs/1.4.6/SqoopUserGuide.html#_oracle_case_sensitive_catalog_query_errors"=
>27.2.2. Oracle: Case-Sensitive Catalog Query Errors</a></span></dt><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_mysql_connection_failure">27.2.3. MySQL: Connection Failure</=
a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.o=
rg/docs/1.4.6/SqoopUserGuide.html#_oracle_ora_00933_error_sql_command_not_p=
roperly_ended">27.2.4. Oracle: ORA-00933 error (SQL command not properly en=
ded)</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.ap=
ache.org/docs/1.4.6/SqoopUserGuide.html#_mysql_import_of_tinyint_1_from_mys=
ql_behaves_strangely">27.2.5. MySQL: Import of TINYINT(1) from MySQL behave=
s strangely</a></span></dt></dl></dd></dl></dd></dl></div><pre class=3D"scr=
een">  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.</pre><div class=3D"section" title=3D"1.&nb=
sp;Introduction"><div class=3D"titlepage"><div><div><h2 class=3D"title" sty=
le=3D"clear: both"><a name=3D"_introduction"></a>1.&nbsp;Introduction</h2><=
/div></div></div><p>Sqoop is a tool designed to transfer data between Hadoo=
p and
relational databases or mainframes. You can use Sqoop to import data from a
relational database management system (RDBMS) such as MySQL or Oracle or a
mainframe into the Hadoop Distributed File System (HDFS),
transform the data in Hadoop MapReduce, and then export the data back
into an RDBMS.</p><p>Sqoop automates most of this process, relying on the d=
atabase to
describe the schema for the data to be imported. Sqoop uses MapReduce
to import and export the data, which provides parallel operation as
well as fault tolerance.</p><p>This document describes how to get started u=
sing Sqoop to move data
between databases and Hadoop or mainframe to Hadoop and provides reference
information for the operation of the Sqoop command-line tool suite. This
document is intended for:</p><div class=3D"itemizedlist"><ul class=3D"itemi=
zedlist" type=3D"disc"><li class=3D"listitem">
System and application programmers
</li><li class=3D"listitem">
System administrators
</li><li class=3D"listitem">
Database administrators
</li><li class=3D"listitem">
Data analysts
</li><li class=3D"listitem">
Data engineers
</li></ul></div></div><div class=3D"section" title=3D"2.&nbsp;Supported Rel=
eases"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clea=
r: both"><a name=3D"_supported_releases"></a>2.&nbsp;Supported Releases</h2=
></div></div></div><p>This documentation applies to Sqoop v1.4.6.</p></div>=
<div class=3D"section" title=3D"3.&nbsp;Sqoop Releases"><div class=3D"title=
page"><div><div><h2 class=3D"title" style=3D"clear: both"><a name=3D"_sqoop=
_releases"></a>3.&nbsp;Sqoop Releases</h2></div></div></div><p>Sqoop is an =
open source software product of the Apache Software Foundation.</p><p>Softw=
are development for Sqoop occurs at <a class=3D"ulink" href=3D"http://sqoop=
.apache.org/" target=3D"_top">http://sqoop.apache.org</a>
At that site you can obtain:</p><div class=3D"itemizedlist"><ul class=3D"it=
emizedlist" type=3D"disc"><li class=3D"listitem">
New releases of Sqoop as well as its most recent source code
</li><li class=3D"listitem">
An issue tracker
</li><li class=3D"listitem">
A wiki that contains Sqoop documentation
</li></ul></div></div><div class=3D"section" title=3D"4.&nbsp;Prerequisites=
"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: bo=
th"><a name=3D"_prerequisites"></a>4.&nbsp;Prerequisites</h2></div></div></=
div><p>The following prerequisite knowledge is required for this product:</=
p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li =
class=3D"listitem">
Basic computer technology and terminology
</li><li class=3D"listitem">
Familiarity with command-line interfaces such as <code class=3D"literal">ba=
sh</code>
</li><li class=3D"listitem">
Relational database management systems
</li><li class=3D"listitem">
Basic familiarity with the purpose and operation of Hadoop
</li></ul></div><p>Before you can use Sqoop, a release of Hadoop must be in=
stalled and
configured. Sqoop is currently supporting 4 major Hadoop releases - 0.20,
0.23, 1.0 and 2.0.</p><p>This document assumes you are using a Linux or Lin=
ux-like environment.
If you are using Windows, you may be able to use cygwin to accomplish
most of the following tasks. If you are using Mac OS X, you should see
few (if any) compatibility errors. Sqoop is predominantly operated and
tested on Linux.</p></div><div class=3D"section" title=3D"5.&nbsp;Basic Usa=
ge"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: =
both"><a name=3D"_basic_usage"></a>5.&nbsp;Basic Usage</h2></div></div></di=
v><p>With Sqoop, you can <span class=3D"emphasis"><em>import</em></span> da=
ta from a relational database system or a
mainframe into HDFS. The input to the import process is either database tab=
le
or mainframe datasets. For databases, Sqoop will read the table row-by-row
into HDFS.  For mainframe datasets, Sqoop will read records from each mainf=
rame
dataset into HDFS. The output of this import process is a set of files
containing a copy of the imported table or datasets.
The import process is performed in parallel. For this reason, the
output will be in multiple files. These files may be delimited text
files (for example, with commas or tabs separating each field), or
binary Avro or SequenceFiles containing serialized record data.</p><p>A by-=
product of the import process is a generated Java class which
can encapsulate one row of the imported table. This class is used
during the import process by Sqoop itself. The Java source code for
this class is also provided to you, for use in subsequent MapReduce
processing of the data. This class can serialize and deserialize data
to and from the SequenceFile format. It can also parse the
delimited-text form of a record. These abilities allow you to quickly
develop MapReduce applications that use the HDFS-stored records in
your processing pipeline. You are also free to parse the delimiteds
record data yourself, using any other tools you prefer.</p><p>After manipul=
ating the imported records (for example, with MapReduce
or Hive) you may have a result data set which you can then <span class=3D"e=
mphasis"><em>export</em></span>
back to the relational database. Sqoop=92s export process will read
a set of delimited text files from HDFS in parallel, parse them into
records, and insert them as new rows in a target database table, for
consumption by external applications or users.</p><p>Sqoop includes some ot=
her commands which allow you to inspect the
database you are working with. For example, you can list the available
database schemas (with the <code class=3D"literal">sqoop-list-databases</co=
de> tool) and tables
within a schema (with the <code class=3D"literal">sqoop-list-tables</code> =
tool). Sqoop also
includes a primitive SQL execution shell (the <code class=3D"literal">sqoop=
-eval</code> tool).</p><p>Most aspects of the import, code generation, and =
export processes can
be customized. For databases, you can control the specific row range or
columns imported.  You can specify particular delimiters and escape charact=
ers
for the file-based representation of the data, as well as the file format
used.  You can also control the class or package names used in
generated code. Subsequent sections of this document explain how to
specify these and other arguments to Sqoop.</p></div><div class=3D"section"=
 title=3D"6.&nbsp;Sqoop Tools"><div class=3D"titlepage"><div><div><h2 class=
=3D"title" style=3D"clear: both"><a name=3D"_sqoop_tools"></a>6.&nbsp;Sqoop=
 Tools</h2></div></div></div><div class=3D"toc"><dl><dt><span class=3D"sect=
ion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_us=
ing_command_aliases">6.1. Using Command Aliases</a></span></dt><dt><span cl=
ass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGui=
de.html#_controlling_the_hadoop_installation">6.2. Controlling the Hadoop I=
nstallation</a></span></dt><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_using_generic_and_specific_=
arguments">6.3. Using Generic and Specific Arguments</a></span></dt><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_using_options_files_to_pass_arguments">6.4. Using Options Fil=
es to Pass Arguments</a></span></dt><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_using_tools">6.5. =
Using Tools</a></span></dt></dl></div><p>Sqoop is a collection of related t=
ools. To use Sqoop, you specify the
tool you want to use and the arguments that control the tool.</p><p>If Sqoo=
p is compiled from its own source, you can run Sqoop without a formal
installation process by running the <code class=3D"literal">bin/sqoop</code=
> program. Users
of a packaged deployment of Sqoop (such as an RPM shipped with Apache Bigto=
p)
will see this program installed as <code class=3D"literal">/usr/bin/sqoop</=
code>. The remainder of this
documentation will refer to this program as <code class=3D"literal">sqoop</=
code>. For example:</p><pre class=3D"screen">$ sqoop tool-name [tool-argume=
nts]</pre><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; m=
argin-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td ro=
wspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]=
" src=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th alig=
n=3D"left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>The follo=
wing examples that begin with a <code class=3D"literal">$</code> character =
indicate
that the commands must be entered at a terminal prompt (such as
<code class=3D"literal">bash</code>). The <code class=3D"literal">$</code> =
character represents the prompt itself; you should
not start these commands by typing a <code class=3D"literal">$</code>. You =
can also enter commands
inline in the text of a paragraph; for example, <code class=3D"literal">sqo=
op help</code>. These
examples do not show a <code class=3D"literal">$</code> prefix, but you sho=
uld enter them the same
way.  Don=92t confuse the <code class=3D"literal">$</code> shell prompt in =
the examples with the <code class=3D"literal">$</code>
that precedes an environment variable name. For example, the string
literal <code class=3D"literal">$HADOOP_HOME</code> includes a "<code class=
=3D"literal">$</code>".</p></td></tr></tbody></table></div><p>Sqoop ships w=
ith a help tool. To display a list of all available
tools, type the following command:</p><pre class=3D"screen">$ sqoop help
usage: sqoop COMMAND [ARGS]

Available commands:
  codegen            Generate code to interact with database records
  create-hive-table  Import a table definition into Hive
  eval               Evaluate a SQL statement and display the results
  export             Export an HDFS directory to a database table
  help               List available commands
  import             Import a table from a database to HDFS
  import-all-tables  Import tables from a database to HDFS
  import-mainframe   Import mainframe datasets to HDFS
  list-databases     List available databases on a server
  list-tables        List available tables in a database
  version            Display version information

See 'sqoop help COMMAND' for information on a specific command.</pre><p>You=
 can display help for a specific tool by entering: <code class=3D"literal">=
sqoop help
(tool-name)</code>; for example, <code class=3D"literal">sqoop help import<=
/code>.</p><p>You can also add the <code class=3D"literal">--help</code> ar=
gument to any command: <code class=3D"literal">sqoop import
--help</code>.</p><div class=3D"section" title=3D"6.1.&nbsp;Using Command A=
liases"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_=
using_command_aliases"></a>6.1.&nbsp;Using Command Aliases</h3></div></div>=
</div><p>In addition to typing the <code class=3D"literal">sqoop (toolname)=
</code> syntax, you can use alias
scripts that specify the <code class=3D"literal">sqoop-(toolname)</code> sy=
ntax. For example, the
scripts <code class=3D"literal">sqoop-import</code>, <code class=3D"literal=
">sqoop-export</code>, etc. each select a specific
tool.</p></div><div class=3D"section" title=3D"6.2.&nbsp;Controlling the Ha=
doop Installation"><div class=3D"titlepage"><div><div><h3 class=3D"title"><=
a name=3D"_controlling_the_hadoop_installation"></a>6.2.&nbsp;Controlling t=
he Hadoop Installation</h3></div></div></div><p>You invoke Sqoop through th=
e program launch capability provided by
Hadoop. The <code class=3D"literal">sqoop</code> command-line program is a =
wrapper which runs the
<code class=3D"literal">bin/hadoop</code> script shipped with Hadoop. If yo=
u have multiple
installations of Hadoop present on your machine, you can select the
Hadoop installation by setting the <code class=3D"literal">$HADOOP_COMMON_H=
OME</code> and
<code class=3D"literal">$HADOOP_MAPRED_HOME</code> environment variables.</=
p><p>For example:</p><pre class=3D"screen">$ HADOOP_COMMON_HOME=3D/path/to/=
some/hadoop \
  HADOOP_MAPRED_HOME=3D/path/to/some/hadoop-mapreduce \
  sqoop import --arguments...</pre><p>or:</p><pre class=3D"screen">$ export=
 HADOOP_COMMON_HOME=3D/some/path/to/hadoop
$ export HADOOP_MAPRED_HOME=3D/some/path/to/hadoop-mapreduce
$ sqoop import --arguments...</pre><p>If either of these variables are not =
set, Sqoop will fall back to
<code class=3D"literal">$HADOOP_HOME</code>. If it is not set either, Sqoop=
 will use the default
installation locations for Apache Bigtop, <code class=3D"literal">/usr/lib/=
hadoop</code> and
<code class=3D"literal">/usr/lib/hadoop-mapreduce</code>, respectively.</p>=
<p>The active Hadoop configuration is loaded from <code class=3D"literal">$=
HADOOP_HOME/conf/</code>,
unless the <code class=3D"literal">$HADOOP_CONF_DIR</code> environment vari=
able is set.</p></div><div class=3D"section" title=3D"6.3.&nbsp;Using Gener=
ic and Specific Arguments"><div class=3D"titlepage"><div><div><h3 class=3D"=
title"><a name=3D"_using_generic_and_specific_arguments"></a>6.3.&nbsp;Usin=
g Generic and Specific Arguments</h3></div></div></div><p>To control the op=
eration of each Sqoop tool, you use generic and
specific arguments.</p><p>For example:</p><pre class=3D"screen">$ sqoop hel=
p import
usage: sqoop import [GENERIC-ARGS] [TOOL-ARGS]

Common arguments:
   --connect &lt;jdbc-uri&gt;     Specify JDBC connect string
   --connect-manager &lt;class-name&gt;     Specify connection manager clas=
s to use
   --driver &lt;class-name&gt;    Manually specify JDBC driver class to use
   --hadoop-mapred-home &lt;dir&gt;      Override $HADOOP_MAPRED_HOME
   --help                   Print usage instructions
   --password-file          Set path for file containing authentication pas=
sword
   -P                       Read password from console
   --password &lt;password&gt;    Set authentication password
   --username &lt;username&gt;    Set authentication username
   --verbose                Print more information while working
   --hadoop-home &lt;dir&gt;     Deprecated. Override $HADOOP_HOME

[...]

Generic Hadoop command-line arguments:
(must preceed any tool-specific arguments)
Generic options supported are
-conf &lt;configuration file&gt;     specify an application configuration f=
ile
-D &lt;property=3Dvalue&gt;            use value for given property
-fs &lt;local|namenode:port&gt;      specify a namenode
-jt &lt;local|jobtracker:port&gt;    specify a job tracker
-files &lt;comma separated list of files&gt;    specify comma separated fil=
es to be copied to the map reduce cluster
-libjars &lt;comma separated list of jars&gt;    specify comma separated ja=
r files to include in the classpath.
-archives &lt;comma separated list of archives&gt;    specify comma separat=
ed archives to be unarchived on the compute machines.

The general command line syntax is
bin/hadoop command [genericOptions] [commandOptions]</pre><p>You must suppl=
y the generic arguments <code class=3D"literal">-conf</code>, <code class=
=3D"literal">-D</code>, and so on after the
tool name but <span class=3D"strong"><strong>before</strong></span> any too=
l-specific arguments (such as
<code class=3D"literal">--connect</code>). Note that generic Hadoop argumen=
ts are preceeded by a
single dash character (<code class=3D"literal">-</code>), whereas tool-spec=
ific arguments start
with two dashes (<code class=3D"literal">--</code>), unless they are single=
 character arguments such as <code class=3D"literal">-P</code>.</p><p>The <=
code class=3D"literal">-conf</code>, <code class=3D"literal">-D</code>, <co=
de class=3D"literal">-fs</code> and <code class=3D"literal">-jt</code> argu=
ments control the configuration
and Hadoop server settings. For example, the <code class=3D"literal">-D map=
red.job.name=3D&lt;job_name&gt;</code> can
be used to set the name of the MR job that Sqoop launches, if not specified=
,
the name defaults to the jar name for the job - which is derived from the u=
sed
table name.</p><p>The <code class=3D"literal">-files</code>, <code class=3D=
"literal">-libjars</code>, and <code class=3D"literal">-archives</code> arg=
uments are not typically used with
Sqoop, but they are included as part of Hadoop=92s internal argument-parsin=
g
system.</p></div><div class=3D"section" title=3D"6.4.&nbsp;Using Options Fi=
les to Pass Arguments"><div class=3D"titlepage"><div><div><h3 class=3D"titl=
e"><a name=3D"_using_options_files_to_pass_arguments"></a>6.4.&nbsp;Using O=
ptions Files to Pass Arguments</h3></div></div></div><p>When using Sqoop, t=
he command line options that do not change from
invocation to invocation can be put in an options file for convenience.
An options file is a text file where each line identifies an option in
the order that it appears otherwise on the command line. Option files
allow specifying a single option on multiple lines by using the
back-slash character at the end of intermediate lines. Also supported
are comments within option files that begin with the hash character.
Comments must be specified on a new line and may not be mixed with
option text. All comments and empty lines are ignored when option
files are expanded. Unless options appear as quoted strings, any
leading or trailing spaces are ignored. Quoted strings if used must
not extend beyond the line on which they are specified.</p><p>Option files =
can be specified anywhere in the command line as long as
the options within them follow the otherwise prescribed rules of
options ordering. For instance, regardless of where the options are
loaded from, they must follow the ordering such that generic options
appear first, tool specific options next, finally followed by options
that are intended to be passed to child programs.</p><p>To specify an optio=
ns file, simply create an options file in a
convenient location and pass it to the command line via
<code class=3D"literal">--options-file</code> argument.</p><p>Whenever an o=
ptions file is specified, it is expanded on the
command line before the tool is invoked. You can specify more than
one option files within the same invocation if needed.</p><p>For example, t=
he following Sqoop invocation for import can
be specified alternatively as shown below:</p><pre class=3D"screen">$ sqoop=
 import --connect jdbc:mysql://localhost/db --username foo --table TEST

$ sqoop --options-file /users/homer/work/import.txt --table TEST</pre><p>wh=
ere the options file <code class=3D"literal">/users/homer/work/import.txt</=
code> contains the following:</p><pre class=3D"screen">import
--connect
jdbc:mysql://localhost/db
--username
foo</pre><p>The options file can have empty lines and comments for readabil=
ity purposes.
So the above example would work exactly the same if the options file
<code class=3D"literal">/users/homer/work/import.txt</code> contained the f=
ollowing:</p><pre class=3D"screen">#
# Options file for Sqoop import
#

# Specifies the tool being invoked
import

# Connect parameter and value
--connect
jdbc:mysql://localhost/db

# Username parameter and value
--username
foo

#
# Remaining options should be specified in the command line.
#</pre></div><div class=3D"section" title=3D"6.5.&nbsp;Using Tools"><div cl=
ass=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_using_tools"></=
a>6.5.&nbsp;Using Tools</h3></div></div></div><p>The following sections wil=
l describe each tool=92s operation. The
tools are listed in the most likely order you will find them useful.</p></d=
iv></div><div class=3D"section" title=3D"7.&nbsp;sqoop-import" data-find=3D=
"_2"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear:=
 both"><a name=3D"_literal_sqoop_import_literal"></a>7.&nbsp;<code class=3D=
"literal">sqoop-import</code></h2></div></div></div><div class=3D"toc"><dl>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_purpose">7.1. Purpose</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_syntax">7.2. Syntax</a></span></dt><dd><dl><dt><span class=3D"section=
"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_conne=
cting_to_a_database_server">7.2.1. Connecting to a Database Server</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_selecting_the_data_to_import">7.2.2. Selecting =
the Data to Import</a></span></dt><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_free_form_query_impo=
rts">7.2.3. Free-form Query Imports</a></span></dt><dt><span class=3D"secti=
on"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_con=
trolling_parallelism">7.2.4. Controlling Parallelism</a></span></dt><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_controlling_distributed_cache">7.2.5. Controlling Distributed=
 Cache</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.=
apache.org/docs/1.4.6/SqoopUserGuide.html#_controlling_the_import_process">=
7.2.6. Controlling the Import Process</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_c=
ontrolling_transaction_isolation">7.2.7. Controlling transaction isolation<=
/a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.=
org/docs/1.4.6/SqoopUserGuide.html#_controlling_type_mapping">7.2.8. Contro=
lling type mapping</a></span></dt><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_incremental_imports"=
>7.2.9. Incremental Imports</a></span></dt><dt><span class=3D"section"><a h=
ref=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_file_format=
s">7.2.10. File Formats</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_large_objects"=
>7.2.11. Large Objects</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_importing_data=
_into_hive">7.2.12. Importing Data Into Hive</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_importing_data_into_hbase">7.2.13. Importing Data Into HBase</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_importing_data_into_accumulo">7.2.14. Importing=
 Data Into Accumulo</a></span></dt><dt><span class=3D"section"><a href=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_additional_import_c=
onfiguration_properties">7.2.15. Additional Import Configuration Properties=
</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://sq=
oop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations">7.3. Ex=
ample Invocations</a></span></dt></dl></div><div class=3D"section" title=3D=
"7.1.&nbsp;Purpose"><div class=3D"titlepage"><div><div><h3 class=3D"title">=
<a name=3D"_purpose"></a>7.1.&nbsp;Purpose</h3></div></div></div><p>The <co=
de class=3D"literal">import</code> tool imports an individual table from an=
 RDBMS to HDFS.
Each row from a table is represented as a separate record in HDFS.
Records can be stored as text files (one record per line), or in
binary representation as Avro or SequenceFiles.</p></div><div class=3D"sect=
ion" title=3D"7.2.&nbsp;Syntax" data-find=3D"_1"><div class=3D"titlepage"><=
div><div><h3 class=3D"title"><a name=3D"_syntax"></a>7.2.&nbsp;Syntax</h3><=
/div></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_connecting_to_=
a_database_server">7.2.1. Connecting to a Database Server</a></span></dt><d=
t><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sq=
oopUserGuide.html#_selecting_the_data_to_import">7.2.2. Selecting the Data =
to Import</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqo=
op.apache.org/docs/1.4.6/SqoopUserGuide.html#_free_form_query_imports">7.2.=
3. Free-form Query Imports</a></span></dt><dt><span class=3D"section"><a hr=
ef=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_controlling_=
parallelism">7.2.4. Controlling Parallelism</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_controlling_distributed_cache">7.2.5. Controlling Distributed Cache</=
a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.o=
rg/docs/1.4.6/SqoopUserGuide.html#_controlling_the_import_process">7.2.6. C=
ontrolling the Import Process</a></span></dt><dt><span class=3D"section"><a=
 href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_controlli=
ng_transaction_isolation">7.2.7. Controlling transaction isolation</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_controlling_type_mapping">7.2.8. Controlling ty=
pe mapping</a></span></dt><dt><span class=3D"section"><a href=3D"https://sq=
oop.apache.org/docs/1.4.6/SqoopUserGuide.html#_incremental_imports">7.2.9. =
Incremental Imports</a></span></dt><dt><span class=3D"section"><a href=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_file_formats">7.2.1=
0. File Formats</a></span></dt><dt><span class=3D"section"><a href=3D"https=
://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_large_objects">7.2.11. =
Large Objects</a></span></dt><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_importing_data_into_hive"=
>7.2.12. Importing Data Into Hive</a></span></dt><dt><span class=3D"section=
"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_impor=
ting_data_into_hbase">7.2.13. Importing Data Into HBase</a></span></dt><dt>=
<span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoo=
pUserGuide.html#_importing_data_into_accumulo">7.2.14. Importing Data Into =
Accumulo</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoo=
p.apache.org/docs/1.4.6/SqoopUserGuide.html#_additional_import_configuratio=
n_properties">7.2.15. Additional Import Configuration Properties</a></span>=
</dt></dl></div><pre class=3D"screen">$ sqoop import (generic-args) (import=
-args)
$ sqoop-import (generic-args) (import-args)</pre><p>While the Hadoop generi=
c arguments must precede any import arguments,
you can type the import arguments in any order with respect to one
another.</p><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in;=
 margin-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td =
rowspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Not=
e]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th al=
ign=3D"left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>In this=
 document, arguments are grouped into collections
organized by function. Some collections are present in several tools
(for example, the "common" arguments). An extended description of their
functionality is given only on the first presentation in this
document.</p></td></tr></tbody></table></div><div class=3D"table"><a name=
=3D"idp29176"></a><p class=3D"title"><b>Table&nbsp;1.&nbsp;Common arguments=
</b></p><div class=3D"table-contents"><table summary=3D"Common arguments" s=
tyle=3D"border-collapse: collapse;border-top: 0.5pt solid ; border-bottom: =
0.5pt solid ; "><colgroup><col align=3D"left"><col align=3D"left"></colgrou=
p><thead><tr><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt =
solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connect &lt;jdbc-uri&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify JDBC connect string
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-manager &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify connection manager class to                                    =
      use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--driver &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Manually specify JDBC driver class                                     =
     to use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override $HADOOP_MAPRED_HOME
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--help</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print usage instructions
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password-file</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set path for a file containing the                                     =
     authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-P</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Read password from console
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password &lt;password&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--username &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication username
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--verbose</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print more information while working
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-param-file &lt;filename&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Optional properties file that                                          =
provides connection parameters
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--relaxed-isolation</code>
    </td><td style=3D"" align=3D"left">
    Set connection transaction isolation                                   =
       to read uncommitted for the mappers.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"section" title=3D"7.2.1.&nbsp;Connecting to a Database Server"><div =
class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_connecting_to=
_a_database_server"></a>7.2.1.&nbsp;Connecting to a Database Server</h4></d=
iv></div></div><p>Sqoop is designed to import tables from a database into H=
DFS. To do
so, you must specify a <span class=3D"emphasis"><em>connect string</em></sp=
an> that describes how to connect to the
database. The <span class=3D"emphasis"><em>connect string</em></span> is si=
milar to a URL, and is communicated to
Sqoop with the <code class=3D"literal">--connect</code> argument. This desc=
ribes the server and
database to connect to; it may also specify the port. For example:</p><pre =
class=3D"screen">$ sqoop import --connect jdbc:mysql://database.example.com=
/employees</pre><p>This string will connect to a MySQL database named <code=
 class=3D"literal">employees</code> on the
host <code class=3D"literal">database.example.com</code>. It=92s important =
that you <span class=3D"strong"><strong>do not</strong></span> use the URL
<code class=3D"literal">localhost</code> if you intend to use Sqoop with a =
distributed Hadoop
cluster. The connect string you supply will be used on TaskTracker nodes
throughout your MapReduce cluster; if you specify the
literal name <code class=3D"literal">localhost</code>, each node will conne=
ct to a different
database (or more likely, no database at all). Instead, you should use
the full hostname or IP address of the database host that can be seen
by all your remote nodes.</p><p>You might need to authenticate against the =
database before you can
access it. You can use the <code class=3D"literal">--username</code> to sup=
ply a username to the database.
Sqoop provides couple of different ways to supply a password,
secure and non-secure, to the database which is detailed below.</p><p title=
=3D"Secure way of supplying password to the database"><b>Secure way of supp=
lying password to the database.&nbsp;</b>You should save the password in a =
file on the users home directory with 400
permissions and specify the path to that file using the <span class=3D"stro=
ng"><strong><code class=3D"literal">--password-file</code></strong></span>
argument, and is the preferred method of entering credentials. Sqoop will
then read the password from the file and pass it to the MapReduce cluster
using secure means with out exposing the password in the job configuration.
The file containing the password can either be on the Local FS or HDFS.
For example:</p><pre class=3D"screen">$ sqoop import --connect jdbc:mysql:/=
/database.example.com/employees \
    --username venkatesh --password-file ${user.home}/.password</pre><div c=
lass=3D"warning" title=3D"Warning" style=3D"margin-left: 0.5in; margin-righ=
t: 0.5in;"><table border=3D"0" summary=3D"Warning"><tbody><tr><td rowspan=
=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Warning]" =
src=3D"https://sqoop.apache.org/docs/1.4.6/images/warning.png"></td><th ali=
gn=3D"left">Warning</th></tr><tr><td align=3D"left" valign=3D"top"><p>Sqoop=
 will read entire content of the password file and use it as
a password. This will include any trailing white space characters such as
new line characters that are added by default by most of the text editors.
You need to make sure that your password file contains only characters
that belongs to your password. On the command line you can use command
<code class=3D"literal">echo</code> with switch <code class=3D"literal">-n<=
/code> to store password without any trailing white space
characters. For example to store password <code class=3D"literal">secret</c=
ode> you would call
<code class=3D"literal">echo -n "secret" &gt; password.file</code>.</p></td=
></tr></tbody></table></div><p>Another way of supplying passwords is using =
the <code class=3D"literal">-P</code> argument which will
read a password from a console prompt.</p><p title=3D"Protecting password f=
rom preying eyes"><b>Protecting password from preying eyes.&nbsp;</b>Hadoop=
 2.6.0 provides an API to separate password storage from applications.
This API is called the credential provided API and there is a new
<code class=3D"literal">credential</code>  command line tool to manage pass=
words and their aliases.
The passwords are stored with their aliases in a keystore that is password
protected.   The keystore password can be the provided to a password prompt
on the command line, via an environment variable or defaulted to a software
defined constant.   Please check the Hadoop documentation on the usage
of this facility.</p><p>Once the password is stored using the Credential Pr=
ovider facility and
the Hadoop configuration has been suitably updated, all applications can
optionally use the alias in place of the actual password and at runtime
resolve the alias for the password to use.</p><p>Since the keystore or simi=
lar technology used for storing the credential
provider is shared across components, passwords for various applications,
various database and other passwords can be securely stored in them and onl=
y
the alias needs to be exposed in configuration files, protecting the passwo=
rd
from being visible.</p><p>Sqoop has been enhanced to allow usage of this fu=
ncionality if it is
available in the underlying Hadoop version being used.   One new option
has been introduced to provide the alias on the command line instead of the
actual password (--password-alias).  The argument value this option is
the alias on the storage associated with the actual password.
Example usage is as follows:</p><pre class=3D"screen">$ sqoop import --conn=
ect jdbc:mysql://database.example.com/employees \
    --username dbuser --password-alias mydb.password.alias</pre><p>Similarl=
y, if the command line option is not preferred, the alias can be saved
in the file provided with --password-file option.  Along with this, the
Sqoop configuration parameter org.apache.sqoop.credentials.loader.class
should be set to the classname that provides the alias resolution:
<code class=3D"literal">org.apache.sqoop.util.password.CredentialProviderPa=
sswordLoader</code></p><p>Example usage is as follows (assuming .password.a=
lias has the alias for
the real password) :</p><pre class=3D"screen">$ sqoop import --connect jdbc=
:mysql://database.example.com/employees \
    --username dbuser --password-file ${user.home}/.password-alias</pre><di=
v class=3D"warning" title=3D"Warning" style=3D"margin-left: 0.5in; margin-r=
ight: 0.5in;"><table border=3D"0" summary=3D"Warning"><tbody><tr><td rowspa=
n=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Warning]"=
 src=3D"https://sqoop.apache.org/docs/1.4.6/images/warning.png"></td><th al=
ign=3D"left">Warning</th></tr><tr><td align=3D"left" valign=3D"top"><p>The =
<code class=3D"literal">--password</code> parameter is insecure, as other u=
sers may
be able to read your password from the command-line arguments via
the output of programs such as <code class=3D"literal">ps</code>. The <span=
 class=3D"strong"><strong><code class=3D"literal">-P</code></strong></span>=
 argument is the preferred
method over using the <code class=3D"literal">--password</code> argument. C=
redentials may still be
transferred between nodes of the MapReduce cluster using insecure means.
For example:</p></td></tr></tbody></table></div><pre class=3D"screen">$ sqo=
op import --connect jdbc:mysql://database.example.com/employees \
    --username aaron --password 12345</pre><p>Sqoop automatically supports =
several databases, including MySQL.  Connect
strings beginning with <code class=3D"literal">jdbc:mysql://</code> are han=
dled automatically in Sqoop.  (A
full list of databases with built-in support is provided in the "Supported
Databases" section. For some, you may need to install the JDBC driver
yourself.)</p><p>You can use Sqoop with any other
JDBC-compliant database. First, download the appropriate JDBC
driver for the type of database you want to import, and install the .jar
file in the <code class=3D"literal">$SQOOP_HOME/lib</code> directory on you=
r client machine. (This will
be <code class=3D"literal">/usr/lib/sqoop/lib</code> if you installed from =
an RPM or Debian package.)
Each driver <code class=3D"literal">.jar</code> file also has a specific dr=
iver class which defines
the entry-point to the driver. For example, MySQL=92s Connector/J library h=
as
a driver class of <code class=3D"literal">com.mysql.jdbc.Driver</code>. Ref=
er to your database
vendor-specific documentation to determine the main driver class.
This class must be provided as an argument to Sqoop with <code class=3D"lit=
eral">--driver</code>.</p><p>For example, to connect to a SQLServer databas=
e, first download the driver from
microsoft.com and install it in your Sqoop lib path.</p><p>Then run Sqoop. =
For example:</p><pre class=3D"screen">$ sqoop import --driver com.microsoft=
.jdbc.sqlserver.SQLServerDriver \
    --connect &lt;connect-string&gt; ...</pre><p>When connecting to a datab=
ase using JDBC, you can optionally specify extra
JDBC parameters via a property file using the option
<code class=3D"literal">--connection-param-file</code>. The contents of thi=
s file are parsed as standard
Java properties and passed into the driver while creating a connection.</p>=
<div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin-righ=
t: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2=
" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"left"=
>Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>The parameters spec=
ified via the optional property file are only
applicable to JDBC connections. Any fastpath connectors that use connection=
s
other than JDBC will ignore these parameters.</p></td></tr></tbody></table>=
</div><div class=3D"table"><a name=3D"idp3493216"></a><p class=3D"title"><b=
>Table&nbsp;2.&nbsp;Validation arguments <a class=3D"link" href=3D"https://=
sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#validation" title=3D"11.&nb=
sp;validation">More Details</a></b></p><div class=3D"table-contents"><table=
 summary=3D"Validation arguments More Details" style=3D"border-collapse: co=
llapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><=
col align=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"b=
order-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--validate</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Enable validation of data copied,                                      =
       supports single table copy only.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--validator &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify validator class to use.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--validation-threshold &lt;class-name&gt;</code=
>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify validation threshold class                                     =
        to use.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--validation-failurehandler &lt;class-name&gt;<=
/code>
    </td><td style=3D"" align=3D"left">
    Specify validation failure                                             =
handler class to use.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp3507040"></a><p class=3D"title"><b>Table&nbsp;3=
.&nbsp;Import control arguments:</b></p><div class=3D"table-contents"><tabl=
e summary=3D"Import control arguments:" style=3D"border-collapse: collapse;=
border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col ali=
gn=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-r=
ight: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--append</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Append data to an existing dataset                                  in =
HDFS
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-avrodatafile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data to Avro Data Files
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-sequencefile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data to SequenceFiles
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-textfile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data as plain text (default)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-parquetfile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data to Parquet Files
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--boundary-query &lt;statement&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Boundary query to use for creating splits
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--columns &lt;col,col,col=85&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Columns to import from table
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--delete-target-dir</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Delete the import target directory                                  if =
it exists
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--direct</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Use direct connector if exists for the database
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--fetch-size &lt;n&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Number of entries to read from database                                =
  at once.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--inline-lob-limit &lt;n&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set the maximum size for an inline LOB
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-m,--num-mappers &lt;n&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Use <span class=3D"emphasis"><em>n</em></span> map tasks to import in p=
arallel
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-e,--query &lt;statement&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Import the results of <span class=3D"emphasis"><em><code class=3D"liter=
al">statement</code></em></span>.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--split-by &lt;column-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Column of the table used to split work                                 =
 units.  Cannot be used with                                  <code class=
=3D"literal">--autoreset-to-one-mapper</code> option.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--autoreset-to-one-mapper</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Import should use one mapper if a table                                =
  has no primary key and no split-by column                                =
  is provided.  Cannot be used with                                  <code =
class=3D"literal">--split-by &lt;col&gt;</code> option.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--table &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Table to read
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--target-dir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    HDFS destination dir
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--warehouse-dir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    HDFS parent for table destination
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--where &lt;where clause&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    WHERE clause to use during import
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-z,--compress</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Enable compression
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--compression-codec &lt;c&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Use Hadoop codec (default gzip)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--null-string &lt;null-string&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The string to be written for a null                                  va=
lue for string columns
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--null-non-string &lt;null-string&gt;</code>
    </td><td style=3D"" align=3D"left">
    The string to be written for a null                                  va=
lue for non-string columns
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>The =
<code class=3D"literal">--null-string</code> and <code class=3D"literal">--=
null-non-string</code> arguments are optional.\
If not specified, then the string "null" will be used.</p></div><div class=
=3D"section" title=3D"7.2.2.&nbsp;Selecting the Data to Import"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_selecting_the_data=
_to_import"></a>7.2.2.&nbsp;Selecting the Data to Import</h4></div></div></=
div><p>Sqoop typically imports data in a table-centric fashion. Use the
<code class=3D"literal">--table</code> argument to select the table to impo=
rt. For example, <code class=3D"literal">--table
employees</code>. This argument can also identify a <code class=3D"literal"=
>VIEW</code> or other table-like
entity in a database.</p><p>By default, all columns within a table are sele=
cted for import.
Imported data is written to HDFS in its "natural order;" that is, a
table containing columns A, B, and C result in an import of data such
as:</p><pre class=3D"screen">A1,B1,C1
A2,B2,C2
...</pre><p>You can select a subset of columns and control their ordering b=
y using
the <code class=3D"literal">--columns</code> argument. This should include =
a comma-delimited list
of columns to import. For example: <code class=3D"literal">--columns "name,=
employee_id,jobtitle"</code>.</p><p>You can control which rows are imported=
 by adding a SQL <code class=3D"literal">WHERE</code> clause
to the import statement. By default, Sqoop generates statements of the
form <code class=3D"literal">SELECT &lt;column list&gt; FROM &lt;table name=
&gt;</code>. You can append a
<code class=3D"literal">WHERE</code> clause to this with the <code class=3D=
"literal">--where</code> argument. For example: <code class=3D"literal">--w=
here
"id &gt; 400"</code>. Only rows where the <code class=3D"literal">id</code>=
 column has a value greater than
400 will be imported.</p><p>By default sqoop will use query <code class=3D"=
literal">select min(&lt;split-by&gt;), max(&lt;split-by&gt;) from
&lt;table name&gt;</code> to find out boundaries for creating splits. In so=
me cases this query
is not the most optimal so you can specify any arbitrary query returning tw=
o
numeric columns using <code class=3D"literal">--boundary-query</code> argum=
ent.</p></div><div class=3D"section" title=3D"7.2.3.&nbsp;Free-form Query I=
mports"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_=
free_form_query_imports"></a>7.2.3.&nbsp;Free-form Query Imports</h4></div>=
</div></div><p>Sqoop can also import the result set of an arbitrary SQL que=
ry. Instead of
using the <code class=3D"literal">--table</code>, <code class=3D"literal">-=
-columns</code> and <code class=3D"literal">--where</code> arguments, you c=
an specify
a SQL statement with the <code class=3D"literal">--query</code> argument.</=
p><p>When importing a free-form query, you must specify a destination direc=
tory
with <code class=3D"literal">--target-dir</code>.</p><p>If you want to impo=
rt the results of a query in parallel, then each map task
will need to execute a copy of the query, with results partitioned by bound=
ing
conditions inferred by Sqoop. Your query must include the token <code class=
=3D"literal">$CONDITIONS</code>
which each Sqoop process will replace with a unique condition expression.
You must also select a splitting column with <code class=3D"literal">--spli=
t-by</code>.</p><p>For example:</p><pre class=3D"screen">$ sqoop import \
  --query 'SELECT a.*, b.* FROM a JOIN b on (a.id =3D=3D b.id) WHERE $CONDI=
TIONS' \
  --split-by a.id --target-dir /user/foo/joinresults</pre><p>Alternately, t=
he query can be executed once and imported serially, by
specifying a single map task with <code class=3D"literal">-m 1</code>:</p><=
pre class=3D"screen">$ sqoop import \
  --query 'SELECT a.*, b.* FROM a JOIN b on (a.id =3D=3D b.id) WHERE $CONDI=
TIONS' \
  -m 1 --target-dir /user/foo/joinresults</pre><div class=3D"note" title=3D=
"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"=
0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D=
"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs=
/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=
=3D"left" valign=3D"top"><p>If you are issuing the query wrapped with doubl=
e quotes ("),
you will have to use <code class=3D"literal">\$CONDITIONS</code> instead of=
 just <code class=3D"literal">$CONDITIONS</code>
to disallow your shell from treating it as a shell variable.
For example, a double quoted query may look like:
<code class=3D"literal">"SELECT * FROM x WHERE a=3D'foo' AND \$CONDITIONS"<=
/code></p></td></tr></tbody></table></div><div class=3D"note" title=3D"Note=
" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"0" su=
mmary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top"=
 width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs/1.4.=
6/images/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=3D"l=
eft" valign=3D"top"><p>The facility of using free-form query in the current=
 version of Sqoop
is limited to simple queries where there are no ambiguous projections and
no <code class=3D"literal">OR</code> conditions in the <code class=3D"liter=
al">WHERE</code> clause. Use of complex queries such as
queries that have sub-queries or joins leading to ambiguous projections can
lead to unexpected results.</p></td></tr></tbody></table></div></div><div c=
lass=3D"section" title=3D"7.2.4.&nbsp;Controlling Parallelism"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_controlling_parall=
elism"></a>7.2.4.&nbsp;Controlling Parallelism</h4></div></div></div><p>Sqo=
op imports data in parallel from most database sources. You can
specify the number
of map tasks (parallel processes) to use to perform the import by
using the <code class=3D"literal">-m</code> or <code class=3D"literal">--nu=
m-mappers</code> argument. Each of these arguments
takes an integer value which corresponds to the degree of parallelism
to employ. By default, four tasks are used. Some databases may see
improved performance by increasing this value to 8 or 16. Do not
increase the degree of parallelism greater than that available within
your MapReduce cluster; tasks will run serially and will likely
increase the amount of time required to perform the import. Likewise,
do not increase the degree of parallism higher than that which your
database can reasonably support. Connecting 100 concurrent clients to
your database may increase the load on the database server to a point
where performance suffers as a result.</p><p>When performing parallel impor=
ts, Sqoop needs a criterion by which it
can split the workload. Sqoop uses a <span class=3D"emphasis"><em>splitting=
 column</em></span> to split the
workload. By default, Sqoop will identify the primary key column (if
present) in a table and use it as the splitting column. The low and
high values for the splitting column are retrieved from the database,
and the map tasks operate on evenly-sized components of the total
range. For example, if you had a table with a primary key column of
<code class=3D"literal">id</code> whose minimum value was 0 and maximum val=
ue was 1000, and Sqoop
was directed to use 4 tasks, Sqoop would run four processes which each
execute SQL statements of the form <code class=3D"literal">SELECT * FROM so=
metable WHERE id
&gt;=3D lo AND id &lt; hi</code>, with <code class=3D"literal">(lo, hi)</co=
de> set to (0, 250), (250, 500),
(500, 750), and (750, 1001) in the different tasks.</p><p>If the actual val=
ues for the primary key are not uniformly distributed
across its range, then this can result in unbalanced tasks. You should
explicitly choose a different column with the <code class=3D"literal">--spl=
it-by</code> argument.
For example, <code class=3D"literal">--split-by employee_id</code>. Sqoop c=
annot currently split on
multi-column indices. If your table has no index column, or has a
multi-column key, then you must also manually choose a splitting
column.</p><p>If a table does not have a primary key defined and the <code =
class=3D"literal">--split-by &lt;col&gt;</code>
is not provided, then import will fail unless the number
of mappers is explicitly set to one with the <code class=3D"literal">--num-=
mappers 1</code> option
or the <code class=3D"literal">--autoreset-to-one-mapper</code> option is u=
sed.  The option
<code class=3D"literal">--autoreset-to-one-mapper</code> is typically used =
with the import-all-tables
tool to automatically handle tables without a primary key in a schema.</p><=
/div><div class=3D"section" title=3D"7.2.5.&nbsp;Controlling Distributed Ca=
che"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_con=
trolling_distributed_cache"></a>7.2.5.&nbsp;Controlling Distributed Cache</=
h4></div></div></div><p>Sqoop will copy the jars in $SQOOP_HOME/lib folder =
to job cache every
time when start a Sqoop job. When launched by Oozie this is unnecessary
since Oozie use its own Sqoop share lib which keeps Sqoop dependencies
in the distributed cache. Oozie will do the localization on each
worker node for the Sqoop dependencies only once during the first Sqoop
job and reuse the jars on worker node for subsquencial jobs. Using
option <code class=3D"literal">--skip-dist-cache</code> in Sqoop command wh=
en launched by Oozie will
skip the step which Sqoop copies its dependencies to job cache and save
massive I/O.</p></div><div class=3D"section" title=3D"7.2.6.&nbsp;Controlli=
ng the Import Process"><div class=3D"titlepage"><div><div><h4 class=3D"titl=
e"><a name=3D"_controlling_the_import_process"></a>7.2.6.&nbsp;Controlling =
the Import Process</h4></div></div></div><p>By default, the import process =
will use JDBC which provides a
reasonable cross-vendor import channel. Some databases can perform
imports in a more high-performance fashion by using database-specific
data movement tools. For example, MySQL provides the <code class=3D"literal=
">mysqldump</code> tool
which can export data from MySQL to other systems very quickly. By
supplying the <code class=3D"literal">--direct</code> argument, you are spe=
cifying that Sqoop
should attempt the direct import channel. This channel may be
higher performance than using JDBC.</p><p>Details about use of direct mode =
with each specific RDBMS, installation requirements, available
options and limitations can be found in <a class=3D"xref" href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#connectors" title=3D"25.&nbs=
p;Notes for specific connectors">Section&nbsp;25, =93Notes for specific con=
nectors=94</a>.</p><p>By default, Sqoop will import a table named <code cla=
ss=3D"literal">foo</code> to a directory named
<code class=3D"literal">foo</code> inside your home directory in HDFS. For =
example, if your
username is <code class=3D"literal">someuser</code>, then the import tool w=
ill write to
<code class=3D"literal">/user/someuser/foo/(files)</code>. You can adjust t=
he parent directory of
the import with the <code class=3D"literal">--warehouse-dir</code> argument=
. For example:</p><pre class=3D"screen">$ sqoop import --connnect &lt;conne=
ct-str&gt; --table foo --warehouse-dir /shared \
    ...</pre><p>This command would write to a set of files in the <code cla=
ss=3D"literal">/shared/foo/</code> directory.</p><p>You can also explicitly=
 choose the target directory, like so:</p><pre class=3D"screen">$ sqoop imp=
ort --connnect &lt;connect-str&gt; --table foo --target-dir /dest \
    ...</pre><p>This will import the files into the <code class=3D"literal"=
>/dest</code> directory. <code class=3D"literal">--target-dir</code> is
incompatible with <code class=3D"literal">--warehouse-dir</code>.</p><p>Whe=
n using direct mode, you can specify additional arguments which
should be passed to the underlying tool. If the argument
<code class=3D"literal">--</code> is given on the command-line, then subseq=
uent arguments are sent
directly to the underlying tool. For example, the following adjusts
the character set used by <code class=3D"literal">mysqldump</code>:</p><pre=
 class=3D"screen">$ sqoop import --connect jdbc:mysql://server.foo.com/db -=
-table bar \
    --direct -- --default-character-set=3Dlatin1</pre><p>By default, import=
s go to a new target location. If the destination directory
already exists in HDFS, Sqoop will refuse to import and overwrite that
directory=92s contents. If you use the <code class=3D"literal">--append</co=
de> argument, Sqoop will import
data to a temporary directory and then rename the files into the normal
target directory in a manner that does not conflict with existing filenames
in that directory.</p></div><div class=3D"section" title=3D"7.2.7.&nbsp;Con=
trolling transaction isolation"><div class=3D"titlepage"><div><div><h4 clas=
s=3D"title"><a name=3D"_controlling_transaction_isolation"></a>7.2.7.&nbsp;=
Controlling transaction isolation</h4></div></div></div><p>By default, Sqoo=
p uses the read committed transaction isolation in the mappers
to import data.  This may not be the ideal in all ETL workflows and it may
desired to reduce the isolation guarantees.   The <code class=3D"literal">-=
-relaxed-isolation</code> option
can be used to instruct Sqoop to use read uncommitted isolation level.</p><=
p>The <code class=3D"literal">read-uncommitted</code> isolation level is no=
t supported on all databases
(for example, Oracle), so specifying the option <code class=3D"literal">--r=
elaxed-isolation</code>
may not be supported on all databases.</p></div><div class=3D"section" titl=
e=3D"7.2.8.&nbsp;Controlling type mapping"><div class=3D"titlepage"><div><d=
iv><h4 class=3D"title"><a name=3D"_controlling_type_mapping"></a>7.2.8.&nbs=
p;Controlling type mapping</h4></div></div></div><p>Sqoop is preconfigured =
to map most SQL types to appropriate Java or Hive
representatives. However the default mapping might not be suitable for
everyone and might be overridden by <code class=3D"literal">--map-column-ja=
va</code> (for changing
mapping to Java) or <code class=3D"literal">--map-column-hive</code> (for c=
hanging Hive mapping).</p><div class=3D"table"><a name=3D"idp3579352"></a><=
p class=3D"title"><b>Table&nbsp;4.&nbsp;Parameters for overriding mapping</=
b></p><div class=3D"table-contents"><table summary=3D"Parameters for overri=
ding mapping" style=3D"border-collapse: collapse;border-top: 0.5pt solid ; =
border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><col align=3D"=
left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt solid ; border=
-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--map-column-java &lt;mapping&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override mapping from SQL to Java type                                 =
 for configured columns.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--map-column-hive &lt;mapping&gt;</code>
    </td><td style=3D"" align=3D"left">
    Override mapping from SQL to Hive type                                 =
 for configured columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>Sqoo=
p is expecting comma separated list of mapping in form &lt;name of column&g=
t;=3D&lt;new type&gt;. For example:</p><pre class=3D"screen">$ sqoop import=
 ... --map-column-java id=3DString,value=3DInteger</pre><p>Sqoop will rise =
exception in case that some configured mapping will not be used.</p></div><=
div class=3D"section" title=3D"7.2.9.&nbsp;Incremental Imports"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_incremental_import=
s"></a>7.2.9.&nbsp;Incremental Imports</h4></div></div></div><p>Sqoop provi=
des an incremental import mode which can be used to retrieve
only rows newer than some previously-imported set of rows.</p><p>The follow=
ing arguments control incremental imports:</p><div class=3D"table"><a name=
=3D"idp3586872"></a><p class=3D"title"><b>Table&nbsp;5.&nbsp;Incremental im=
port arguments:</b></p><div class=3D"table-contents"><table summary=3D"Incr=
emental import arguments:" style=3D"border-collapse: collapse;border-top: 0=
.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><=
col align=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt s=
olid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--check-column (col)</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specifies the column to be examined                               when =
determining which rows to import.                              (the column =
should not be of type                               CHAR/NCHAR/VARCHAR/VARN=
CHAR/                              LONGVARCHAR/LONGNVARCHAR)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--incremental (mode)</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specifies how Sqoop determines which                               rows=
 are new. Legal values for <code class=3D"literal">mode</code>             =
                 include <code class=3D"literal">append</code> and <code cl=
ass=3D"literal">lastmodified</code>.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--last-value (value)</code>
    </td><td style=3D"" align=3D"left">
    Specifies the maximum value of the                               check =
column from the previous import.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>Sqoo=
p supports two types of incremental imports: <code class=3D"literal">append=
</code> and <code class=3D"literal">lastmodified</code>.
You can use the <code class=3D"literal">--incremental</code> argument to sp=
ecify the type of incremental
import to perform.</p><p>You should specify <code class=3D"literal">append<=
/code> mode when importing a table where new rows are
continually being added with increasing row id values. You specify the colu=
mn
containing the row=92s id with <code class=3D"literal">--check-column</code=
>. Sqoop imports rows where the
check column has a value greater than the one specified with <code class=3D=
"literal">--last-value</code>.</p><p>An alternate table update strategy sup=
ported by Sqoop is called <code class=3D"literal">lastmodified</code>
mode. You should use this when rows of the source table may be updated, and
each such update will set the value of a last-modified column to the curren=
t
timestamp.  Rows where the check column holds a timestamp more recent than =
the
timestamp specified with <code class=3D"literal">--last-value</code> are im=
ported.</p><p>At the end of an incremental import, the value which should b=
e specified as
<code class=3D"literal">--last-value</code> for a subsequent import is prin=
ted to the screen. When running
a subsequent import, you should specify <code class=3D"literal">--last-valu=
e</code> in this way to ensure
you import only the new or updated data. This is handled automatically by
creating an incremental import as a saved job, which is the preferred
mechanism for performing a recurring incremental import. See the section on
saved jobs later in this document for more information.</p></div><div class=
=3D"section" title=3D"7.2.10.&nbsp;File Formats"><div class=3D"titlepage"><=
div><div><h4 class=3D"title"><a name=3D"_file_formats"></a>7.2.10.&nbsp;Fil=
e Formats</h4></div></div></div><p>You can import data in one of two file f=
ormats: delimited text or
SequenceFiles.</p><p>Delimited text is the default import format. You can a=
lso specify it
explicitly by using the <code class=3D"literal">--as-textfile</code> argume=
nt. This argument will write
string-based representations of each record to the output files, with
delimiter characters between individual columns and rows. These
delimiters may be commas, tabs, or other characters. (The delimiters
can be selected; see "Output line formatting arguments.") The
following is the results of an example text-based import:</p><pre class=3D"=
screen">1,here is a message,2010-05-01
2,happy new year!,2010-01-01
3,another message,2009-11-12</pre><p>Delimited text is appropriate for most=
 non-binary data types. It also
readily supports further manipulation by other tools, such as Hive.</p><p>S=
equenceFiles are a binary format that store individual records in
custom record-specific data types. These data types are manifested as
Java classes. Sqoop will automatically generate these data types for
you. This format supports exact storage of all data in binary
representations, and is appropriate for storing binary data
(for example, <code class=3D"literal">VARBINARY</code> columns), or data th=
at will be principly
manipulated by custom MapReduce programs (reading from SequenceFiles
is higher-performance than reading from text files, as records do not
need to be parsed).</p><p>Avro data files are a compact, efficient binary f=
ormat that provides
interoperability with applications written in other programming
languages.  Avro also supports versioning, so that when, e.g., columns
are added or removed from a table, previously imported data files can
be processed along with new ones.</p><p>By default, data is not compressed.=
 You can compress your data by
using the deflate (gzip) algorithm with the <code class=3D"literal">-z</cod=
e> or <code class=3D"literal">--compress</code>
argument, or specify any Hadoop compression codec using the
<code class=3D"literal">--compression-codec</code> argument. This applies t=
o SequenceFile, text,
and Avro files.</p></div><div class=3D"section" title=3D"7.2.11.&nbsp;Large=
 Objects"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D=
"_large_objects"></a>7.2.11.&nbsp;Large Objects</h4></div></div></div><p>Sq=
oop handles large objects (<code class=3D"literal">BLOB</code> and <code cl=
ass=3D"literal">CLOB</code> columns) in particular
ways. If this data is truly large, then these columns should not be
fully materialized in memory for manipulation, as most columns are.
Instead, their data is handled in a streaming fashion. Large objects
can be stored inline with the rest of the data, in which case they are
fully materialized in memory on every access, or they can be stored in
a secondary storage file linked to the primary data storage. By
default, large objects less than 16 MB in size are stored inline with
the rest of the data. At a larger size, they are stored in files in
the <code class=3D"literal">_lobs</code> subdirectory of the import target =
directory. These files
are stored in a separate format optimized for large record storage,
which can accomodate records of up to 2^63 bytes each. The size at
which lobs spill into separate files is controlled by the
<code class=3D"literal">--inline-lob-limit</code> argument, which takes a p=
arameter specifying the
largest lob size to keep inline, in bytes. If you set the inline LOB
limit to 0, all large objects will be placed in external
storage.</p><div class=3D"table"><a name=3D"idp3610928"></a><p class=3D"tit=
le"><b>Table&nbsp;6.&nbsp;Output line formatting arguments:</b></p><div cla=
ss=3D"table-contents"><table summary=3D"Output line formatting arguments:" =
style=3D"border-collapse: collapse;border-top: 0.5pt solid ; border-bottom:=
 0.5pt solid ; "><colgroup><col align=3D"left"><col align=3D"left"></colgro=
up><thead><tr><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt=
 solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field enclosing                                    char=
acter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the escape character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--fields-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the field separator character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the end-of-line character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--mysql-delimiters</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Uses MySQL=92s default delimiter set:                                  =
 fields: <code class=3D"literal">,</code>  lines: <code class=3D"literal">\=
n</code>                                    escaped-by: <code class=3D"lite=
ral">\</code>                                    optionally-enclosed-by: <c=
ode class=3D"literal">'</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--optionally-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing character
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>When=
 importing to delimited files, the choice of delimiter is
important. Delimiters which appear inside string-based fields may
cause ambiguous parsing of the imported data by subsequent analysis
passes. For example, the string <code class=3D"literal">"Hello, pleased to =
meet you"</code> should
not be imported with the end-of-field delimiter set to a comma.</p><p>Delim=
iters may be specified as:</p><div class=3D"itemizedlist"><ul class=3D"item=
izedlist" type=3D"disc"><li class=3D"listitem">
a character (<code class=3D"literal">--fields-terminated-by X</code>)
</li><li class=3D"listitem"><p class=3D"simpara">
an escape character (<code class=3D"literal">--fields-terminated-by \t</cod=
e>). Supported escape
  characters are:
</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"circle">=
<li class=3D"listitem">
<code class=3D"literal">\b</code> (backspace)
</li><li class=3D"listitem">
<code class=3D"literal">\n</code> (newline)
</li><li class=3D"listitem">
<code class=3D"literal">\r</code> (carriage return)
</li><li class=3D"listitem">
<code class=3D"literal">\t</code> (tab)
</li><li class=3D"listitem">
<code class=3D"literal">\"</code> (double-quote)
</li><li class=3D"listitem">
<code class=3D"literal">\\'</code> (single-quote)
</li><li class=3D"listitem">
<code class=3D"literal">\\</code> (backslash)
</li><li class=3D"listitem">
<code class=3D"literal">\0</code> (NUL) - This will insert NUL characters b=
etween fields or lines,
  or will disable enclosing/escaping if used for one of the <code class=3D"=
literal">--enclosed-by</code>,
  <code class=3D"literal">--optionally-enclosed-by</code>, or <code class=
=3D"literal">--escaped-by</code> arguments.
</li></ul></div></li><li class=3D"listitem">
The octal representation of a UTF-8 character=92s code point. This
  should be of the form <code class=3D"literal">\0ooo</code>, where <span c=
lass=3D"emphasis"><em>ooo</em></span> is the octal value.
  For example, <code class=3D"literal">--fields-terminated-by \001</code> w=
ould yield the <code class=3D"literal">^A</code> character.
</li><li class=3D"listitem">
The hexadecimal representation of a UTF-8 character=92s code point. This
  should be of the form <code class=3D"literal">\0xhhh</code>, where <span =
class=3D"emphasis"><em>hhh</em></span> is the hex value.
  For example, <code class=3D"literal">--fields-terminated-by \0x10</code> =
would yield the carriage
  return character.
</li></ul></div><p>The default delimiters are a comma (<code class=3D"liter=
al">,</code>) for fields, a newline (<code class=3D"literal">\n</code>) for=
 records, no quote
character, and no escape character. Note that this can lead to
ambiguous/unparsible records if you import database records containing
commas or newlines in the field data. For unambiguous parsing, both must
be enabled. For example, via <code class=3D"literal">--mysql-delimiters</co=
de>.</p><p>If unambiguous delimiters cannot be presented, then use <span cl=
ass=3D"emphasis"><em>enclosing</em></span> and
<span class=3D"emphasis"><em>escaping</em></span> characters. The combinati=
on of (optional)
enclosing and escaping characters will allow unambiguous parsing of
lines. For example, suppose one column of a dataset contained the
following values:</p><pre class=3D"screen">Some string, with a comma.
Another "string with quotes"</pre><p>The following arguments would provide =
delimiters which can be
unambiguously parsed:</p><pre class=3D"screen">$ sqoop import --fields-term=
inated-by , --escaped-by \\ --enclosed-by '\"' ...</pre><p>(Note that to pr=
event the shell from mangling the enclosing character,
we have enclosed that argument itself in single-quotes.)</p><p>The result o=
f the above arguments applied to the above dataset would
be:</p><pre class=3D"screen">"Some string, with a comma.","1","2","3"...
"Another \"string with quotes\"","4","5","6"...</pre><p>Here the imported s=
trings are shown in the context of additional
columns (<code class=3D"literal">"1","2","3"</code>, etc.) to demonstrate t=
he full effect of enclosing
and escaping. The enclosing character is only strictly necessary when
delimiter characters appear in the imported text. The enclosing
character can therefore be specified as optional:</p><pre class=3D"screen">=
$ sqoop import --optionally-enclosed-by '\"' (the rest as above)...</pre><p=
>Which would result in the following import:</p><pre class=3D"screen">"Some=
 string, with a comma.",1,2,3...
"Another \"string with quotes\"",4,5,6...</pre><div class=3D"note" title=3D=
"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"=
0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D=
"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs=
/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=
=3D"left" valign=3D"top"><p>Even though Hive supports escaping characters, =
it does not
handle escaping of new-line character. Also, it does not support
the notion of enclosing characters that may include field delimiters
in the enclosed string.  It is therefore recommended that you choose
unambiguous field and record-terminating delimiters without the help
of escaping and enclosing characters when working with Hive; this is
due to limitations of Hive=92s input parsing abilities.</p></td></tr></tbod=
y></table></div><p>The <code class=3D"literal">--mysql-delimiters</code> ar=
gument is a shorthand argument which uses
the default delimiters for the <code class=3D"literal">mysqldump</code> pro=
gram.
If you use the <code class=3D"literal">mysqldump</code> delimiters in conju=
nction with a
direct-mode import (with <code class=3D"literal">--direct</code>), very fas=
t imports can be
achieved.</p><p>While the choice of delimiters is most important for a text=
-mode
import, it is still relevant if you import to SequenceFiles with
<code class=3D"literal">--as-sequencefile</code>. The generated class' <cod=
e class=3D"literal">toString()</code> method
will use the delimiters you specify, so subsequent formatting of
the output data will rely on the delimiters you choose.</p><div class=3D"ta=
ble"><a name=3D"idp3645896"></a><p class=3D"title"><b>Table&nbsp;7.&nbsp;In=
put parsing arguments:</b></p><div class=3D"table-contents"><table summary=
=3D"Input parsing arguments:" style=3D"border-collapse: collapse;border-top=
: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left=
"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5p=
t solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field encloser
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input escape                                          characte=
r
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-fields-terminated-by &lt;char&gt;</code=
>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input field separator
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input end-of-line                                          cha=
racter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--input-optionally-enclosed-by &lt;char&gt;</co=
de>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing                                          charact=
er
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>When=
 Sqoop imports data to HDFS, it generates a Java class which can
reinterpret the text files that it creates when doing a
delimited-format import. The delimiters are chosen with arguments such
as <code class=3D"literal">--fields-terminated-by</code>; this controls bot=
h how the data is
written to disk, and how the generated <code class=3D"literal">parse()</cod=
e> method reinterprets
this data. The delimiters used by the <code class=3D"literal">parse()</code=
> method can be chosen
independently of the output arguments, by using
<code class=3D"literal">--input-fields-terminated-by</code>, and so on. Thi=
s is useful, for example, to
generate classes which can parse records created with one set of
delimiters, and emit the records to a different set of files using a
separate set of delimiters.</p><div class=3D"table"><a name=3D"idp3656712">=
</a><p class=3D"title"><b>Table&nbsp;8.&nbsp;Hive arguments:</b></p><div cl=
ass=3D"table-contents"><table summary=3D"Hive arguments:" style=3D"border-c=
ollapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; ">=
<colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr><th=
 style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=
=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override <code class=3D"literal">$HIVE_HOME</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-import</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Import tables into Hive (Uses Hive=92s                               de=
fault delimiters if none are set.)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-overwrite</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Overwrite existing data in the Hive table.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--create-hive-table</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    If set, then the job will fail if the target hive
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    table exits. By default this property is false.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-table &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the table name to use when importing                              =
to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-drop-import-delims</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Drops <span class=3D"emphasis"><em>\n</em></span>, <span class=3D"empha=
sis"><em>\r</em></span>, and <span class=3D"emphasis"><em>\01</em></span> f=
rom string                              fields when importing to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-delims-replacement</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Replace <span class=3D"emphasis"><em>\n</em></span>, <span class=3D"emp=
hasis"><em>\r</em></span>, and <span class=3D"emphasis"><em>\01</em></span>=
 from string                              fields with user defined string w=
hen importing to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-partition-key</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Name of a hive field to partition are                               sha=
rded on
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-partition-value &lt;v&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    String-value that serves as partition key                              =
for this imported into hive in this job.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--map-column-hive &lt;map&gt;</code>
    </td><td style=3D"" align=3D"left">
    Override default mapping from SQL type to                              =
Hive type for configured columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"7.2.12.&nbsp;Importing Data Into Hive"><div =
class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_importing_dat=
a_into_hive"></a>7.2.12.&nbsp;Importing Data Into Hive</h4></div></div></di=
v><p>Sqoop=92s import tool=92s main function is to upload your data into fi=
les
in HDFS. If you have a Hive metastore associated with your HDFS
cluster, Sqoop can also import the data into Hive by generating and
executing a <code class=3D"literal">CREATE TABLE</code> statement to define=
 the data=92s layout in
Hive. Importing data into Hive is as simple as adding the
<span class=3D"strong"><strong><code class=3D"literal">--hive-import</code>=
</strong></span> option to your Sqoop command line.</p><p>If the Hive table=
 already exists, you can specify the
<span class=3D"strong"><strong><code class=3D"literal">--hive-overwrite</co=
de></strong></span> option to indicate that existing table in hive must
be replaced. After your data is imported into HDFS or this step is
omitted, Sqoop will generate a Hive script containing a <code class=3D"lite=
ral">CREATE TABLE</code>
operation defining your columns using Hive=92s types, and a <code class=3D"=
literal">LOAD DATA INPATH</code>
statement to move the data files into Hive=92s warehouse directory.</p><p>T=
he script will be executed by calling
the installed copy of hive on the machine where Sqoop is run. If you have
multiple Hive installations, or <code class=3D"literal">hive</code> is not =
in your <code class=3D"literal">$PATH</code>, use the
<span class=3D"strong"><strong><code class=3D"literal">--hive-home</code></=
strong></span> option to identify the Hive installation directory.
Sqoop will use <code class=3D"literal">$HIVE_HOME/bin/hive</code> from here=
.</p><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin=
-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=
=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=
=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"=
left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>This function =
is incompatible with <code class=3D"literal">--as-avrodatafile</code> and
<code class=3D"literal">--as-sequencefile</code>.</p></td></tr></tbody></ta=
ble></div><p>Even though Hive supports escaping characters, it does not
handle escaping of new-line character. Also, it does not support
the notion of enclosing characters that may include field delimiters
in the enclosed string.  It is therefore recommended that you choose
unambiguous field and record-terminating delimiters without the help
of escaping and enclosing characters when working with Hive; this is
due to limitations of Hive=92s input parsing abilities. If you do use
<code class=3D"literal">--escaped-by</code>, <code class=3D"literal">--encl=
osed-by</code>, or <code class=3D"literal">--optionally-enclosed-by</code> =
when
importing data into Hive, Sqoop will print a warning message.</p><p>Hive wi=
ll have problems using Sqoop-imported data if your database=92s
rows contain string fields that have Hive=92s default row delimiters
(<code class=3D"literal">\n</code> and <code class=3D"literal">\r</code> ch=
aracters) or column delimiters (<code class=3D"literal">\01</code> characte=
rs)
present in them.  You can use the <code class=3D"literal">--hive-drop-impor=
t-delims</code> option
to drop those characters on import to give Hive-compatible text data.
Alternatively, you can use the <code class=3D"literal">--hive-delims-replac=
ement</code> option
to replace those characters with a user-defined string on import to give
Hive-compatible text data.  These options should only be used if you use
Hive=92s default delimiters and should not be used if different delimiters
are specified.</p><p>Sqoop will pass the field and record delimiters throug=
h to Hive. If you do
not set any delimiters and do use <code class=3D"literal">--hive-import</co=
de>, the field delimiter will
be set to <code class=3D"literal">^A</code> and the record delimiter will b=
e set to <code class=3D"literal">\n</code> to be consistent
with Hive=92s defaults.</p><p>Sqoop will by default import NULL values as s=
tring <code class=3D"literal">null</code>. Hive is however
using string <code class=3D"literal">\N</code> to denote <code class=3D"lit=
eral">NULL</code> values and therefore predicates dealing
with <code class=3D"literal">NULL</code> (like <code class=3D"literal">IS N=
ULL</code>) will not work correctly. You should append
parameters <code class=3D"literal">--null-string</code> and <code class=3D"=
literal">--null-non-string</code> in case of import job or
<code class=3D"literal">--input-null-string</code> and <code class=3D"liter=
al">--input-null-non-string</code> in case of an export job if
you wish to properly preserve <code class=3D"literal">NULL</code> values. B=
ecause sqoop is using those
parameters in generated code, you need to properly escape value <code class=
=3D"literal">\N</code> to <code class=3D"literal">\\N</code>:</p><pre class=
=3D"screen">$ sqoop import  ... --null-string '\\N' --null-non-string '\\N'=
</pre><p>The table name used in Hive is, by default, the same as that of th=
e
source table. You can control the output table name with the <code class=3D=
"literal">--hive-table</code>
option.</p><p>Hive can put data into partitions for more efficient query
performance.  You can tell a Sqoop job to import data for Hive into a
particular partition by specifying the <code class=3D"literal">--hive-parti=
tion-key</code> and
<code class=3D"literal">--hive-partition-value</code> arguments.  The parti=
tion value must be a
string.  Please see the Hive documentation for more details on
partitioning.</p><p>You can import compressed tables into Hive using the <c=
ode class=3D"literal">--compress</code> and
<code class=3D"literal">--compression-codec</code> options. One downside to=
 compressing tables imported
into Hive is that many codecs cannot be split for processing by parallel ma=
p
tasks. The lzop codec, however, does support splitting. When importing tabl=
es
with this codec, Sqoop will automatically index the files for splitting and
configuring a new Hive table with the correct InputFormat. This feature
currently requires that all partitions of a table be compressed with the lz=
op
codec.</p><div class=3D"table"><a name=3D"idp3694456"></a><p class=3D"title=
"><b>Table&nbsp;9.&nbsp;HBase arguments:</b></p><div class=3D"table-content=
s"><table summary=3D"HBase arguments:" style=3D"border-collapse: collapse;b=
order-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col alig=
n=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-ri=
ght: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--column-family &lt;family&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the target column family for the import
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hbase-create-table</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    If specified, create missing HBase tables
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hbase-row-key &lt;col&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specifies which input column to use as the                             =
 row key
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    In case, if input table contains composite
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    key, then &lt;col&gt; must be in the form of a
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    comma-separated list of composite key
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    attributes
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hbase-table &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specifies an HBase table to use as the                               ta=
rget instead of HDFS
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--hbase-bulkload</code>
    </td><td style=3D"" align=3D"left">
    Enables bulk loading
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"7.2.13.&nbsp;Importing Data Into HBase"><div=
 class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_importing_da=
ta_into_hbase"></a>7.2.13.&nbsp;Importing Data Into HBase</h4></div></div><=
/div><p>Sqoop supports additional import targets beyond HDFS and Hive. Sqoo=
p
can also import records into a table in HBase.</p><p>By specifying <code cl=
ass=3D"literal">--hbase-table</code>, you instruct Sqoop to import
to a table in HBase rather than a directory in HDFS. Sqoop will
import data to the table specified as the argument to <code class=3D"litera=
l">--hbase-table</code>.
Each row of the input table will be transformed into an HBase
<code class=3D"literal">Put</code> operation to a row of the output table. =
The key for each row is
taken from a column of the input. By default Sqoop will use the split-by
column as the row key column. If that is not specified, it will try to
identify the primary key column, if any, of the source table. You can
manually specify the row key column with <code class=3D"literal">--hbase-ro=
w-key</code>. Each output
column will be placed in the same column family, which must be specified
with <code class=3D"literal">--column-family</code>.</p><div class=3D"note"=
 title=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table b=
order=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" =
valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache=
.org/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr><tr>=
<td align=3D"left" valign=3D"top"><p>This function is incompatible with dir=
ect import (parameter
<code class=3D"literal">--direct</code>).</p></td></tr></tbody></table></di=
v><p>If the input table has composite key, the <code class=3D"literal">--hb=
ase-row-key</code> must be
in the form of a comma-separated list of composite key attributes.
In this case, the row key for HBase row will be generated by combining
values of composite key attributes using underscore as a separator.
NOTE: Sqoop import for a table with composite key will work only if
parameter <code class=3D"literal">--hbase-row-key</code> has been specified=
.</p><p>If the target table and column family do not exist, the Sqoop job w=
ill
exit with an error. You should create the target table and column family
before running an import. If you specify <code class=3D"literal">--hbase-cr=
eate-table</code>, Sqoop
will create the target table and column family if they do not exist,
using the default parameters from your HBase configuration.</p><p>Sqoop cur=
rently serializes all values to HBase by converting each field
to its string representation (as if you were importing to HDFS in text
mode), and then inserts the UTF-8 bytes of this string in the target
cell. Sqoop will skip all rows containing null values in all columns
except the row key column.</p><p>To decrease the load on hbase, Sqoop can d=
o bulk loading as opposed to
direct writes. To use bulk loading, enable it using <code class=3D"literal"=
>--hbase-bulkload</code>.</p><div class=3D"table"><a name=3D"idp3713832"></=
a><p class=3D"title"><b>Table&nbsp;10.&nbsp;Accumulo arguments:</b></p><div=
 class=3D"table-contents"><table summary=3D"Accumulo arguments:" style=3D"b=
order-collapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt sol=
id ; "><colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead>=
<tr><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "=
 align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-table &lt;table-nam&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specifies an Accumulo table to use                                     =
 as the target instead of HDFS
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-column-family &lt;family&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the target column family for                                      =
the import
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-create-table</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    If specified, create missing                                      Accum=
ulo tables
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-row-key &lt;col&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specifies which input column to use                                    =
  as the row key
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-visibility &lt;vis&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    (Optional) Specifies a visibility                                      =
token to apply to all rows inserted                                      in=
to Accumulo.  Default is the                                      empty str=
ing.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-batch-size &lt;size&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    (Optional) Sets the size in bytes                                      =
of Accumulo=92s write buffer. Default                                      =
is 4MB.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-max-latency &lt;ms&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    (Optional) Sets the max latency in                                     =
 milliseconds for the Accumulo                                      batch w=
riter.  Default is 0.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-zookeepers &lt;host:port&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Comma-separated list of Zookeeper                                      =
servers used by the Accumulo instance
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-instance &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Name of the target Accumulo instance
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-user &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Name of the Accumulo user to import as
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--accumulo-password &lt;password&gt;</code>
    </td><td style=3D"" align=3D"left">
    Password for the Accumulo user
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"7.2.14.&nbsp;Importing Data Into Accumulo"><=
div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_importing=
_data_into_accumulo"></a>7.2.14.&nbsp;Importing Data Into Accumulo</h4></di=
v></div></div><p>Sqoop supports importing records into a table in Accumulo<=
/p><p>By specifying <code class=3D"literal">--accumulo-table</code>, you in=
struct Sqoop to import
to a table in Accumulo rather than a directory in HDFS. Sqoop will
import data to the table specified as the argument to <code class=3D"litera=
l">--accumulo-table</code>.
Each row of the input table will be transformed into an Accumulo
<code class=3D"literal">Mutation</code> operation to a row of the output ta=
ble. The key for each row is
taken from a column of the input. By default Sqoop will use the split-by
column as the row key column. If that is not specified, it will try to
identify the primary key column, if any, of the source table. You can
manually specify the row key column with <code class=3D"literal">--accumulo=
-row-key</code>. Each output
column will be placed in the same column family, which must be specified
with <code class=3D"literal">--accumulo-column-family</code>.</p><div class=
=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"=
><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D=
"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqo=
op.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th>=
</tr><tr><td align=3D"left" valign=3D"top"><p>This function is incompatible=
 with direct import (parameter
<code class=3D"literal">--direct</code>), and cannot be used in the same op=
eration as an HBase import.</p></td></tr></tbody></table></div><p>If the ta=
rget table does not exist, the Sqoop job will
exit with an error, unless the <code class=3D"literal">--accumulo-create-ta=
ble</code> parameter is
specified. Otherwise, you should create the target table before running
an import.</p><p>Sqoop currently serializes all values to Accumulo by conve=
rting each field
to its string representation (as if you were importing to HDFS in text
mode), and then inserts the UTF-8 bytes of this string in the target
cell.</p><p>By default, no visibility is applied to the resulting cells in =
Accumulo,
so the data will be visible to any Accumulo user. Use the
<code class=3D"literal">--accumulo-visibility</code> parameter to specify a=
 visibility token to
apply to all rows in the import job.</p><p>For performance tuning, use the =
optional <code class=3D"literal">--accumulo-buffer-size\</code> and
<code class=3D"literal">--accumulo-max-latency</code> parameters. See Accum=
ulo=92s documentation for
an explanation of the effects of these parameters.</p><p>In order to connec=
t to an Accumulo instance, you must specify the location
of a Zookeeper ensemble using the <code class=3D"literal">--accumulo-zookee=
pers</code> parameter,
the name of the Accumulo instance (<code class=3D"literal">--accumulo-insta=
nce</code>), and the
username and password to connect with (<code class=3D"literal">--accumulo-u=
ser</code> and
<code class=3D"literal">--accumulo-password</code> respectively).</p><div c=
lass=3D"table"><a name=3D"idp3739368"></a><p class=3D"title"><b>Table&nbsp;=
11.&nbsp;Code generation arguments:</b></p><div class=3D"table-contents"><t=
able summary=3D"Code generation arguments:" style=3D"border-collapse: colla=
pse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col=
 align=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"bord=
er-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--bindir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Output directory for compiled objects
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--class-name &lt;name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the generated class name. This overrides                         <=
code class=3D"literal">--package-name</code>. When combined with           =
               <code class=3D"literal">--jar-file</code>, sets the input cl=
ass.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--jar-file &lt;file&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Disable code generation; use specified jar
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--outdir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Output directory for generated code
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--package-name &lt;name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Put auto-generated classes in this package
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--map-column-java &lt;m&gt;</code>
    </td><td style=3D"" align=3D"left">
    Override default mapping from SQL type to                         Java =
type for configured columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>As m=
entioned earlier, a byproduct of importing a table to HDFS is a
class which can manipulate the imported data. If the data is stored in
SequenceFiles, this class will be used for the data=92s serialization
container. Therefore, you should use this class in your subsequent
MapReduce processing of the data.</p><p>The class is typically named after =
the table; a table named <code class=3D"literal">foo</code> will
generate a class named <code class=3D"literal">foo</code>. You may want to =
override this class
name. For example, if your table is named <code class=3D"literal">EMPLOYEES=
</code>, you may want to
specify <code class=3D"literal">--class-name Employee</code> instead. Simil=
arly, you can specify
just the package name with <code class=3D"literal">--package-name</code>. T=
he following import
generates a class named <code class=3D"literal">com.foocorp.SomeTable</code=
>:</p><pre class=3D"screen">$ sqoop import --connect &lt;connect-str&gt; --=
table SomeTable --package-name com.foocorp</pre><p>The <code class=3D"liter=
al">.java</code> source file for your class will be written to the current
working directory when you run <code class=3D"literal">sqoop</code>. You ca=
n control the output
directory with <code class=3D"literal">--outdir</code>. For example, <code =
class=3D"literal">--outdir src/generated/</code>.</p><p>The import process =
compiles the source into <code class=3D"literal">.class</code> and <code cl=
ass=3D"literal">.jar</code> files;
these are ordinarily stored under <code class=3D"literal">/tmp</code>. You =
can select an alternate
target directory with <code class=3D"literal">--bindir</code>. For example,=
 <code class=3D"literal">--bindir /scratch</code>.</p><p>If you already hav=
e a compiled class that can be used to perform the
import and want to suppress the code-generation aspect of the import
process, you can use an existing jar and class by
providing the <code class=3D"literal">--jar-file</code> and <code class=3D"=
literal">--class-name</code> options. For example:</p><pre class=3D"screen"=
>$ sqoop import --table SomeTable --jar-file mydatatypes.jar \
    --class-name SomeTableType</pre><p>This command will load the <code cla=
ss=3D"literal">SomeTableType</code> class out of <code class=3D"literal">my=
datatypes.jar</code>.</p></div><div class=3D"section" title=3D"7.2.15.&nbsp=
;Additional Import Configuration Properties"><div class=3D"titlepage"><div>=
<div><h4 class=3D"title"><a name=3D"_additional_import_configuration_proper=
ties"></a>7.2.15.&nbsp;Additional Import Configuration Properties</h4></div=
></div></div><p>There are some additional properties which can be configure=
d by modifying
<code class=3D"literal">conf/sqoop-site.xml</code>. Properties can be speci=
fied the same as in Hadoop
configuration files, for example:</p><pre class=3D"screen">  &lt;property&g=
t;
    &lt;name&gt;property.name&lt;/name&gt;
    &lt;value&gt;property.value&lt;/value&gt;
  &lt;/property&gt;</pre><p>They can also be specified on the command line =
in the generic arguments, for
example:</p><pre class=3D"screen">sqoop import -D property.name=3Dproperty.=
value ...</pre><div class=3D"table"><a name=3D"idp3762184"></a><p class=3D"=
title"><b>Table&nbsp;12.&nbsp;Additional import configuration properties:</=
b></p><div class=3D"table-contents"><table summary=3D"Additional import con=
figuration properties:" style=3D"border-collapse: collapse;border-top: 0.5p=
t solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><col=
 align=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt soli=
d ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">sqoop.bigdecimal.format.string</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Controls how BigDecimal columns will                                   =
       formatted when stored as a String. A                                =
          value of <code class=3D"literal">true</code> (default) will use  =
                                          toPlainString to store them witho=
ut an                                        exponent component (0.0000001)=
; while                                         a value of <code class=3D"l=
iteral">false</code> will use toString                                     =
     which may include an exponent (1E-7)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">sqoop.hbase.add.row.key</code>
    </td><td style=3D"" align=3D"left">
    When set to <code class=3D"literal">false</code> (default), Sqoop      =
                                    will not add the column used as a row  =
                                       key into the row data in HBase. When=
                                          set to <code class=3D"literal">tr=
ue</code>, the column used as a                                           r=
ow key will be added to the row data                                       =
  in HBase.
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
/div><div class=3D"section" title=3D"7.3.&nbsp;Example Invocations"><div cl=
ass=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_example_invocat=
ions"></a>7.3.&nbsp;Example Invocations</h3></div></div></div><p>The follow=
ing examples illustrate how to use the import tool in a variety
of situations.</p><p>A basic import of a table named <code class=3D"literal=
">EMPLOYEES</code> in the <code class=3D"literal">corp</code> database:</p>=
<pre class=3D"screen">$ sqoop import --connect jdbc:mysql://db.foo.com/corp=
 --table EMPLOYEES</pre><p>A basic import requiring a login:</p><pre class=
=3D"screen">$ sqoop import --connect jdbc:mysql://db.foo.com/corp --table E=
MPLOYEES \
    --username SomeUser -P
Enter password: (hidden)</pre><p>Selecting specific columns from the <code =
class=3D"literal">EMPLOYEES</code> table:</p><pre class=3D"screen">$ sqoop =
import --connect jdbc:mysql://db.foo.com/corp --table EMPLOYEES \
    --columns "employee_id,first_name,last_name,job_title"</pre><p>Controll=
ing the import parallelism (using 8 parallel tasks):</p><pre class=3D"scree=
n">$ sqoop import --connect jdbc:mysql://db.foo.com/corp --table EMPLOYEES =
\
    -m 8</pre><p>Storing data in SequenceFiles, and setting the generated c=
lass name to
<code class=3D"literal">com.foocorp.Employee</code>:</p><pre class=3D"scree=
n">$ sqoop import --connect jdbc:mysql://db.foo.com/corp --table EMPLOYEES =
\
    --class-name com.foocorp.Employee --as-sequencefile</pre><p>Specifying =
the delimiters to use in a text-mode import:</p><pre class=3D"screen">$ sqo=
op import --connect jdbc:mysql://db.foo.com/corp --table EMPLOYEES \
    --fields-terminated-by '\t' --lines-terminated-by '\n' \
    --optionally-enclosed-by '\"'</pre><p>Importing the data to Hive:</p><p=
re class=3D"screen">$ sqoop import --connect jdbc:mysql://db.foo.com/corp -=
-table EMPLOYEES \
    --hive-import</pre><p>Importing only new employees:</p><pre class=3D"sc=
reen">$ sqoop import --connect jdbc:mysql://db.foo.com/corp --table EMPLOYE=
ES \
    --where "start_date &gt; '2010-01-01'"</pre><p>Changing the splitting c=
olumn from the default:</p><pre class=3D"screen">$ sqoop import --connect j=
dbc:mysql://db.foo.com/corp --table EMPLOYEES \
    --split-by dept_id</pre><p>Verifying that an import was successful:</p>=
<pre class=3D"screen">$ hadoop fs -ls EMPLOYEES
Found 5 items
drwxr-xr-x   - someuser somegrp          0 2010-04-27 16:40 /user/someuser/=
EMPLOYEES/_logs
-rw-r--r--   1 someuser somegrp    2913511 2010-04-27 16:40 /user/someuser/=
EMPLOYEES/part-m-00000
-rw-r--r--   1 someuser somegrp    1683938 2010-04-27 16:40 /user/someuser/=
EMPLOYEES/part-m-00001
-rw-r--r--   1 someuser somegrp    7245839 2010-04-27 16:40 /user/someuser/=
EMPLOYEES/part-m-00002
-rw-r--r--   1 someuser somegrp    7842523 2010-04-27 16:40 /user/someuser/=
EMPLOYEES/part-m-00003

$ hadoop fs -cat EMPLOYEES/part-m-00000 | head -n 10
0,joe,smith,engineering
1,jane,doe,marketing
...</pre><p>Performing an incremental import of new data, after having alre=
ady
imported the first 100,000 rows of a table:</p><pre class=3D"screen">$ sqoo=
p import --connect jdbc:mysql://db.foo.com/somedb --table sometable \
    --where "id &gt; 100000" --target-dir /incremental_dataset --append</pr=
e><p>An import of a table named <code class=3D"literal">EMPLOYEES</code> in=
 the <code class=3D"literal">corp</code> database that uses
validation to validate the import using the table row count and number of
rows copied into HDFS:
<a class=3D"link" href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuid=
e.html#validation" title=3D"11.&nbsp;validation">More Details</a></p><pre c=
lass=3D"screen">$ sqoop import --connect jdbc:mysql://db.foo.com/corp \
    --table EMPLOYEES --validate</pre></div></div><div class=3D"section" ti=
tle=3D"8.&nbsp;sqoop-import-all-tables"><div class=3D"titlepage"><div><div>=
<h2 class=3D"title" style=3D"clear: both"><a name=3D"_literal_sqoop_import_=
all_tables_literal"></a>8.&nbsp;<code class=3D"literal">sqoop-import-all-ta=
bles</code></h2></div></div></div><div class=3D"toc"><dl><dt><span class=3D=
"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.htm=
l#_purpose_2">8.1. Purpose</a></span></dt><dt><span class=3D"section"><a hr=
ef=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_2">8.=
2. Syntax</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqo=
op.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations_2">8.3. E=
xample Invocations</a></span></dt></dl></div><div class=3D"section" title=
=3D"8.1.&nbsp;Purpose"><div class=3D"titlepage"><div><div><h3 class=3D"titl=
e"><a name=3D"_purpose_2"></a>8.1.&nbsp;Purpose</h3></div></div></div><p>Th=
e <code class=3D"literal">import-all-tables</code> tool imports a set of ta=
bles from an RDBMS to HDFS.
Data from each table is stored in a separate directory in HDFS.</p><p>For t=
he <code class=3D"literal">import-all-tables</code> tool to be useful, the =
following conditions
must be met:</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=
=3D"disc"><li class=3D"listitem">
Each table must have a single-column primary key or <code class=3D"literal"=
>--autoreset-to-one-mapper</code> option must be used.
</li><li class=3D"listitem">
You must intend to import all columns of each table.
</li><li class=3D"listitem">
You must not intend to use non-default splitting column, nor impose
  any conditions via a <code class=3D"literal">WHERE</code> clause.
</li></ul></div></div><div class=3D"section" title=3D"8.2.&nbsp;Syntax"><di=
v class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_syntax_2"><=
/a>8.2.&nbsp;Syntax</h3></div></div></div><pre class=3D"screen">$ sqoop imp=
ort-all-tables (generic-args) (import-args)
$ sqoop-import-all-tables (generic-args) (import-args)</pre><p>Although the=
 Hadoop generic arguments must preceed any import arguments,
the import arguments can be entered in any order with respect to one
another.</p><div class=3D"table"><a name=3D"idp3789304"></a><p class=3D"tit=
le"><b>Table&nbsp;13.&nbsp;Common arguments</b></p><div class=3D"table-cont=
ents"><table summary=3D"Common arguments" style=3D"border-collapse: collaps=
e;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col a=
lign=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border=
-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connect &lt;jdbc-uri&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify JDBC connect string
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-manager &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify connection manager class to                                    =
      use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--driver &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Manually specify JDBC driver class                                     =
     to use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override $HADOOP_MAPRED_HOME
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--help</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print usage instructions
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password-file</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set path for a file containing the                                     =
     authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-P</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Read password from console
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password &lt;password&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--username &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication username
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--verbose</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print more information while working
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-param-file &lt;filename&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Optional properties file that                                          =
provides connection parameters
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--relaxed-isolation</code>
    </td><td style=3D"" align=3D"left">
    Set connection transaction isolation                                   =
       to read uncommitted for the mappers.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp3804736"></a><p class=3D"title"><b>Table&nbsp;1=
4.&nbsp;Import control arguments:</b></p><div class=3D"table-contents"><tab=
le summary=3D"Import control arguments:" style=3D"border-collapse: collapse=
;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col al=
ign=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-=
right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-avrodatafile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data to Avro Data Files
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-sequencefile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data to SequenceFiles
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-textfile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data as plain text (default)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-parquetfile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data to Parquet Files
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--direct</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Use direct import fast path
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--inline-lob-limit &lt;n&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set the maximum size for an inline LOB
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-m,--num-mappers &lt;n&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Use <span class=3D"emphasis"><em>n</em></span> map tasks to import in p=
arallel
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--warehouse-dir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    HDFS parent for table destination
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-z,--compress</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Enable compression
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--compression-codec &lt;c&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Use Hadoop codec (default gzip)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--exclude-tables &lt;tables&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Comma separated list of tables to exclude                             f=
rom import process
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--autoreset-to-one-mapper</code>
    </td><td style=3D"" align=3D"left">
    Import should use one mapper if a table                             wit=
h no primary key is encountered
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>Thes=
e arguments behave in the same manner as they do when used for the
<code class=3D"literal">sqoop-import</code> tool, but the <code class=3D"li=
teral">--table</code>, <code class=3D"literal">--split-by</code>, <code cla=
ss=3D"literal">--columns</code>,
and <code class=3D"literal">--where</code> arguments are invalid for <code =
class=3D"literal">sqoop-import-all-tables</code>.
The <code class=3D"literal">--exclude-tables argument is for +sqoop-import-=
all-tables</code> only.</p><div class=3D"table"><a name=3D"idp3822696"></a>=
<p class=3D"title"><b>Table&nbsp;15.&nbsp;Output line formatting arguments:=
</b></p><div class=3D"table-contents"><table summary=3D"Output line formatt=
ing arguments:" style=3D"border-collapse: collapse;border-top: 0.5pt solid =
; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><col align=
=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt solid ; bo=
rder-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field enclosing                                    char=
acter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the escape character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--fields-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the field separator character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the end-of-line character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--mysql-delimiters</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Uses MySQL=92s default delimiter set:                                  =
 fields: <code class=3D"literal">,</code>  lines: <code class=3D"literal">\=
n</code>                                    escaped-by: <code class=3D"lite=
ral">\</code>                                    optionally-enclosed-by: <c=
ode class=3D"literal">'</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--optionally-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing character
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp3833424"></a><p class=3D"title"><b>Table&nbsp;1=
6.&nbsp;Input parsing arguments:</b></p><div class=3D"table-contents"><tabl=
e summary=3D"Input parsing arguments:" style=3D"border-collapse: collapse;b=
order-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col alig=
n=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-ri=
ght: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field encloser
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input escape                                          characte=
r
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-fields-terminated-by &lt;char&gt;</code=
>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input field separator
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input end-of-line                                          cha=
racter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--input-optionally-enclosed-by &lt;char&gt;</co=
de>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing                                          charact=
er
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp3841848"></a><p class=3D"title"><b>Table&nbsp;1=
7.&nbsp;Hive arguments:</b></p><div class=3D"table-contents"><table summary=
=3D"Hive arguments:" style=3D"border-collapse: collapse;border-top: 0.5pt s=
olid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><col al=
ign=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt solid ;=
 border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override <code class=3D"literal">$HIVE_HOME</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-import</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Import tables into Hive (Uses Hive=92s                               de=
fault delimiters if none are set.)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-overwrite</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Overwrite existing data in the Hive table.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--create-hive-table</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    If set, then the job will fail if the target hive
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    table exits. By default this property is false.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-table &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the table name to use when importing                              =
to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-drop-import-delims</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Drops <span class=3D"emphasis"><em>\n</em></span>, <span class=3D"empha=
sis"><em>\r</em></span>, and <span class=3D"emphasis"><em>\01</em></span> f=
rom string                              fields when importing to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-delims-replacement</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Replace <span class=3D"emphasis"><em>\n</em></span>, <span class=3D"emp=
hasis"><em>\r</em></span>, and <span class=3D"emphasis"><em>\01</em></span>=
 from string                              fields with user defined string w=
hen importing to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-partition-key</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Name of a hive field to partition are                               sha=
rded on
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-partition-value &lt;v&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    String-value that serves as partition key                              =
for this imported into hive in this job.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--map-column-hive &lt;map&gt;</code>
    </td><td style=3D"" align=3D"left">
    Override default mapping from SQL type to                              =
Hive type for configured columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp3857784"></a><p class=3D"title"><b>Table&nbsp;1=
8.&nbsp;Code generation arguments:</b></p><div class=3D"table-contents"><ta=
ble summary=3D"Code generation arguments:" style=3D"border-collapse: collap=
se;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col =
align=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"borde=
r-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--bindir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Output directory for compiled objects
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--jar-file &lt;file&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Disable code generation; use specified jar
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--outdir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Output directory for generated code
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--package-name &lt;name&gt;</code>
    </td><td style=3D"" align=3D"left">
    Put auto-generated classes in this package
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>The =
<code class=3D"literal">import-all-tables</code> tool does not support the =
<code class=3D"literal">--class-name</code> argument.
You may, however, specify a package with <code class=3D"literal">--package-=
name</code> in which all
generated classes will be placed.</p></div><div class=3D"section" title=3D"=
8.3.&nbsp;Example Invocations"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a name=3D"_example_invocations_2"></a>8.3.&nbsp;Example Invocat=
ions</h3></div></div></div><p>Import all tables from the <code class=3D"lit=
eral">corp</code> database:</p><pre class=3D"screen">$ sqoop import-all-tab=
les --connect jdbc:mysql://db.foo.com/corp</pre><p>Verifying that it worked=
:</p><pre class=3D"screen">$ hadoop fs -ls
Found 4 items
drwxr-xr-x   - someuser somegrp       0 2010-04-27 17:15 /user/someuser/EMP=
LOYEES
drwxr-xr-x   - someuser somegrp       0 2010-04-27 17:15 /user/someuser/PAY=
CHECKS
drwxr-xr-x   - someuser somegrp       0 2010-04-27 17:15 /user/someuser/DEP=
ARTMENTS
drwxr-xr-x   - someuser somegrp       0 2010-04-27 17:15 /user/someuser/OFF=
ICE_SUPPLIES</pre></div></div><div class=3D"section" title=3D"9.&nbsp;sqoop=
-import-mainframe"><div class=3D"titlepage"><div><div><h2 class=3D"title" s=
tyle=3D"clear: both"><a name=3D"_literal_sqoop_import_mainframe_literal"></=
a>9.&nbsp;<code class=3D"literal">sqoop-import-mainframe</code></h2></div><=
/div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_3">9.1. Purp=
ose</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_syntax_3">9.2. Syntax</a></span></d=
t><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/d=
ocs/1.4.6/SqoopUserGuide.html#_connecting_to_a_mainframe">9.2.1. Connecting=
 to a Mainframe</a></span></dt><dt><span class=3D"section"><a href=3D"https=
://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_selecting_the_files_to_=
import">9.2.2. Selecting the Files to Import</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_controlling_parallelism_2">9.2.3. Controlling Parallelism</a></span><=
/dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.=
4.6/SqoopUserGuide.html#_controlling_distributed_cache_2">9.2.4. Controllin=
g Distributed Cache</a></span></dt><dt><span class=3D"section"><a href=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_controlling_the_imp=
ort_process_2">9.2.5. Controlling the Import Process</a></span></dt><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_file_formats_2">9.2.6. File Formats</a></span></dt><dt><span =
class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserG=
uide.html#_importing_data_into_hive_2">9.2.7. Importing Data Into Hive</a><=
/span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/=
docs/1.4.6/SqoopUserGuide.html#_importing_data_into_hbase_2">9.2.8. Importi=
ng Data Into HBase</a></span></dt><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_importing_data_into_=
accumulo_2">9.2.9. Importing Data Into Accumulo</a></span></dt><dt><span cl=
ass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGui=
de.html#_additional_import_configuration_properties_2">9.2.10. Additional I=
mport Configuration Properties</a></span></dt></dl></dd><dt><span class=3D"=
section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html=
#_example_invocations_3">9.3. Example Invocations</a></span></dt></dl></div=
><div class=3D"section" title=3D"9.1.&nbsp;Purpose"><div class=3D"titlepage=
"><div><div><h3 class=3D"title"><a name=3D"_purpose_3"></a>9.1.&nbsp;Purpos=
e</h3></div></div></div><p>The <code class=3D"literal">import-mainframe</co=
de> tool imports all sequential datasets
in a partitioned dataset(PDS) on a mainframe to HDFS.  A PDS is
akin to a directory on the open systems.
The records in a dataset can contain only character data.
Records will be stored with the entire record as a single text field.</p></=
div><div class=3D"section" title=3D"9.2.&nbsp;Syntax"><div class=3D"titlepa=
ge"><div><div><h3 class=3D"title"><a name=3D"_syntax_3"></a>9.2.&nbsp;Synta=
x</h3></div></div></div><div class=3D"toc"><dl><dt><span class=3D"section">=
<a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_connect=
ing_to_a_mainframe">9.2.1. Connecting to a Mainframe</a></span></dt><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_selecting_the_files_to_import">9.2.2. Selecting the Files to =
Import</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.=
apache.org/docs/1.4.6/SqoopUserGuide.html#_controlling_parallelism_2">9.2.3=
. Controlling Parallelism</a></span></dt><dt><span class=3D"section"><a hre=
f=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_controlling_d=
istributed_cache_2">9.2.4. Controlling Distributed Cache</a></span></dt><dt=
><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqo=
opUserGuide.html#_controlling_the_import_process_2">9.2.5. Controlling the =
Import Process</a></span></dt><dt><span class=3D"section"><a href=3D"https:=
//sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_file_formats_2">9.2.6. F=
ile Formats</a></span></dt><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_importing_data_into_hive_2"=
>9.2.7. Importing Data Into Hive</a></span></dt><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_import=
ing_data_into_hbase_2">9.2.8. Importing Data Into HBase</a></span></dt><dt>=
<span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoo=
pUserGuide.html#_importing_data_into_accumulo_2">9.2.9. Importing Data Into=
 Accumulo</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqo=
op.apache.org/docs/1.4.6/SqoopUserGuide.html#_additional_import_configurati=
on_properties_2">9.2.10. Additional Import Configuration Properties</a></sp=
an></dt></dl></div><pre class=3D"screen">$ sqoop import-mainframe (generic-=
args) (import-args)
$ sqoop-import-mainframe (generic-args) (import-args)</pre><p>While the Had=
oop generic arguments must precede any import arguments,
you can type the import arguments in any order with respect to one
another.</p><div class=3D"table"><a name=3D"idp3872664"></a><p class=3D"tit=
le"><b>Table&nbsp;19.&nbsp;Common arguments</b></p><div class=3D"table-cont=
ents"><table summary=3D"Common arguments" style=3D"border-collapse: collaps=
e;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col a=
lign=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border=
-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connect &lt;hostname&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify mainframe host to connect
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-manager &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify connection manager class to                                    =
      use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override $HADOOP_MAPRED_HOME
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--help</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print usage instructions
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password-file</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set path for a file containing the                                     =
     authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-P</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Read password from console
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password &lt;password&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--username &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication username
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--verbose</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print more information while working
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--connection-param-file &lt;filename&gt;</code>
    </td><td style=3D"" align=3D"left">
    Optional properties file that                                          =
provides connection parameters
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"section" title=3D"9.2.1.&nbsp;Connecting to a Mainframe"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_connecting_to_a_ma=
inframe"></a>9.2.1.&nbsp;Connecting to a Mainframe</h4></div></div></div><p=
>Sqoop is designed to import mainframe datasets into HDFS. To do
so, you must specify a mainframe host name in the Sqoop <code class=3D"lite=
ral">--connect</code> argument.</p><pre class=3D"screen">$ sqoop import-mai=
nframe --connect z390</pre><p>This will connect to the mainframe host z390 =
via ftp.</p><p>You might need to authenticate against the mainframe host to
access it. You can use the <code class=3D"literal">--username</code> to sup=
ply a username to the mainframe.
Sqoop provides couple of different ways to supply a password,
secure and non-secure, to the mainframe which is detailed below.</p><p titl=
e=3D"Secure way of supplying password to the mainframe"><b>Secure way of su=
pplying password to the mainframe.&nbsp;</b>You should save the password in=
 a file on the users home directory with 400
permissions and specify the path to that file using the <span class=3D"stro=
ng"><strong><code class=3D"literal">--password-file</code></strong></span>
argument, and is the preferred method of entering credentials. Sqoop will
then read the password from the file and pass it to the MapReduce cluster
using secure means with out exposing the password in the job configuration.
The file containing the password can either be on the Local FS or HDFS.</p>=
<p>Example:</p><pre class=3D"screen">$ sqoop import-mainframe --connect z39=
0 \
    --username david --password-file ${user.home}/.password</pre><p>Another=
 way of supplying passwords is using the <code class=3D"literal">-P</code> =
argument which will
read a password from a console prompt.</p><div class=3D"warning" title=3D"W=
arning" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D=
"0" summary=3D"Warning"><tbody><tr><td rowspan=3D"2" align=3D"center" valig=
n=3D"top" width=3D"25"><img alt=3D"[Warning]" src=3D"https://sqoop.apache.o=
rg/docs/1.4.6/images/warning.png"></td><th align=3D"left">Warning</th></tr>=
<tr><td align=3D"left" valign=3D"top"><p>The <code class=3D"literal">--pass=
word</code> parameter is insecure, as other users may
be able to read your password from the command-line arguments via
the output of programs such as <code class=3D"literal">ps</code>. The <span=
 class=3D"strong"><strong><code class=3D"literal">-P</code></strong></span>=
 argument is the preferred
method over using the <code class=3D"literal">--password</code> argument. C=
redentials may still be
transferred between nodes of the MapReduce cluster using insecure means.</p=
></td></tr></tbody></table></div><p>Example:</p><pre class=3D"screen">$ sqo=
op import-mainframe --connect z390 --username david --password 12345</pre><=
div class=3D"table"><a name=3D"idp3894328"></a><p class=3D"title"><b>Table&=
nbsp;20.&nbsp;Import control arguments:</b></p><div class=3D"table-contents=
"><table summary=3D"Import control arguments:" style=3D"border-collapse: co=
llapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><=
col align=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"b=
order-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-avrodatafile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data to Avro Data Files
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-sequencefile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data to SequenceFiles
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-textfile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data as plain text (default)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--as-parquetfile</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Imports data to Parquet Files
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--delete-target-dir</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Delete the import target directory                                  if =
it exists
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-m,--num-mappers &lt;n&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Use <span class=3D"emphasis"><em>n</em></span> map tasks to import in p=
arallel
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--target-dir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    HDFS destination dir
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--warehouse-dir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    HDFS parent for table destination
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-z,--compress</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Enable compression
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--compression-codec &lt;c&gt;</code>
    </td><td style=3D"" align=3D"left">
    Use Hadoop codec (default gzip)
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"9.2.2.&nbsp;Selecting the Files to Import"><=
div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_selecting=
_the_files_to_import"></a>9.2.2.&nbsp;Selecting the Files to Import</h4></d=
iv></div></div><p>You can use the <code class=3D"literal">--dataset</code> =
argument to specify a partitioned dataset name.
All sequential datasets in the partitioned dataset will be imported.</p></d=
iv><div class=3D"section" title=3D"9.2.3.&nbsp;Controlling Parallelism"><di=
v class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_controlling=
_parallelism_2"></a>9.2.3.&nbsp;Controlling Parallelism</h4></div></div></d=
iv><p>Sqoop imports data in parallel by making multiple ftp connections to =
the
mainframe to transfer multiple files simultaneously.  You can specify the
number of map tasks (parallel processes) to use to perform the import by
using the <code class=3D"literal">-m</code> or <code class=3D"literal">--nu=
m-mappers</code> argument. Each of these arguments
takes an integer value which corresponds to the degree of parallelism
to employ. By default, four tasks are used. You can adjust this value to
maximize the data transfer rate from the mainframe.</p></div><div class=3D"=
section" title=3D"9.2.4.&nbsp;Controlling Distributed Cache"><div class=3D"=
titlepage"><div><div><h4 class=3D"title"><a name=3D"_controlling_distribute=
d_cache_2"></a>9.2.4.&nbsp;Controlling Distributed Cache</h4></div></div></=
div><p>Sqoop will copy the jars in $SQOOP_HOME/lib folder to job cache ever=
y
time when start a Sqoop job. When launched by Oozie this is unnecessary
since Oozie use its own Sqoop share lib which keeps Sqoop dependencies
in the distributed cache. Oozie will do the localization on each
worker node for the Sqoop dependencies only once during the first Sqoop
job and reuse the jars on worker node for subsquencial jobs. Using
option <code class=3D"literal">--skip-dist-cache</code> in Sqoop command wh=
en launched by Oozie will
skip the step which Sqoop copies its dependencies to job cache and save
massive I/O.</p></div><div class=3D"section" title=3D"9.2.5.&nbsp;Controlli=
ng the Import Process"><div class=3D"titlepage"><div><div><h4 class=3D"titl=
e"><a name=3D"_controlling_the_import_process_2"></a>9.2.5.&nbsp;Controllin=
g the Import Process</h4></div></div></div><p>By default, Sqoop will import=
 all sequential files in a partitioned dataset
<code class=3D"literal">pds</code> to a directory named <code class=3D"lite=
ral">pds</code> inside your home directory in HDFS. For
example, if your username is <code class=3D"literal">someuser</code>, then =
the import tool will write to
<code class=3D"literal">/user/someuser/pds/(files)</code>. You can adjust t=
he parent directory of
the import with the <code class=3D"literal">--warehouse-dir</code> argument=
. For example:</p><pre class=3D"screen">$ sqoop import-mainframe --connnect=
 &lt;host&gt; --dataset foo --warehouse-dir /shared \
    ...</pre><p>This command would write to a set of files in the <code cla=
ss=3D"literal">/shared/pds/</code> directory.</p><p>You can also explicitly=
 choose the target directory, like so:</p><pre class=3D"screen">$ sqoop imp=
ort-mainframe --connnect &lt;host&gt; --dataset foo --target-dir /dest \
    ...</pre><p>This will import the files into the <code class=3D"literal"=
>/dest</code> directory. <code class=3D"literal">--target-dir</code> is
incompatible with <code class=3D"literal">--warehouse-dir</code>.</p><p>By =
default, imports go to a new target location. If the destination directory
already exists in HDFS, Sqoop will refuse to import and overwrite that
directory=92s contents.</p></div><div class=3D"section" title=3D"9.2.6.&nbs=
p;File Formats"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a n=
ame=3D"_file_formats_2"></a>9.2.6.&nbsp;File Formats</h4></div></div></div>=
<p>By default, each record in a dataset is stored
as a text record with a newline at the end.  Each record is assumed to cont=
ain
a single text field with the name DEFAULT_COLUMN.
When Sqoop imports data to HDFS, it generates a Java class which can
reinterpret the text files that it creates.</p><p>You can also import mainf=
rame records to Sequence, Avro, or Parquet files.</p><p>By default, data is=
 not compressed. You can compress your data by
using the deflate (gzip) algorithm with the <code class=3D"literal">-z</cod=
e> or <code class=3D"literal">--compress</code>
argument, or specify any Hadoop compression codec using the
<code class=3D"literal">--compression-codec</code> argument.</p><div class=
=3D"table"><a name=3D"idp3922712"></a><p class=3D"title"><b>Table&nbsp;21.&=
nbsp;Output line formatting arguments:</b></p><div class=3D"table-contents"=
><table summary=3D"Output line formatting arguments:" style=3D"border-colla=
pse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><col=
group><col align=3D"left"><col align=3D"left"></colgroup><thead><tr><th sty=
le=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"l=
eft">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field enclosing                                    char=
acter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the escape character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--fields-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the field separator character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the end-of-line character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--mysql-delimiters</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Uses MySQL=92s default delimiter set:                                  =
 fields: <code class=3D"literal">,</code>  lines: <code class=3D"literal">\=
n</code>                                    escaped-by: <code class=3D"lite=
ral">\</code>                                    optionally-enclosed-by: <c=
ode class=3D"literal">'</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--optionally-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing character
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>Sinc=
e mainframe record contains only one field, importing to delimited files
will not contain any field delimiter.  However, the field may be enclosed w=
ith
enclosing character or escaped by an escaping character.</p><div class=3D"t=
able"><a name=3D"idp3933952"></a><p class=3D"title"><b>Table&nbsp;22.&nbsp;=
Input parsing arguments:</b></p><div class=3D"table-contents"><table summar=
y=3D"Input parsing arguments:" style=3D"border-collapse: collapse;border-to=
p: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"lef=
t"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5=
pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field encloser
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input escape                                          characte=
r
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-fields-terminated-by &lt;char&gt;</code=
>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input field separator
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input end-of-line                                          cha=
racter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--input-optionally-enclosed-by &lt;char&gt;</co=
de>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing                                          charact=
er
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>When=
 Sqoop imports data to HDFS, it generates a Java class which can
reinterpret the text files that it creates when doing a
delimited-format import. The delimiters are chosen with arguments such
as <code class=3D"literal">--fields-terminated-by</code>; this controls bot=
h how the data is
written to disk, and how the generated <code class=3D"literal">parse()</cod=
e> method reinterprets
this data. The delimiters used by the <code class=3D"literal">parse()</code=
> method can be chosen
independently of the output arguments, by using
<code class=3D"literal">--input-fields-terminated-by</code>, and so on. Thi=
s is useful, for example, to
generate classes which can parse records created with one set of
delimiters, and emit the records to a different set of files using a
separate set of delimiters.</p><div class=3D"table"><a name=3D"idp3944768">=
</a><p class=3D"title"><b>Table&nbsp;23.&nbsp;Hive arguments:</b></p><div c=
lass=3D"table-contents"><table summary=3D"Hive arguments:" style=3D"border-=
collapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "=
><colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr><t=
h style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=
=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override <code class=3D"literal">$HIVE_HOME</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-import</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Import tables into Hive (Uses Hive=92s                               de=
fault delimiters if none are set.)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-overwrite</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Overwrite existing data in the Hive table.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--create-hive-table</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    If set, then the job will fail if the target hive
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    table exits. By default this property is false.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-table &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the table name to use when importing                              =
to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-drop-import-delims</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Drops <span class=3D"emphasis"><em>\n</em></span>, <span class=3D"empha=
sis"><em>\r</em></span>, and <span class=3D"emphasis"><em>\01</em></span> f=
rom string                              fields when importing to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-delims-replacement</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Replace <span class=3D"emphasis"><em>\n</em></span>, <span class=3D"emp=
hasis"><em>\r</em></span>, and <span class=3D"emphasis"><em>\01</em></span>=
 from string                              fields with user defined string w=
hen importing to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-partition-key</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Name of a hive field to partition are                               sha=
rded on
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-partition-value &lt;v&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    String-value that serves as partition key                              =
for this imported into hive in this job.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--map-column-hive &lt;map&gt;</code>
    </td><td style=3D"" align=3D"left">
    Override default mapping from SQL type to                              =
Hive type for configured columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"9.2.7.&nbsp;Importing Data Into Hive"><div c=
lass=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_importing_data=
_into_hive_2"></a>9.2.7.&nbsp;Importing Data Into Hive</h4></div></div></di=
v><p>Sqoop=92s import tool=92s main function is to upload your data into fi=
les
in HDFS. If you have a Hive metastore associated with your HDFS
cluster, Sqoop can also import the data into Hive by generating and
executing a <code class=3D"literal">CREATE TABLE</code> statement to define=
 the data=92s layout in
Hive. Importing data into Hive is as simple as adding the
<span class=3D"strong"><strong><code class=3D"literal">--hive-import</code>=
</strong></span> option to your Sqoop command line.</p><p>If the Hive table=
 already exists, you can specify the
<span class=3D"strong"><strong><code class=3D"literal">--hive-overwrite</co=
de></strong></span> option to indicate that existing table in hive must
be replaced. After your data is imported into HDFS or this step is
omitted, Sqoop will generate a Hive script containing a <code class=3D"lite=
ral">CREATE TABLE</code>
operation defining your columns using Hive=92s types, and a <code class=3D"=
literal">LOAD DATA INPATH</code>
statement to move the data files into Hive=92s warehouse directory.</p><p>T=
he script will be executed by calling
the installed copy of hive on the machine where Sqoop is run. If you have
multiple Hive installations, or <code class=3D"literal">hive</code> is not =
in your <code class=3D"literal">$PATH</code>, use the
<span class=3D"strong"><strong><code class=3D"literal">--hive-home</code></=
strong></span> option to identify the Hive installation directory.
Sqoop will use <code class=3D"literal">$HIVE_HOME/bin/hive</code> from here=
.</p><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin=
-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=
=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=
=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"=
left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>This function =
is incompatible with <code class=3D"literal">--as-avrodatafile</code> and
<code class=3D"literal">--as-sequencefile</code>.</p></td></tr></tbody></ta=
ble></div><p>Even though Hive supports escaping characters, it does not
handle escaping of new-line character. Also, it does not support
the notion of enclosing characters that may include field delimiters
in the enclosed string.  It is therefore recommended that you choose
unambiguous field and record-terminating delimiters without the help
of escaping and enclosing characters when working with Hive; this is
due to limitations of Hive=92s input parsing abilities. If you do use
<code class=3D"literal">--escaped-by</code>, <code class=3D"literal">--encl=
osed-by</code>, or <code class=3D"literal">--optionally-enclosed-by</code> =
when
importing data into Hive, Sqoop will print a warning message.</p><p>Hive wi=
ll have problems using Sqoop-imported data if your database=92s
rows contain string fields that have Hive=92s default row delimiters
(<code class=3D"literal">\n</code> and <code class=3D"literal">\r</code> ch=
aracters) or column delimiters (<code class=3D"literal">\01</code> characte=
rs)
present in them.  You can use the <code class=3D"literal">--hive-drop-impor=
t-delims</code> option
to drop those characters on import to give Hive-compatible text data.
Alternatively, you can use the <code class=3D"literal">--hive-delims-replac=
ement</code> option
to replace those characters with a user-defined string on import to give
Hive-compatible text data.  These options should only be used if you use
Hive=92s default delimiters and should not be used if different delimiters
are specified.</p><p>Sqoop will pass the field and record delimiters throug=
h to Hive. If you do
not set any delimiters and do use <code class=3D"literal">--hive-import</co=
de>, the field delimiter will
be set to <code class=3D"literal">^A</code> and the record delimiter will b=
e set to <code class=3D"literal">\n</code> to be consistent
with Hive=92s defaults.</p><p>Sqoop will by default import NULL values as s=
tring <code class=3D"literal">null</code>. Hive is however
using string <code class=3D"literal">\N</code> to denote <code class=3D"lit=
eral">NULL</code> values and therefore predicates dealing
with <code class=3D"literal">NULL</code> (like <code class=3D"literal">IS N=
ULL</code>) will not work correctly. You should append
parameters <code class=3D"literal">--null-string</code> and <code class=3D"=
literal">--null-non-string</code> in case of import job or
<code class=3D"literal">--input-null-string</code> and <code class=3D"liter=
al">--input-null-non-string</code> in case of an export job if
you wish to properly preserve <code class=3D"literal">NULL</code> values. B=
ecause sqoop is using those
parameters in generated code, you need to properly escape value <code class=
=3D"literal">\N</code> to <code class=3D"literal">\\N</code>:</p><pre class=
=3D"screen">$ sqoop import  ... --null-string '\\N' --null-non-string '\\N'=
</pre><p>The table name used in Hive is, by default, the same as that of th=
e
source table. You can control the output table name with the <code class=3D=
"literal">--hive-table</code>
option.</p><p>Hive can put data into partitions for more efficient query
performance.  You can tell a Sqoop job to import data for Hive into a
particular partition by specifying the <code class=3D"literal">--hive-parti=
tion-key</code> and
<code class=3D"literal">--hive-partition-value</code> arguments.  The parti=
tion value must be a
string.  Please see the Hive documentation for more details on
partitioning.</p><p>You can import compressed tables into Hive using the <c=
ode class=3D"literal">--compress</code> and
<code class=3D"literal">--compression-codec</code> options. One downside to=
 compressing tables imported
into Hive is that many codecs cannot be split for processing by parallel ma=
p
tasks. The lzop codec, however, does support splitting. When importing tabl=
es
with this codec, Sqoop will automatically index the files for splitting and
configuring a new Hive table with the correct InputFormat. This feature
currently requires that all partitions of a table be compressed with the lz=
op
codec.</p><div class=3D"table"><a name=3D"idp3982512"></a><p class=3D"title=
"><b>Table&nbsp;24.&nbsp;HBase arguments:</b></p><div class=3D"table-conten=
ts"><table summary=3D"HBase arguments:" style=3D"border-collapse: collapse;=
border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col ali=
gn=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-r=
ight: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--column-family &lt;family&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the target column family for the import
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hbase-create-table</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    If specified, create missing HBase tables
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hbase-row-key &lt;col&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specifies which input column to use as the                             =
 row key
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    In case, if input table contains composite
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    key, then &lt;col&gt; must be in the form of a
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    comma-separated list of composite key
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    attributes
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hbase-table &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specifies an HBase table to use as the                               ta=
rget instead of HDFS
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--hbase-bulkload</code>
    </td><td style=3D"" align=3D"left">
    Enables bulk loading
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"9.2.8.&nbsp;Importing Data Into HBase"><div =
class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_importing_dat=
a_into_hbase_2"></a>9.2.8.&nbsp;Importing Data Into HBase</h4></div></div><=
/div><p>Sqoop supports additional import targets beyond HDFS and Hive. Sqoo=
p
can also import records into a table in HBase.</p><p>By specifying <code cl=
ass=3D"literal">--hbase-table</code>, you instruct Sqoop to import
to a table in HBase rather than a directory in HDFS. Sqoop will
import data to the table specified as the argument to <code class=3D"litera=
l">--hbase-table</code>.
Each row of the input table will be transformed into an HBase
<code class=3D"literal">Put</code> operation to a row of the output table. =
The key for each row is
taken from a column of the input. By default Sqoop will use the split-by
column as the row key column. If that is not specified, it will try to
identify the primary key column, if any, of the source table. You can
manually specify the row key column with <code class=3D"literal">--hbase-ro=
w-key</code>. Each output
column will be placed in the same column family, which must be specified
with <code class=3D"literal">--column-family</code>.</p><div class=3D"note"=
 title=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table b=
order=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" =
valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache=
.org/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr><tr>=
<td align=3D"left" valign=3D"top"><p>This function is incompatible with dir=
ect import (parameter
<code class=3D"literal">--direct</code>).</p></td></tr></tbody></table></di=
v><p>If the input table has composite key, the <code class=3D"literal">--hb=
ase-row-key</code> must be
in the form of a comma-separated list of composite key attributes.
In this case, the row key for HBase row will be generated by combining
values of composite key attributes using underscore as a separator.
NOTE: Sqoop import for a table with composite key will work only if
parameter <code class=3D"literal">--hbase-row-key</code> has been specified=
.</p><p>If the target table and column family do not exist, the Sqoop job w=
ill
exit with an error. You should create the target table and column family
before running an import. If you specify <code class=3D"literal">--hbase-cr=
eate-table</code>, Sqoop
will create the target table and column family if they do not exist,
using the default parameters from your HBase configuration.</p><p>Sqoop cur=
rently serializes all values to HBase by converting each field
to its string representation (as if you were importing to HDFS in text
mode), and then inserts the UTF-8 bytes of this string in the target
cell. Sqoop will skip all rows containing null values in all columns
except the row key column.</p><p>To decrease the load on hbase, Sqoop can d=
o bulk loading as opposed to
direct writes. To use bulk loading, enable it using <code class=3D"literal"=
>--hbase-bulkload</code>.</p><div class=3D"table"><a name=3D"idp4002008"></=
a><p class=3D"title"><b>Table&nbsp;25.&nbsp;Accumulo arguments:</b></p><div=
 class=3D"table-contents"><table summary=3D"Accumulo arguments:" style=3D"b=
order-collapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt sol=
id ; "><colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead>=
<tr><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "=
 align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-table &lt;table-nam&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specifies an Accumulo table to use                                     =
 as the target instead of HDFS
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-column-family &lt;family&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the target column family for                                      =
the import
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-create-table</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    If specified, create missing                                      Accum=
ulo tables
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-row-key &lt;col&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specifies which input column to use                                    =
  as the row key
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-visibility &lt;vis&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    (Optional) Specifies a visibility                                      =
token to apply to all rows inserted                                      in=
to Accumulo.  Default is the                                      empty str=
ing.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-batch-size &lt;size&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    (Optional) Sets the size in bytes                                      =
of Accumulo=92s write buffer. Default                                      =
is 4MB.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-max-latency &lt;ms&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    (Optional) Sets the max latency in                                     =
 milliseconds for the Accumulo                                      batch w=
riter.  Default is 0.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-zookeepers &lt;host:port&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Comma-separated list of Zookeeper                                      =
servers used by the Accumulo instance
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-instance &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Name of the target Accumulo instance
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--accumulo-user &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Name of the Accumulo user to import as
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--accumulo-password &lt;password&gt;</code>
    </td><td style=3D"" align=3D"left">
    Password for the Accumulo user
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"9.2.9.&nbsp;Importing Data Into Accumulo"><d=
iv class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_importing_=
data_into_accumulo_2"></a>9.2.9.&nbsp;Importing Data Into Accumulo</h4></di=
v></div></div><p>Sqoop supports importing records into a table in Accumulo<=
/p><p>By specifying <code class=3D"literal">--accumulo-table</code>, you in=
struct Sqoop to import
to a table in Accumulo rather than a directory in HDFS. Sqoop will
import data to the table specified as the argument to <code class=3D"litera=
l">--accumulo-table</code>.
Each row of the input table will be transformed into an Accumulo
<code class=3D"literal">Mutation</code> operation to a row of the output ta=
ble. The key for each row is
taken from a column of the input. By default Sqoop will use the split-by
column as the row key column. If that is not specified, it will try to
identify the primary key column, if any, of the source table. You can
manually specify the row key column with <code class=3D"literal">--accumulo=
-row-key</code>. Each output
column will be placed in the same column family, which must be specified
with <code class=3D"literal">--accumulo-column-family</code>.</p><div class=
=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"=
><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D=
"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqo=
op.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th>=
</tr><tr><td align=3D"left" valign=3D"top"><p>This function is incompatible=
 with direct import (parameter
<code class=3D"literal">--direct</code>), and cannot be used in the same op=
eration as an HBase import.</p></td></tr></tbody></table></div><p>If the ta=
rget table does not exist, the Sqoop job will
exit with an error, unless the <code class=3D"literal">--accumulo-create-ta=
ble</code> parameter is
specified. Otherwise, you should create the target table before running
an import.</p><p>Sqoop currently serializes all values to Accumulo by conve=
rting each field
to its string representation (as if you were importing to HDFS in text
mode), and then inserts the UTF-8 bytes of this string in the target
cell.</p><p>By default, no visibility is applied to the resulting cells in =
Accumulo,
so the data will be visible to any Accumulo user. Use the
<code class=3D"literal">--accumulo-visibility</code> parameter to specify a=
 visibility token to
apply to all rows in the import job.</p><p>For performance tuning, use the =
optional <code class=3D"literal">--accumulo-buffer-size\</code> and
<code class=3D"literal">--accumulo-max-latency</code> parameters. See Accum=
ulo=92s documentation for
an explanation of the effects of these parameters.</p><p>In order to connec=
t to an Accumulo instance, you must specify the location
of a Zookeeper ensemble using the <code class=3D"literal">--accumulo-zookee=
pers</code> parameter,
the name of the Accumulo instance (<code class=3D"literal">--accumulo-insta=
nce</code>), and the
username and password to connect with (<code class=3D"literal">--accumulo-u=
ser</code> and
<code class=3D"literal">--accumulo-password</code> respectively).</p><div c=
lass=3D"table"><a name=3D"idp4027504"></a><p class=3D"title"><b>Table&nbsp;=
26.&nbsp;Code generation arguments:</b></p><div class=3D"table-contents"><t=
able summary=3D"Code generation arguments:" style=3D"border-collapse: colla=
pse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col=
 align=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"bord=
er-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--bindir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Output directory for compiled objects
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--class-name &lt;name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the generated class name. This overrides                         <=
code class=3D"literal">--package-name</code>. When combined with           =
               <code class=3D"literal">--jar-file</code>, sets the input cl=
ass.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--jar-file &lt;file&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Disable code generation; use specified jar
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--outdir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Output directory for generated code
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--package-name &lt;name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Put auto-generated classes in this package
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--map-column-java &lt;m&gt;</code>
    </td><td style=3D"" align=3D"left">
    Override default mapping from SQL type to                         Java =
type for configured columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>As m=
entioned earlier, a byproduct of importing a table to HDFS is a
class which can manipulate the imported data.
You should use this class in your subsequent
MapReduce processing of the data.</p><p>The class is typically named after =
the partitioned dataset name; a
partitioned dataset named <code class=3D"literal">foo</code> will
generate a class named <code class=3D"literal">foo</code>. You may want to =
override this class
name. For example, if your partitioned dataset
is named <code class=3D"literal">EMPLOYEES</code>, you may want to
specify <code class=3D"literal">--class-name Employee</code> instead. Simil=
arly, you can specify
just the package name with <code class=3D"literal">--package-name</code>. T=
he following import
generates a class named <code class=3D"literal">com.foocorp.SomePDS</code>:=
</p><pre class=3D"screen">$ sqoop import-mainframe --connect &lt;host&gt; -=
-dataset SomePDS --package-name com.foocorp</pre><p>The <code class=3D"lite=
ral">.java</code> source file for your class will be written to the current
working directory when you run <code class=3D"literal">sqoop</code>. You ca=
n control the output
directory with <code class=3D"literal">--outdir</code>. For example, <code =
class=3D"literal">--outdir src/generated/</code>.</p><p>The import process =
compiles the source into <code class=3D"literal">.class</code> and <code cl=
ass=3D"literal">.jar</code> files;
these are ordinarily stored under <code class=3D"literal">/tmp</code>. You =
can select an alternate
target directory with <code class=3D"literal">--bindir</code>. For example,=
 <code class=3D"literal">--bindir /scratch</code>.</p><p>If you already hav=
e a compiled class that can be used to perform the
import and want to suppress the code-generation aspect of the import
process, you can use an existing jar and class by
providing the <code class=3D"literal">--jar-file</code> and <code class=3D"=
literal">--class-name</code> options. For example:</p><pre class=3D"screen"=
>$ sqoop import-mainframe --dataset SomePDS --jar-file mydatatypes.jar \
    --class-name SomePDSType</pre><p>This command will load the <code class=
=3D"literal">SomePDSType</code> class out of <code class=3D"literal">mydata=
types.jar</code>.</p></div><div class=3D"section" title=3D"9.2.10.&nbsp;Add=
itional Import Configuration Properties"><div class=3D"titlepage"><div><div=
><h4 class=3D"title"><a name=3D"_additional_import_configuration_properties=
_2"></a>9.2.10.&nbsp;Additional Import Configuration Properties</h4></div><=
/div></div><p>There are some additional properties which can be configured =
by modifying
<code class=3D"literal">conf/sqoop-site.xml</code>. Properties can be speci=
fied the same as in Hadoop
configuration files, for example:</p><pre class=3D"screen">  &lt;property&g=
t;
    &lt;name&gt;property.name&lt;/name&gt;
    &lt;value&gt;property.value&lt;/value&gt;
  &lt;/property&gt;</pre><p>They can also be specified on the command line =
in the generic arguments, for
example:</p><pre class=3D"screen">sqoop import -D property.name=3Dproperty.=
value ...</pre></div></div><div class=3D"section" title=3D"9.3.&nbsp;Exampl=
e Invocations"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a na=
me=3D"_example_invocations_3"></a>9.3.&nbsp;Example Invocations</h3></div><=
/div></div><p>The following examples illustrate how to use the import tool =
in a variety
of situations.</p><p>A basic import of all sequential files in a partitione=
d dataset named
<code class=3D"literal">EMPLOYEES</code> in the mainframe host z390:</p><pr=
e class=3D"screen">$ sqoop import-mainframe --connect z390 --dataset EMPLOY=
EES \
    --username SomeUser -P
Enter password: (hidden)</pre><p>Controlling the import parallelism (using =
8 parallel tasks):</p><pre class=3D"screen">$ sqoop import-mainframe --conn=
ect z390 --dataset EMPLOYEES \
    --username SomeUser --password-file mypassword -m 8</pre><p>Importing t=
he data to Hive:</p><pre class=3D"screen">$ sqoop import-mainframe --connec=
t z390 --dataset EMPLOYEES \
    --hive-import</pre></div></div><div class=3D"section" title=3D"10.&nbsp=
;sqoop-export"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=
=3D"clear: both"><a name=3D"_literal_sqoop_export_literal"></a>10.&nbsp;<co=
de class=3D"literal">sqoop-export</code></h2></div></div></div><div class=
=3D"toc"><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.or=
g/docs/1.4.6/SqoopUserGuide.html#_purpose_4">10.1. Purpose</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_syntax_4">10.2. Syntax</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_inserts_vs_updates">10.3. Inserts vs. Updates</a></span></dt><dt><spa=
n class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUse=
rGuide.html#_exports_and_transactions">10.4. Exports and Transactions</a></=
span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/d=
ocs/1.4.6/SqoopUserGuide.html#_failed_exports">10.5. Failed Exports</a></sp=
an></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/doc=
s/1.4.6/SqoopUserGuide.html#_example_invocations_4">10.6. Example Invocatio=
ns</a></span></dt></dl></div><div class=3D"section" title=3D"10.1.&nbsp;Pur=
pose"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_pu=
rpose_4"></a>10.1.&nbsp;Purpose</h3></div></div></div><p>The <code class=3D=
"literal">export</code> tool exports a set of files from HDFS back to an RD=
BMS.
The target table must already exist in the database. The input files
are read and parsed into a set of records according to the
user-specified delimiters.</p><p>The default operation is to transform thes=
e into a set of <code class=3D"literal">INSERT</code>
statements that inject the records into the database. In "update mode,"
Sqoop will generate <code class=3D"literal">UPDATE</code> statements that r=
eplace existing records
in the database, and in "call mode" Sqoop will make a stored procedure
call for each record.</p></div><div class=3D"section" title=3D"10.2.&nbsp;S=
yntax"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_s=
yntax_4"></a>10.2.&nbsp;Syntax</h3></div></div></div><pre class=3D"screen">=
$ sqoop export (generic-args) (export-args)
$ sqoop-export (generic-args) (export-args)</pre><p>Although the Hadoop gen=
eric arguments must preceed any export arguments,
the export arguments can be entered in any order with respect to one
another.</p><div class=3D"table"><a name=3D"idp4058600"></a><p class=3D"tit=
le"><b>Table&nbsp;27.&nbsp;Common arguments</b></p><div class=3D"table-cont=
ents"><table summary=3D"Common arguments" style=3D"border-collapse: collaps=
e;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col a=
lign=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border=
-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connect &lt;jdbc-uri&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify JDBC connect string
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-manager &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify connection manager class to                                    =
      use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--driver &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Manually specify JDBC driver class                                     =
     to use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override $HADOOP_MAPRED_HOME
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--help</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print usage instructions
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password-file</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set path for a file containing the                                     =
     authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-P</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Read password from console
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password &lt;password&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--username &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication username
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--verbose</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print more information while working
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-param-file &lt;filename&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Optional properties file that                                          =
provides connection parameters
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--relaxed-isolation</code>
    </td><td style=3D"" align=3D"left">
    Set connection transaction isolation                                   =
       to read uncommitted for the mappers.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp4074080"></a><p class=3D"title"><b>Table&nbsp;2=
8.&nbsp;Validation arguments <a class=3D"link" href=3D"https://sqoop.apache=
.org/docs/1.4.6/SqoopUserGuide.html#validation" title=3D"11.&nbsp;validatio=
n">More Details</a></b></p><div class=3D"table-contents"><table summary=3D"=
Validation arguments More Details" style=3D"border-collapse: collapse;borde=
r-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D=
"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-right:=
 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--validate</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Enable validation of data copied,                                      =
       supports single table copy only.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--validator &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify validator class to use.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--validation-threshold &lt;class-name&gt;</code=
>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify validation threshold class                                     =
        to use.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--validation-failurehandler &lt;class-name&gt;<=
/code>
    </td><td style=3D"" align=3D"left">
    Specify validation failure                                             =
handler class to use.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp4081720"></a><p class=3D"title"><b>Table&nbsp;2=
9.&nbsp;Export control arguments:</b></p><div class=3D"table-contents"><tab=
le summary=3D"Export control arguments:" style=3D"border-collapse: collapse=
;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col al=
ign=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-=
right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--columns &lt;col,col,col=85&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Columns to export to table
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--direct</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Use direct export fast path
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--export-dir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    HDFS source path for the export
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-m,--num-mappers &lt;n&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Use <span class=3D"emphasis"><em>n</em></span> map tasks to export in  =
                                       parallel
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--table &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Table to populate
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--call &lt;stored-proc-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Stored Procedure to call
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--update-key &lt;col-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Anchor column to use for updates.                                      =
   Use a comma separated list of columns                                   =
      if there are more than one column.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--update-mode &lt;mode&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify how updates are performed                                      =
   when new rows are found with                                         non=
-matching keys in database.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Legal values for <code class=3D"literal">mode</code> include           =
                              <code class=3D"literal">updateonly</code> (de=
fault) and                                         <code class=3D"literal">=
allowinsert</code>.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-null-string &lt;null-string&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The string to be interpreted as                                        =
 null for string columns
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-null-non-string &lt;null-string&gt;</co=
de>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The string to be interpreted as                                        =
 null for non-string columns
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--staging-table &lt;staging-table-name&gt;</cod=
e>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The table in which data will be                                        =
 staged before being inserted into                                         =
the destination table.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--clear-staging-table</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Indicates that any data present in                                     =
    the staging table can be deleted.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--batch</code>
    </td><td style=3D"" align=3D"left">
    Use batch mode for underlying                                         s=
tatement execution.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>The =
<code class=3D"literal">--export-dir</code> argument and one of <code class=
=3D"literal">--table</code> or <code class=3D"literal">--call</code> are
required. These specify the table to populate in the database (or the
stored procedure to call), and the directory in HDFS that contains
the source data.</p><p>By default, all columns within a table are selected =
for export. You
can select a subset of columns and control their ordering by using the
<code class=3D"literal">--columns</code> argument. This should include a co=
mma-delimited list
of columns to export. For example: <code class=3D"literal">--columns "col1,=
col2,col3"</code>. Note
that columns that are not included in the <code class=3D"literal">--columns=
</code> parameter need
to have either defined default value or allow <code class=3D"literal">NULL<=
/code> values. Otherwise
your database will reject the imported data which in turn will make
Sqoop job fail.</p><p>You can control the number of mappers independently f=
rom the number of
files present in the directory. Export performance depends on the
degree of parallelism. By default, Sqoop will use four tasks in
parallel for the export process. This may not be optimal; you will
need to experiment with your own particular setup. Additional tasks
may offer better concurrency, but if the database is already
bottlenecked on updating indices, invoking triggers, and so on, then
additional load may decrease performance. The <code class=3D"literal">--num=
-mappers</code> or <code class=3D"literal">-m</code>
arguments control the number of map tasks, which is the degree of
parallelism used.</p><p>Some databases provides a direct mode for exports a=
s well. Use the <code class=3D"literal">--direct</code> argument
to specify this codepath. This may be higher-performance than the standard =
JDBC codepath.
Details about use of direct mode with each specific RDBMS, installation req=
uirements, available
options and limitations can be found in <a class=3D"xref" href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#connectors" title=3D"25.&nbs=
p;Notes for specific connectors">Section&nbsp;25, =93Notes for specific con=
nectors=94</a>.</p><p>The <code class=3D"literal">--input-null-string</code=
> and <code class=3D"literal">--input-null-non-string</code> arguments are
optional. If <code class=3D"literal">--input-null-string</code> is not spec=
ified, then the string
"null" will be interpreted as null for string-type columns.
If <code class=3D"literal">--input-null-non-string</code> is not specified,=
 then both the string
"null" and the empty string will be interpreted as null for non-string
columns. Note that, the empty string will be always interpreted as null
for non-string columns, in addition to other string if specified by
<code class=3D"literal">--input-null-non-string</code>.</p><p>Since Sqoop b=
reaks down export process into multiple transactions, it
is possible that a failed export job may result in partial data being
committed to the database. This can further lead to subsequent jobs
failing due to insert collisions in some cases, or lead to duplicated data
in others. You can overcome this problem by specifying a staging table via
the <code class=3D"literal">--staging-table</code> option which acts as an =
auxiliary table that is used
to stage exported data. The staged data is finally moved to the destination
table in a single transaction.</p><p>In order to use the staging facility, =
you must create the staging table
prior to running the export job. This table must be structurally
identical to the target table. This table should either be empty before
the export job runs, or the <code class=3D"literal">--clear-staging-table</=
code> option must be specified.
If the staging table contains data and the <code class=3D"literal">--clear-=
staging-table</code> option is
specified, Sqoop will delete all of the data before starting the export job=
.</p><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin=
-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=
=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=
=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"=
left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>Support for st=
aging data prior to pushing it into the destination
table is not always available for <code class=3D"literal">--direct</code> e=
xports. It is also not available when
export is invoked using the <code class=3D"literal">--update-key</code> opt=
ion for updating existing data,
and when stored procedures are used to insert the data. It is best to check=
 the <a class=3D"xref" href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUse=
rGuide.html#connectors" title=3D"25.&nbsp;Notes for specific connectors">Se=
ction&nbsp;25, =93Notes for specific connectors=94</a> section to validate.=
</p></td></tr></tbody></table></div></div><div class=3D"section" title=3D"1=
0.3.&nbsp;Inserts vs. Updates"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a name=3D"_inserts_vs_updates"></a>10.3.&nbsp;Inserts vs. Updat=
es</h3></div></div></div><p>By default, <code class=3D"literal">sqoop-expor=
t</code> appends new rows to a table; each input
record is transformed into an <code class=3D"literal">INSERT</code> stateme=
nt that adds a row to the
target database table. If your table has constraints (e.g., a primary
key column whose values must be unique) and already contains data, you
must take care to avoid inserting records that violate these
constraints. The export process will fail if an <code class=3D"literal">INS=
ERT</code> statement
fails. This mode is primarily intended for exporting records to a new,
empty table intended to receive these results.</p><p>If you specify the <co=
de class=3D"literal">--update-key</code> argument, Sqoop will instead modif=
y
an existing dataset in the database. Each input record is treated as
an <code class=3D"literal">UPDATE</code> statement that modifies an existin=
g row. The row a
statement modifies is determined by the column name(s) specified with
<code class=3D"literal">--update-key</code>. For example, consider the foll=
owing table
definition:</p><pre class=3D"screen">CREATE TABLE foo(
    id INT NOT NULL PRIMARY KEY,
    msg VARCHAR(32),
    bar INT);</pre><p>Consider also a dataset in HDFS containing records li=
ke these:</p><pre class=3D"screen">0,this is a test,42
1,some more data,100
...</pre><p>Running <code class=3D"literal">sqoop-export --table foo --upda=
te-key id --export-dir
/path/to/data --connect =85</code> will run an export job that executes SQL
statements based on the data like so:</p><pre class=3D"screen">UPDATE foo S=
ET msg=3D'this is a test', bar=3D42 WHERE id=3D0;
UPDATE foo SET msg=3D'some more data', bar=3D100 WHERE id=3D1;
...</pre><p>If an <code class=3D"literal">UPDATE</code> statement modifies =
no rows, this is not considered an
error; the export will silently continue. (In effect, this means that
an update-based export will not insert new rows into the database.)
Likewise, if the column specified with <code class=3D"literal">--update-key=
</code> does not
uniquely identify rows and multiple rows are updated by a single
statement, this condition is also undetected.</p><p>The argument <code clas=
s=3D"literal">--update-key</code> can also be given a comma separated list =
of
column names. In which case, Sqoop will match all keys from this list befor=
e
updating any existing record.</p><p>Depending on the target database, you m=
ay also specify the <code class=3D"literal">--update-mode</code>
argument with <code class=3D"literal">allowinsert</code> mode if you want t=
o update rows if they exist
in the database already or insert rows if they do not exist yet.</p><div cl=
ass=3D"table"><a name=3D"idp4124960"></a><p class=3D"title"><b>Table&nbsp;3=
0.&nbsp;Input parsing arguments:</b></p><div class=3D"table-contents"><tabl=
e summary=3D"Input parsing arguments:" style=3D"border-collapse: collapse;b=
order-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col alig=
n=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-ri=
ght: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field encloser
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input escape                                          characte=
r
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-fields-terminated-by &lt;char&gt;</code=
>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input field separator
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input end-of-line                                          cha=
racter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--input-optionally-enclosed-by &lt;char&gt;</co=
de>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing                                          charact=
er
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp4133384"></a><p class=3D"title"><b>Table&nbsp;3=
1.&nbsp;Output line formatting arguments:</b></p><div class=3D"table-conten=
ts"><table summary=3D"Output line formatting arguments:" style=3D"border-co=
llapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><=
colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr><th =
style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=
=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field enclosing                                    char=
acter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the escape character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--fields-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the field separator character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the end-of-line character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--mysql-delimiters</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Uses MySQL=92s default delimiter set:                                  =
 fields: <code class=3D"literal">,</code>  lines: <code class=3D"literal">\=
n</code>                                    escaped-by: <code class=3D"lite=
ral">\</code>                                    optionally-enclosed-by: <c=
ode class=3D"literal">'</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--optionally-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing character
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>Sqoo=
p automatically generates code to parse and interpret records of the
files containing the data to be exported back to the database. If
these files were created with non-default delimiters (comma-separated
fields with newline-separated records), you should specify
the same delimiters again so that Sqoop can parse your files.</p><p>If you =
specify incorrect delimiters, Sqoop will fail to find enough
columns per line. This will cause export map tasks to fail by throwing
<code class=3D"literal">ParseExceptions</code>.</p><div class=3D"table"><a =
name=3D"idp4145784"></a><p class=3D"title"><b>Table&nbsp;32.&nbsp;Code gene=
ration arguments:</b></p><div class=3D"table-contents"><table summary=3D"Co=
de generation arguments:" style=3D"border-collapse: collapse;border-top: 0.=
5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><c=
ol align=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt so=
lid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--bindir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Output directory for compiled objects
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--class-name &lt;name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the generated class name. This overrides                         <=
code class=3D"literal">--package-name</code>. When combined with           =
               <code class=3D"literal">--jar-file</code>, sets the input cl=
ass.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--jar-file &lt;file&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Disable code generation; use specified jar
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--outdir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Output directory for generated code
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--package-name &lt;name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Put auto-generated classes in this package
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--map-column-java &lt;m&gt;</code>
    </td><td style=3D"" align=3D"left">
    Override default mapping from SQL type to                         Java =
type for configured columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>If t=
he records to be exported were generated as the result of a
previous import, then the original generated class can be used to read
the data back. Specifying <code class=3D"literal">--jar-file</code> and <co=
de class=3D"literal">--class-name</code> obviate
the need to specify delimiters in this case.</p><p>The use of existing gene=
rated code is incompatible with
<code class=3D"literal">--update-key</code>; an update-mode export requires=
 new code generation to
perform the update. You cannot use <code class=3D"literal">--jar-file</code=
>, and must fully specify
any non-default delimiters.</p></div><div class=3D"section" title=3D"10.4.&=
nbsp;Exports and Transactions"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a name=3D"_exports_and_transactions"></a>10.4.&nbsp;Exports and=
 Transactions</h3></div></div></div><p>Exports are performed by multiple wr=
iters in parallel. Each writer
uses a separate connection to the database; these have separate
transactions from one another. Sqoop uses the multi-row <code class=3D"lite=
ral">INSERT</code>
syntax to insert up to 100 records per statement. Every 100
statements, the current transaction within a writer task is committed,
causing a commit every 10,000 rows. This ensures that transaction
buffers do not grow without bound, and cause out-of-memory conditions.
Therefore, an export is not an atomic process. Partial results from
the export will become visible before the export is complete.</p></div><div=
 class=3D"section" title=3D"10.5.&nbsp;Failed Exports"><div class=3D"titlep=
age"><div><div><h3 class=3D"title"><a name=3D"_failed_exports"></a>10.5.&nb=
sp;Failed Exports</h3></div></div></div><p>Exports may fail for a number of=
 reasons:</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D=
"disc"><li class=3D"listitem">
Loss of connectivity from the Hadoop cluster to the database (either
  due to hardware fault, or server software crashes)
</li><li class=3D"listitem">
Attempting to <code class=3D"literal">INSERT</code> a row which violates a =
consistency constraint
  (for example, inserting a duplicate primary key value)
</li><li class=3D"listitem">
Attempting to parse an incomplete or malformed record from the HDFS
  source data
</li><li class=3D"listitem">
Attempting to parse records using incorrect delimiters
</li><li class=3D"listitem">
Capacity issues (such as insufficient RAM or disk space)
</li></ul></div><p>If an export map task fails due to these or other reason=
s, it will
cause the export job to fail. The results of a failed export are
undefined. Each export map task operates in a separate transaction.
Furthermore, individual map tasks <code class=3D"literal">commit</code> the=
ir current transaction
periodically. If a task fails, the current transaction will be rolled
back. Any previously-committed transactions will remain durable in the
database, leading to a partially-complete export.</p></div><div class=3D"se=
ction" title=3D"10.6.&nbsp;Example Invocations"><div class=3D"titlepage"><d=
iv><div><h3 class=3D"title"><a name=3D"_example_invocations_4"></a>10.6.&nb=
sp;Example Invocations</h3></div></div></div><p>A basic export to populate =
a table named <code class=3D"literal">bar</code>:</p><pre class=3D"screen">=
$ sqoop export --connect jdbc:mysql://db.example.com/foo --table bar  \
    --export-dir /results/bar_data</pre><p>This example takes the files in =
<code class=3D"literal">/results/bar_data</code> and injects their
contents in to the <code class=3D"literal">bar</code> table in the <code cl=
ass=3D"literal">foo</code> database on <code class=3D"literal">db.example.c=
om</code>.
The target table must already exist in the database. Sqoop performs
a set of <code class=3D"literal">INSERT INTO</code> operations, without reg=
ard for existing content. If
Sqoop attempts to insert rows which violate constraints in the database
(for example, a particular primary key value already exists), then the expo=
rt
fails.</p><p>Alternatively, you can specify the columns to be exported by p=
roviding
<code class=3D"literal">--columns "col1,col2,col3"</code>. Please note that=
 columns that are not included
in the <code class=3D"literal">--columns</code> parameter need to have eith=
er defined default value or
allow <code class=3D"literal">NULL</code> values. Otherwise your database w=
ill reject the imported data
which in turn will make Sqoop job fail.</p><p>Another basic export to popul=
ate a table named <code class=3D"literal">bar</code> with validation enable=
d:
<a class=3D"link" href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuid=
e.html#validation" title=3D"11.&nbsp;validation">More Details</a></p><pre c=
lass=3D"screen">$ sqoop export --connect jdbc:mysql://db.example.com/foo --=
table bar  \
    --export-dir /results/bar_data --validate</pre><p>An export that calls =
a stored procedure named <code class=3D"literal">barproc</code> for every r=
ecord in
<code class=3D"literal">/results/bar_data</code> would look like:</p><pre c=
lass=3D"screen">$ sqoop export --connect jdbc:mysql://db.example.com/foo --=
call barproc \
    --export-dir /results/bar_data</pre></div></div><div class=3D"section" =
title=3D"11.&nbsp;validation"><div class=3D"titlepage"><div><div><h2 class=
=3D"title" style=3D"clear: both"><a name=3D"validation"></a>11.&nbsp;<code =
class=3D"literal">validation</code></h2></div></div></div><div class=3D"toc=
"><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/=
1.4.6/SqoopUserGuide.html#_purpose_5">11.1. Purpose</a></span></dt><dt><spa=
n class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUse=
rGuide.html#_introduction_2">11.2. Introduction</a></span></dt><dt><span cl=
ass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGui=
de.html#_syntax_5">11.3. Syntax</a></span></dt><dt><span class=3D"section">=
<a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_configu=
ration">11.4. Configuration</a></span></dt><dt><span class=3D"section"><a h=
ref=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_limitations=
">11.5. Limitations</a></span></dt><dt><span class=3D"section"><a href=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations=
_5">11.6. Example Invocations</a></span></dt></dl></div><div class=3D"secti=
on" title=3D"11.1.&nbsp;Purpose"><div class=3D"titlepage"><div><div><h3 cla=
ss=3D"title"><a name=3D"_purpose_5"></a>11.1.&nbsp;Purpose</h3></div></div>=
</div><p>Validate the data copied, either import or export by comparing the=
 row
counts from the source and the target post copy.</p></div><div class=3D"sec=
tion" title=3D"11.2.&nbsp;Introduction"><div class=3D"titlepage"><div><div>=
<h3 class=3D"title"><a name=3D"_introduction_2"></a>11.2.&nbsp;Introduction=
</h3></div></div></div><p>There are 3 basic interfaces:
ValidationThreshold - Determines if the error margin between the source and
target are acceptable: Absolute, Percentage Tolerant, etc.
Default implementation is AbsoluteValidationThreshold which ensures the row
counts from source and targets are the same.</p><p>ValidationFailureHandler=
 - Responsible for handling failures: log an
error/warning, abort, etc.
Default implementation is LogOnFailureHandler that logs a warning message t=
o
the configured logger.</p><p>Validator - Drives the validation logic by del=
egating the decision to
ValidationThreshold and delegating failure handling to ValidationFailureHan=
dler.
The default implementation is RowCountValidator which validates the row
counts from source and the target.</p></div><div class=3D"section" title=3D=
"11.3.&nbsp;Syntax"><div class=3D"titlepage"><div><div><h3 class=3D"title">=
<a name=3D"_syntax_5"></a>11.3.&nbsp;Syntax</h3></div></div></div><pre clas=
s=3D"screen">$ sqoop import (generic-args) (import-args)
$ sqoop export (generic-args) (export-args)</pre><p>Validation arguments ar=
e part of import and export arguments.</p></div><div class=3D"section" titl=
e=3D"11.4.&nbsp;Configuration"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a name=3D"_configuration"></a>11.4.&nbsp;Configuration</h3></di=
v></div></div><p>The validation framework is extensible and pluggable. It c=
omes with default
implementations but the interfaces can be extended to allow custom
implementations by passing them as part of the command line arguments as
described below.</p><p title=3D"Validator"><b>Validator.&nbsp;</b>
</p><pre class=3D"literallayout">Property:         validator
Description:      Driver for validation,
                  must implement org.apache.sqoop.validation.Validator
Supported values: The value has to be a fully qualified class name.
Default value:    org.apache.sqoop.validation.RowCountValidator</pre><p tit=
le=3D"Validator">
</p><p title=3D"Validation Threshold"><b>Validation Threshold.&nbsp;</b>
</p><pre class=3D"literallayout">Property:         validation-threshold
Description:      Drives the decision based on the validation meeting the
                  threshold or not. Must implement
                  org.apache.sqoop.validation.ValidationThreshold
Supported values: The value has to be a fully qualified class name.
Default value:    org.apache.sqoop.validation.AbsoluteValidationThreshold</=
pre><p title=3D"Validation Threshold">
</p><p title=3D"Validation Failure Handler"><b>Validation Failure Handler.&=
nbsp;</b>
</p><pre class=3D"literallayout">Property:         validation-failurehandle=
r
Description:      Responsible for handling failures, must implement
                  org.apache.sqoop.validation.ValidationFailureHandler
Supported values: The value has to be a fully qualified class name.
Default value:    org.apache.sqoop.validation.AbortOnFailureHandler</pre><p=
 title=3D"Validation Failure Handler">
</p></div><div class=3D"section" title=3D"11.5.&nbsp;Limitations"><div clas=
s=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_limitations"></a>=
11.5.&nbsp;Limitations</h3></div></div></div><p>Validation currently only v=
alidates data copied from a single table into HDFS.
The following are the limitations in the current implementation:</p><div cl=
ass=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li class=3D"=
listitem">
all-tables option
</li><li class=3D"listitem">
free-form query option
</li><li class=3D"listitem">
Data imported into Hive, HBase or Accumulo
</li><li class=3D"listitem">
table import with --where argument
</li><li class=3D"listitem">
incremental imports
</li></ul></div></div><div class=3D"section" title=3D"11.6.&nbsp;Example In=
vocations"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=
=3D"_example_invocations_5"></a>11.6.&nbsp;Example Invocations</h3></div></=
div></div><p>A basic import of a table named <code class=3D"literal">EMPLOY=
EES</code> in the <code class=3D"literal">corp</code> database that uses
validation to validate the row counts:</p><pre class=3D"screen">$ sqoop imp=
ort --connect jdbc:mysql://db.foo.com/corp  \
    --table EMPLOYEES --validate</pre><p>A basic export to populate a table=
 named <code class=3D"literal">bar</code> with validation enabled:</p><pre =
class=3D"screen">$ sqoop export --connect jdbc:mysql://db.example.com/foo -=
-table bar  \
    --export-dir /results/bar_data --validate</pre><p>Another example that =
overrides the validation args:</p><pre class=3D"screen">$ sqoop import --co=
nnect jdbc:mysql://db.foo.com/corp --table EMPLOYEES \
    --validate --validator org.apache.sqoop.validation.RowCountValidator \
    --validation-threshold \
          org.apache.sqoop.validation.AbsoluteValidationThreshold \
    --validation-failurehandler \
          org.apache.sqoop.validation.AbortOnFailureHandler</pre></div></di=
v><div class=3D"section" title=3D"12.&nbsp;Saved Jobs"><div class=3D"titlep=
age"><div><div><h2 class=3D"title" style=3D"clear: both"><a name=3D"_saved_=
jobs"></a>12.&nbsp;Saved Jobs</h2></div></div></div><p>Imports and exports =
can be repeatedly performed by issuing the same command
multiple times. Especially when using the incremental import capability,
this is an expected scenario.</p><p>Sqoop allows you to define <span class=
=3D"emphasis"><em>saved jobs</em></span> which make this process easier. A
saved job records the configuration information required to execute a
Sqoop command at a later time. The section on the <code class=3D"literal">s=
qoop-job</code> tool
describes how to create and work with saved jobs.</p><p>By default, job des=
criptions are saved to a private repository stored
in <code class=3D"literal">$HOME/.sqoop/</code>. You can configure Sqoop to=
 instead use a shared
<span class=3D"emphasis"><em>metastore</em></span>, which makes saved jobs =
available to multiple users across a
shared cluster. Starting the metastore is covered by the section on the
<code class=3D"literal">sqoop-metastore</code> tool.</p></div><div class=3D=
"section" title=3D"13.&nbsp;sqoop-job"><div class=3D"titlepage"><div><div><=
h2 class=3D"title" style=3D"clear: both"><a name=3D"_literal_sqoop_job_lite=
ral"></a>13.&nbsp;<code class=3D"literal">sqoop-job</code></h2></div></div>=
</div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_6">13.1. Purpose<=
/a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.=
org/docs/1.4.6/SqoopUserGuide.html#_syntax_6">13.2. Syntax</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_saved_jobs_and_passwords">13.3. Saved jobs and password=
s</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apach=
e.org/docs/1.4.6/SqoopUserGuide.html#_saved_jobs_and_incremental_imports">1=
3.4. Saved jobs and incremental imports</a></span></dt></dl></div><div clas=
s=3D"section" title=3D"13.1.&nbsp;Purpose"><div class=3D"titlepage"><div><d=
iv><h3 class=3D"title"><a name=3D"_purpose_6"></a>13.1.&nbsp;Purpose</h3></=
div></div></div><p>The job tool allows you to create and work with saved jo=
bs. Saved jobs
remember the parameters used to specify a job, so they can be
re-executed by invoking the job by its handle.</p><p>If a saved job is conf=
igured to perform an incremental import, state regarding
the most recently imported rows is updated in the saved job to allow the jo=
b
to continually import only the newest rows.</p></div><div class=3D"section"=
 title=3D"13.2.&nbsp;Syntax"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a name=3D"_syntax_6"></a>13.2.&nbsp;Syntax</h3></div></div></di=
v><pre class=3D"screen">$ sqoop job (generic-args) (job-args) [-- [subtool-=
name] (subtool-args)]
$ sqoop-job (generic-args) (job-args) [-- [subtool-name] (subtool-args)]</p=
re><p>Although the Hadoop generic arguments must preceed any job arguments,
the job arguments can be entered in any order with respect to one
another.</p><div class=3D"table"><a name=3D"idp4199416"></a><p class=3D"tit=
le"><b>Table&nbsp;33.&nbsp;Job management options:</b></p><div class=3D"tab=
le-contents"><table summary=3D"Job management options:" style=3D"border-col=
lapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><c=
olgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr><th s=
tyle=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D=
"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--create &lt;job-id&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Define a new saved job with the specified                             j=
ob-id (name). A second Sqoop                             command-line, sepa=
rated by a <code class=3D"literal">--</code> should                        =
     be specified; this defines the saved job.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--delete &lt;job-id&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Delete a saved job.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--exec &lt;job-id&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Given a job defined with <code class=3D"literal">--create</code>, run  =
                           the saved job.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--show &lt;job-id&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Show the parameters for a saved job.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--list</code>
    </td><td style=3D"" align=3D"left">
    List all saved jobs
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>Crea=
ting saved jobs is done with the <code class=3D"literal">--create</code> ac=
tion. This operation
requires a <code class=3D"literal">--</code> followed by a tool name and it=
s arguments. The tool and
its arguments will form the basis of the saved job. Consider:</p><pre class=
=3D"screen">$ sqoop job --create myjob -- import --connect jdbc:mysql://exa=
mple.com/db \
    --table mytable</pre><p>This creates a job named <code class=3D"literal=
">myjob</code> which can be executed later. The job is not
run. This job is now available in the list of saved jobs:</p><pre class=3D"=
screen">$ sqoop job --list
Available jobs:
  myjob</pre><p>We can inspect the configuration of a job with the <code cl=
ass=3D"literal">show</code> action:</p><pre class=3D"screen"> $ sqoop job -=
-show myjob
 Job: myjob
 Tool: import
 Options:
 ----------------------------
 direct.import =3D false
 codegen.input.delimiters.record =3D 0
 hdfs.append.dir =3D false
 db.table =3D mytable
 ...</pre><p>And if we are satisfied with it, we can run the job with <code=
 class=3D"literal">exec</code>:</p><pre class=3D"screen">$ sqoop job --exec=
 myjob
10/08/19 13:08:45 INFO tool.CodeGenTool: Beginning code generation
...</pre><p>The <code class=3D"literal">exec</code> action allows you to ov=
erride arguments of the saved job
by supplying them after a <code class=3D"literal">--</code>. For example, i=
f the database were
changed to require a username, we could specify the username and
password with:</p><pre class=3D"screen">$ sqoop job --exec myjob -- --usern=
ame someuser -P
Enter password:
...</pre><div class=3D"table"><a name=3D"idp4214808"></a><p class=3D"title"=
><b>Table&nbsp;34.&nbsp;Metastore connection options:</b></p><div class=3D"=
table-contents"><table summary=3D"Metastore connection options:" style=3D"b=
order-collapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt sol=
id ; "><colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead>=
<tr><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; "=
 align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; "=
 align=3D"left">
    <code class=3D"literal">--meta-connect &lt;jdbc-uri&gt;</code>
    </td><td style=3D"" align=3D"left">
    Specifies the JDBC connect string used                              to =
connect to the metastore
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>By d=
efault, a private metastore is instantiated in <code class=3D"literal">$HOM=
E/.sqoop</code>. If
you have configured a hosted metastore with the <code class=3D"literal">sqo=
op-metastore</code>
tool, you can connect to it by specifying the <code class=3D"literal">--met=
a-connect</code>
argument. This is a JDBC connect string just like the ones used to
connect to databases for import.</p><p>In <code class=3D"literal">conf/sqoo=
p-site.xml</code>, you can configure
<code class=3D"literal">sqoop.metastore.client.autoconnect.url</code> with =
this address, so you do not have
to supply <code class=3D"literal">--meta-connect</code> to use a remote met=
astore. This parameter can
also be modified to move the private metastore to a location on your
filesystem other than your home directory.</p><p>If you configure <code cla=
ss=3D"literal">sqoop.metastore.client.enable.autoconnect</code> with the
value <code class=3D"literal">false</code>, then you must explicitly supply=
 <code class=3D"literal">--meta-connect</code>.</p><div class=3D"table"><a =
name=3D"idp4223344"></a><p class=3D"title"><b>Table&nbsp;35.&nbsp;Common op=
tions:</b></p><div class=3D"table-contents"><table summary=3D"Common option=
s:" style=3D"border-collapse: collapse;border-top: 0.5pt solid ; border-bot=
tom: 0.5pt solid ; "><colgroup><col align=3D"left"><col align=3D"left"></co=
lgroup><thead><tr><th style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--help</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print usage instructions
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--verbose</code>
    </td><td style=3D"" align=3D"left">
    Print more information while working
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"13.3.&nbsp;Saved jobs and passwords"><div cl=
ass=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_saved_jobs_and_=
passwords"></a>13.3.&nbsp;Saved jobs and passwords</h3></div></div></div><p=
>The Sqoop metastore is not a secure resource. Multiple users can access
its contents. For this reason, Sqoop does not store passwords in the
metastore. If you create a job that requires a password, you will be
prompted for that password each time you execute the job.</p><p>You can ena=
ble passwords in the metastore by setting
<code class=3D"literal">sqoop.metastore.client.record.password</code> to <c=
ode class=3D"literal">true</code> in the configuration.</p><p>Note that you=
 have to set <code class=3D"literal">sqoop.metastore.client.record.password=
</code> to <code class=3D"literal">true</code>
if you are executing saved jobs via Oozie because Sqoop cannot prompt the u=
ser
to enter passwords while being executed as Oozie tasks.</p></div><div class=
=3D"section" title=3D"13.4.&nbsp;Saved jobs and incremental imports"><div c=
lass=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_saved_jobs_and=
_incremental_imports"></a>13.4.&nbsp;Saved jobs and incremental imports</h3=
></div></div></div><p>Incremental imports are performed by comparing the va=
lues in a <span class=3D"emphasis"><em>check column</em></span>
against a reference value for the most recent import. For example, if the
<code class=3D"literal">--incremental append</code> argument was specified,=
 along with <code class=3D"literal">--check-column
id</code> and <code class=3D"literal">--last-value 100</code>, all rows wit=
h <code class=3D"literal">id &gt; 100</code> will be imported.
If an incremental import is run from the command line, the value which
should be specified as <code class=3D"literal">--last-value</code> in a sub=
sequent incremental import
will be printed to the screen for your reference. If an incremental import =
is
run from a saved job, this value will be retained in the saved job. Subsequ=
ent
runs of <code class=3D"literal">sqoop job --exec someIncrementalJob</code> =
will continue to import only
newer rows than those previously imported.</p></div></div><div class=3D"sec=
tion" title=3D"14.&nbsp;sqoop-metastore"><div class=3D"titlepage"><div><div=
><h2 class=3D"title" style=3D"clear: both"><a name=3D"_literal_sqoop_metast=
ore_literal"></a>14.&nbsp;<code class=3D"literal">sqoop-metastore</code></h=
2></div></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a h=
ref=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_7">=
14.1. Purpose</a></span></dt><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_7">14.2. Syntax</a=
></span></dt></dl></div><div class=3D"section" title=3D"14.1.&nbsp;Purpose"=
><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_purpose=
_7"></a>14.1.&nbsp;Purpose</h3></div></div></div><p>The <code class=3D"lite=
ral">metastore</code> tool configures Sqoop to host a shared metadata repos=
itory.
Multiple users and/or remote users can define and execute saved jobs (creat=
ed
with <code class=3D"literal">sqoop job</code>) defined in this metastore.</=
p><p>Clients must be configured to connect to the metastore in <code class=
=3D"literal">sqoop-site.xml</code> or
with the <code class=3D"literal">--meta-connect</code> argument.</p></div><=
div class=3D"section" title=3D"14.2.&nbsp;Syntax"><div class=3D"titlepage">=
<div><div><h3 class=3D"title"><a name=3D"_syntax_7"></a>14.2.&nbsp;Syntax</=
h3></div></div></div><pre class=3D"screen">$ sqoop metastore (generic-args)=
 (metastore-args)
$ sqoop-metastore (generic-args) (metastore-args)</pre><p>Although the Hado=
op generic arguments must preceed any metastore arguments,
the metastore arguments can be entered in any order with respect to one
another.</p><div class=3D"table"><a name=3D"idp4240000"></a><p class=3D"tit=
le"><b>Table&nbsp;36.&nbsp;Metastore management options:</b></p><div class=
=3D"table-contents"><table summary=3D"Metastore management options:" style=
=3D"border-collapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5p=
t solid ; "><colgroup><col align=3D"left"><col align=3D"left"></colgroup><t=
head><tr><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; "=
 align=3D"left">
    <code class=3D"literal">--shutdown</code>
    </td><td style=3D"" align=3D"left">
    Shuts down a running metastore instance                             on =
the same machine.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>Runn=
ing <code class=3D"literal">sqoop-metastore</code> launches a shared HSQLDB=
 database instance on
the current machine. Clients can connect to this metastore and create jobs
which can be shared between users for execution.</p><p>The location of the =
metastore=92s files on disk is controlled by the
<code class=3D"literal">sqoop.metastore.server.location</code> property in =
<code class=3D"literal">conf/sqoop-site.xml</code>.
This should point to a directory on the local filesystem.</p><p>The metasto=
re is available over TCP/IP. The port is controlled by the
<code class=3D"literal">sqoop.metastore.server.port</code> configuration pa=
rameter, and defaults to 16000.</p><p>Clients should connect to the metasto=
re by specifying
<code class=3D"literal">sqoop.metastore.client.autoconnect.url</code> or <c=
ode class=3D"literal">--meta-connect</code> with the
value <code class=3D"literal">jdbc:hsqldb:hsql://&lt;server-name&gt;:&lt;po=
rt&gt;/sqoop</code>. For example,
<code class=3D"literal">jdbc:hsqldb:hsql://metaserver.example.com:16000/sqo=
op</code>.</p><p>This metastore may be hosted on a machine within the Hadoo=
p cluster, or
elsewhere on the network.</p></div></div><div class=3D"section" title=3D"15=
.&nbsp;sqoop-merge"><div class=3D"titlepage"><div><div><h2 class=3D"title" =
style=3D"clear: both"><a name=3D"_literal_sqoop_merge_literal"></a>15.&nbsp=
;<code class=3D"literal">sqoop-merge</code></h2></div></div></div><div clas=
s=3D"toc"><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.o=
rg/docs/1.4.6/SqoopUserGuide.html#_purpose_8">15.1. Purpose</a></span></dt>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_syntax_8">15.2. Syntax</a></span></dt></dl></div><div =
class=3D"section" title=3D"15.1.&nbsp;Purpose"><div class=3D"titlepage"><di=
v><div><h3 class=3D"title"><a name=3D"_purpose_8"></a>15.1.&nbsp;Purpose</h=
3></div></div></div><p>The merge tool allows you to combine two datasets wh=
ere entries in one
dataset should overwrite entries of an older dataset. For example, an
incremental import run in last-modified mode will generate multiple dataset=
s
in HDFS where successively newer data appears in each dataset. The <code cl=
ass=3D"literal">merge</code>
tool will "flatten" two datasets into one, taking the newest available
records for each primary key.</p></div><div class=3D"section" title=3D"15.2=
.&nbsp;Syntax"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a na=
me=3D"_syntax_8"></a>15.2.&nbsp;Syntax</h3></div></div></div><pre class=3D"=
screen">$ sqoop merge (generic-args) (merge-args)
$ sqoop-merge (generic-args) (merge-args)</pre><p>Although the Hadoop gener=
ic arguments must preceed any merge arguments,
the job arguments can be entered in any order with respect to one
another.</p><div class=3D"table"><a name=3D"idp4253200"></a><p class=3D"tit=
le"><b>Table&nbsp;37.&nbsp;Merge options:</b></p><div class=3D"table-conten=
ts"><table summary=3D"Merge options:" style=3D"border-collapse: collapse;bo=
rder-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=
=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-rig=
ht: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--class-name &lt;class&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify the name of the record-specific                             cla=
ss to use during the merge job.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--jar-file &lt;file&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify the name of the jar to load the                             rec=
ord class from.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--merge-key &lt;col&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify the name of a column to use as                             the =
merge key.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--new-data &lt;path&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify the path of the newer dataset.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--onto &lt;path&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify the path of the older dataset.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--target-dir &lt;path&gt;</code>
    </td><td style=3D"" align=3D"left">
    Specify the target path for the output                             of t=
he merge job.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>The =
<code class=3D"literal">merge</code> tool runs a MapReduce job that takes t=
wo directories as
input: a newer dataset, and an older one. These are specified with
<code class=3D"literal">--new-data</code> and <code class=3D"literal">--ont=
o</code> respectively. The output of the MapReduce
job will be placed in the directory in HDFS specified by <code class=3D"lit=
eral">--target-dir</code>.</p><p>When merging the datasets, it is assumed t=
hat there is a unique primary
key value in each record. The column for the primary key is specified
with <code class=3D"literal">--merge-key</code>. Multiple rows in the same =
dataset should not
have the same primary key, or else data loss may occur.</p><p>To parse the =
dataset and extract the key column, the auto-generated
class from a previous import must be used. You should specify the
class name and jar file with <code class=3D"literal">--class-name</code> an=
d <code class=3D"literal">--jar-file</code>. If
this is not availab,e you can recreate the class using the <code class=3D"l=
iteral">codegen</code>
tool.</p><p>The merge tool is typically run after an incremental import wit=
h the
date-last-modified mode (<code class=3D"literal">sqoop import --incremental=
 lastmodified =85</code>).</p><p>Supposing two incremental imports were per=
formed, where some older data
is in an HDFS directory named <code class=3D"literal">older</code> and newe=
r data is in an HDFS
directory named <code class=3D"literal">newer</code>, these could be merged=
 like so:</p><pre class=3D"screen">$ sqoop merge --new-data newer --onto ol=
der --target-dir merged \
    --jar-file datatypes.jar --class-name Foo --merge-key id</pre><p>This w=
ould run a MapReduce job where the value in the <code class=3D"literal">id<=
/code> column
of each row is used to join rows; rows in the <code class=3D"literal">newer=
</code> dataset will
be used in preference to rows in the <code class=3D"literal">older</code> d=
ataset.</p><p>This can be used with both SequenceFile-, Avro- and text-base=
d
incremental imports. The file types of the newer and older datasets
must be the same.</p></div></div><div class=3D"section" title=3D"16.&nbsp;s=
qoop-codegen"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=
=3D"clear: both"><a name=3D"_literal_sqoop_codegen_literal"></a>16.&nbsp;<c=
ode class=3D"literal">sqoop-codegen</code></h2></div></div></div><div class=
=3D"toc"><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.or=
g/docs/1.4.6/SqoopUserGuide.html#_purpose_9">16.1. Purpose</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_syntax_9">16.2. Syntax</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_example_invocations_6">16.3. Example Invocations</a></span></dt></dl>=
</div><div class=3D"section" title=3D"16.1.&nbsp;Purpose"><div class=3D"tit=
lepage"><div><div><h3 class=3D"title"><a name=3D"_purpose_9"></a>16.1.&nbsp=
;Purpose</h3></div></div></div><p>The <code class=3D"literal">codegen</code=
> tool generates Java classes which encapsulate and
interpret imported records. The Java definition of a record is
instantiated as part of the import process, but can also be performed
separately. For example, if Java source is lost, it can be recreated.
New versions of a class can be created which use different delimiters
between fields, and so on.</p></div><div class=3D"section" title=3D"16.2.&n=
bsp;Syntax"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=
=3D"_syntax_9"></a>16.2.&nbsp;Syntax</h3></div></div></div><pre class=3D"sc=
reen">$ sqoop codegen (generic-args) (codegen-args)
$ sqoop-codegen (generic-args) (codegen-args)</pre><p>Although the Hadoop g=
eneric arguments must preceed any codegen arguments,
the codegen arguments can be entered in any order with respect to one
another.</p><div class=3D"table"><a name=3D"idp4275368"></a><p class=3D"tit=
le"><b>Table&nbsp;38.&nbsp;Common arguments</b></p><div class=3D"table-cont=
ents"><table summary=3D"Common arguments" style=3D"border-collapse: collaps=
e;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col a=
lign=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border=
-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connect &lt;jdbc-uri&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify JDBC connect string
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-manager &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify connection manager class to                                    =
      use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--driver &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Manually specify JDBC driver class                                     =
     to use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override $HADOOP_MAPRED_HOME
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--help</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print usage instructions
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password-file</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set path for a file containing the                                     =
     authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-P</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Read password from console
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password &lt;password&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--username &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication username
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--verbose</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print more information while working
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-param-file &lt;filename&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Optional properties file that                                          =
provides connection parameters
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--relaxed-isolation</code>
    </td><td style=3D"" align=3D"left">
    Set connection transaction isolation                                   =
       to read uncommitted for the mappers.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp4290848"></a><p class=3D"title"><b>Table&nbsp;3=
9.&nbsp;Code generation arguments:</b></p><div class=3D"table-contents"><ta=
ble summary=3D"Code generation arguments:" style=3D"border-collapse: collap=
se;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col =
align=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"borde=
r-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--bindir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Output directory for compiled objects
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--class-name &lt;name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the generated class name. This overrides                         <=
code class=3D"literal">--package-name</code>. When combined with           =
               <code class=3D"literal">--jar-file</code>, sets the input cl=
ass.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--jar-file &lt;file&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Disable code generation; use specified jar
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--outdir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Output directory for generated code
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--package-name &lt;name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Put auto-generated classes in this package
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--map-column-java &lt;m&gt;</code>
    </td><td style=3D"" align=3D"left">
    Override default mapping from SQL type to                         Java =
type for configured columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp4300704"></a><p class=3D"title"><b>Table&nbsp;4=
0.&nbsp;Output line formatting arguments:</b></p><div class=3D"table-conten=
ts"><table summary=3D"Output line formatting arguments:" style=3D"border-co=
llapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><=
colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr><th =
style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=
=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field enclosing                                    char=
acter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the escape character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--fields-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the field separator character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the end-of-line character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--mysql-delimiters</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Uses MySQL=92s default delimiter set:                                  =
 fields: <code class=3D"literal">,</code>  lines: <code class=3D"literal">\=
n</code>                                    escaped-by: <code class=3D"lite=
ral">\</code>                                    optionally-enclosed-by: <c=
ode class=3D"literal">'</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--optionally-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing character
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp4311432"></a><p class=3D"title"><b>Table&nbsp;4=
1.&nbsp;Input parsing arguments:</b></p><div class=3D"table-contents"><tabl=
e summary=3D"Input parsing arguments:" style=3D"border-collapse: collapse;b=
order-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col alig=
n=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-ri=
ght: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field encloser
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input escape                                          characte=
r
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-fields-terminated-by &lt;char&gt;</code=
>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input field separator
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the input end-of-line                                          cha=
racter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--input-optionally-enclosed-by &lt;char&gt;</co=
de>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing                                          charact=
er
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp4319856"></a><p class=3D"title"><b>Table&nbsp;4=
2.&nbsp;Hive arguments:</b></p><div class=3D"table-contents"><table summary=
=3D"Hive arguments:" style=3D"border-collapse: collapse;border-top: 0.5pt s=
olid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><col al=
ign=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt solid ;=
 border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override <code class=3D"literal">$HIVE_HOME</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-import</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Import tables into Hive (Uses Hive=92s                               de=
fault delimiters if none are set.)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-overwrite</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Overwrite existing data in the Hive table.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--create-hive-table</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    If set, then the job will fail if the target hive
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    table exits. By default this property is false.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-table &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the table name to use when importing                              =
to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-drop-import-delims</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Drops <span class=3D"emphasis"><em>\n</em></span>, <span class=3D"empha=
sis"><em>\r</em></span>, and <span class=3D"emphasis"><em>\01</em></span> f=
rom string                              fields when importing to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-delims-replacement</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Replace <span class=3D"emphasis"><em>\n</em></span>, <span class=3D"emp=
hasis"><em>\r</em></span>, and <span class=3D"emphasis"><em>\01</em></span>=
 from string                              fields with user defined string w=
hen importing to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-partition-key</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Name of a hive field to partition are                               sha=
rded on
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-partition-value &lt;v&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    String-value that serves as partition key                              =
for this imported into hive in this job.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--map-column-hive &lt;map&gt;</code>
    </td><td style=3D"" align=3D"left">
    Override default mapping from SQL type to                              =
Hive type for configured columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>If H=
ive arguments are provided to the code generation tool, Sqoop
generates a file containing the HQL statements to create a table and
load data.</p></div><div class=3D"section" title=3D"16.3.&nbsp;Example Invo=
cations"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"=
_example_invocations_6"></a>16.3.&nbsp;Example Invocations</h3></div></div>=
</div><p>Recreate the record interpretation code for the <code class=3D"lit=
eral">employees</code> table of a
corporate database:</p><pre class=3D"screen">$ sqoop codegen --connect jdbc=
:mysql://db.example.com/corp \
    --table employees</pre></div></div><div class=3D"section" title=3D"17.&=
nbsp;sqoop-create-hive-table"><div class=3D"titlepage"><div><div><h2 class=
=3D"title" style=3D"clear: both"><a name=3D"_literal_sqoop_create_hive_tabl=
e_literal"></a>17.&nbsp;<code class=3D"literal">sqoop-create-hive-table</co=
de></h2></div></div></div><div class=3D"toc"><dl><dt><span class=3D"section=
"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpo=
se_10">17.1. Purpose</a></span></dt><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_10">17.2. S=
yntax</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations_7">17.3. Exam=
ple Invocations</a></span></dt></dl></div><div class=3D"section" title=3D"1=
7.1.&nbsp;Purpose"><div class=3D"titlepage"><div><div><h3 class=3D"title"><=
a name=3D"_purpose_10"></a>17.1.&nbsp;Purpose</h3></div></div></div><p>The =
<code class=3D"literal">create-hive-table</code> tool populates a Hive meta=
store with a
definition for a table based on a database table previously imported
to HDFS, or one planned to be imported. This effectively performs the
"<code class=3D"literal">--hive-import</code>" step of <code class=3D"liter=
al">sqoop-import</code> without running the
preceeding import.</p><p>If data was already loaded to HDFS, you can use th=
is tool to finish
the pipeline of importing the data to Hive. You can also create Hive tables
with this tool; data then can be imported and populated into
the target after a preprocessing step run by the user.</p></div><div class=
=3D"section" title=3D"17.2.&nbsp;Syntax"><div class=3D"titlepage"><div><div=
><h3 class=3D"title"><a name=3D"_syntax_10"></a>17.2.&nbsp;Syntax</h3></div=
></div></div><pre class=3D"screen">$ sqoop create-hive-table (generic-args)=
 (create-hive-table-args)
$ sqoop-create-hive-table (generic-args) (create-hive-table-args)</pre><p>A=
lthough the Hadoop generic arguments must preceed any create-hive-table
arguments, the create-hive-table arguments can be entered in any order
with respect to one another.</p><div class=3D"table"><a name=3D"idp4342728"=
></a><p class=3D"title"><b>Table&nbsp;43.&nbsp;Common arguments</b></p><div=
 class=3D"table-contents"><table summary=3D"Common arguments" style=3D"bord=
er-collapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid =
; "><colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr=
><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " al=
ign=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connect &lt;jdbc-uri&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify JDBC connect string
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-manager &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify connection manager class to                                    =
      use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--driver &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Manually specify JDBC driver class                                     =
     to use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override $HADOOP_MAPRED_HOME
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--help</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print usage instructions
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password-file</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set path for a file containing the                                     =
     authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-P</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Read password from console
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password &lt;password&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--username &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication username
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--verbose</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print more information while working
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-param-file &lt;filename&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Optional properties file that                                          =
provides connection parameters
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--relaxed-isolation</code>
    </td><td style=3D"" align=3D"left">
    Set connection transaction isolation                                   =
       to read uncommitted for the mappers.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp4358160"></a><p class=3D"title"><b>Table&nbsp;4=
4.&nbsp;Hive arguments:</b></p><div class=3D"table-contents"><table summary=
=3D"Hive arguments:" style=3D"border-collapse: collapse;border-top: 0.5pt s=
olid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><col al=
ign=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt solid ;=
 border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override <code class=3D"literal">$HIVE_HOME</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-overwrite</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Overwrite existing data in the Hive table.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--create-hive-table</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    If set, then the job will fail if the target hive
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    table exits. By default this property is false.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hive-table &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the table name to use when importing                              =
 to Hive.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--table</code>
    </td><td style=3D"" align=3D"left">
    The database table to read the                               definition=
 from.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp4367232"></a><p class=3D"title"><b>Table&nbsp;4=
5.&nbsp;Output line formatting arguments:</b></p><div class=3D"table-conten=
ts"><table summary=3D"Output line formatting arguments:" style=3D"border-co=
llapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><=
colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr><th =
style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=
=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--enclosed-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets a required field enclosing                                    char=
acter
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--escaped-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the escape character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--fields-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the field separator character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--lines-terminated-by &lt;char&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Sets the end-of-line character
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--mysql-delimiters</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Uses MySQL=92s default delimiter set:                                  =
 fields: <code class=3D"literal">,</code>  lines: <code class=3D"literal">\=
n</code>                                    escaped-by: <code class=3D"lite=
ral">\</code>                                    optionally-enclosed-by: <c=
ode class=3D"literal">'</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--optionally-enclosed-by &lt;char&gt;</code>
    </td><td style=3D"" align=3D"left">
    Sets a field enclosing character
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>Do n=
ot use enclosed-by or escaped-by delimiters with output formatting
arguments used to import to Hive. Hive cannot currently parse them.</p></di=
v><div class=3D"section" title=3D"17.3.&nbsp;Example Invocations"><div clas=
s=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_example_invocatio=
ns_7"></a>17.3.&nbsp;Example Invocations</h3></div></div></div><p>Define in=
 Hive a table named <code class=3D"literal">emps</code> with a definition b=
ased on a
database table named <code class=3D"literal">employees</code>:</p><pre clas=
s=3D"screen">$ sqoop create-hive-table --connect jdbc:mysql://db.example.co=
m/corp \
    --table employees --hive-table emps</pre></div></div><div class=3D"sect=
ion" title=3D"18.&nbsp;sqoop-eval"><div class=3D"titlepage"><div><div><h2 c=
lass=3D"title" style=3D"clear: both"><a name=3D"_literal_sqoop_eval_literal=
"></a>18.&nbsp;<code class=3D"literal">sqoop-eval</code></h2></div></div></=
div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_11">18.1. Purpose</=
a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.o=
rg/docs/1.4.6/SqoopUserGuide.html#_syntax_11">18.2. Syntax</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_example_invocations_8">18.3. Example Invocations</a></s=
pan></dt></dl></div><div class=3D"section" title=3D"18.1.&nbsp;Purpose"><di=
v class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_purpose_11"=
></a>18.1.&nbsp;Purpose</h3></div></div></div><p>The <code class=3D"literal=
">eval</code> tool allows users to quickly run simple SQL queries against
a database; results are printed to the console. This allows users to
preview their import queries to ensure they import the data they
expect.</p><div class=3D"warning" title=3D"Warning" style=3D"margin-left: 0=
.5in; margin-right: 0.5in;"><table border=3D"0" summary=3D"Warning"><tbody>=
<tr><td rowspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=
=3D"[Warning]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/warning.pn=
g"></td><th align=3D"left">Warning</th></tr><tr><td align=3D"left" valign=
=3D"top"><p>The <code class=3D"literal">eval</code> tool is provided for ev=
aluation purpose only. You can use it to verify database connection from wi=
thin the Sqoop or to test simple queries. It=92s not suppose to be used in =
production workflows.</p></td></tr></tbody></table></div></div><div class=
=3D"section" title=3D"18.2.&nbsp;Syntax"><div class=3D"titlepage"><div><div=
><h3 class=3D"title"><a name=3D"_syntax_11"></a>18.2.&nbsp;Syntax</h3></div=
></div></div><pre class=3D"screen">$ sqoop eval (generic-args) (eval-args)
$ sqoop-eval (generic-args) (eval-args)</pre><p>Although the Hadoop generic=
 arguments must preceed any eval arguments,
the eval arguments can be entered in any order with respect to one
another.</p><div class=3D"table"><a name=3D"idp4384744"></a><p class=3D"tit=
le"><b>Table&nbsp;46.&nbsp;Common arguments</b></p><div class=3D"table-cont=
ents"><table summary=3D"Common arguments" style=3D"border-collapse: collaps=
e;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col a=
lign=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border=
-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connect &lt;jdbc-uri&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify JDBC connect string
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-manager &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify connection manager class to                                    =
      use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--driver &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Manually specify JDBC driver class                                     =
     to use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override $HADOOP_MAPRED_HOME
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--help</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print usage instructions
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password-file</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set path for a file containing the                                     =
     authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-P</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Read password from console
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password &lt;password&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--username &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication username
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--verbose</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print more information while working
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-param-file &lt;filename&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Optional properties file that                                          =
provides connection parameters
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--relaxed-isolation</code>
    </td><td style=3D"" align=3D"left">
    Set connection transaction isolation                                   =
       to read uncommitted for the mappers.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"table"><a name=3D"idp4400224"></a><p class=3D"title"><b>Table&nbsp;4=
7.&nbsp;SQL evaluation arguments:</b></p><div class=3D"table-contents"><tab=
le summary=3D"SQL evaluation arguments:" style=3D"border-collapse: collapse=
;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col al=
ign=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-=
right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; "=
 align=3D"left">
    <code class=3D"literal">-e,--query &lt;statement&gt;</code>
    </td><td style=3D"" align=3D"left">
    Execute <span class=3D"emphasis"><em><code class=3D"literal">statement<=
/code></em></span> in SQL.
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"18.3.&nbsp;Example Invocations"><div class=
=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_example_invocation=
s_8"></a>18.3.&nbsp;Example Invocations</h3></div></div></div><p>Select ten=
 records from the <code class=3D"literal">employees</code> table:</p><pre c=
lass=3D"screen">$ sqoop eval --connect jdbc:mysql://db.example.com/corp \
    --query "SELECT * FROM employees LIMIT 10"</pre><p>Insert a row into th=
e <code class=3D"literal">foo</code> table:</p><pre class=3D"screen">$ sqoo=
p eval --connect jdbc:mysql://db.example.com/corp \
    -e "INSERT INTO foo VALUES(42, 'bar')"</pre></div></div><div class=3D"s=
ection" title=3D"19.&nbsp;sqoop-list-databases"><div class=3D"titlepage"><d=
iv><div><h2 class=3D"title" style=3D"clear: both"><a name=3D"_literal_sqoop=
_list_databases_literal"></a>19.&nbsp;<code class=3D"literal">sqoop-list-da=
tabases</code></h2></div></div></div><div class=3D"toc"><dl><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_purpose_12">19.1. Purpose</a></span></dt><dt><span class=3D"section">=
<a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_=
12">19.2. Syntax</a></span></dt><dt><span class=3D"section"><a href=3D"http=
s://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_invocations_9"=
>19.3. Example Invocations</a></span></dt></dl></div><div class=3D"section"=
 title=3D"19.1.&nbsp;Purpose"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a name=3D"_purpose_12"></a>19.1.&nbsp;Purpose</h3></div></div><=
/div><p>List database schemas present on a server.</p></div><div class=3D"s=
ection" title=3D"19.2.&nbsp;Syntax"><div class=3D"titlepage"><div><div><h3 =
class=3D"title"><a name=3D"_syntax_12"></a>19.2.&nbsp;Syntax</h3></div></di=
v></div><pre class=3D"screen">$ sqoop list-databases (generic-args) (list-d=
atabases-args)
$ sqoop-list-databases (generic-args) (list-databases-args)</pre><p>Althoug=
h the Hadoop generic arguments must preceed any list-databases
arguments, the list-databases arguments can be entered in any order
with respect to one another.</p><div class=3D"table"><a name=3D"idp4410120"=
></a><p class=3D"title"><b>Table&nbsp;48.&nbsp;Common arguments</b></p><div=
 class=3D"table-contents"><table summary=3D"Common arguments" style=3D"bord=
er-collapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid =
; "><colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr=
><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " al=
ign=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connect &lt;jdbc-uri&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify JDBC connect string
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-manager &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify connection manager class to                                    =
      use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--driver &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Manually specify JDBC driver class                                     =
     to use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override $HADOOP_MAPRED_HOME
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--help</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print usage instructions
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password-file</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set path for a file containing the                                     =
     authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-P</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Read password from console
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password &lt;password&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--username &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication username
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--verbose</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print more information while working
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-param-file &lt;filename&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Optional properties file that                                          =
provides connection parameters
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--relaxed-isolation</code>
    </td><td style=3D"" align=3D"left">
    Set connection transaction isolation                                   =
       to read uncommitted for the mappers.
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"19.3.&nbsp;Example Invocations"><div class=
=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_example_invocation=
s_9"></a>19.3.&nbsp;Example Invocations</h3></div></div></div><p>List datab=
ase schemas available on a MySQL server:</p><pre class=3D"screen">$ sqoop l=
ist-databases --connect jdbc:mysql://database.example.com/
information_schema
employees</pre><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5=
in; margin-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><=
td rowspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[=
Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th=
 align=3D"left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>This=
 only works with HSQLDB, MySQL and Oracle. When using with Oracle,
it is necessary that the user connecting to the database has DBA privileges=
.</p></td></tr></tbody></table></div></div></div><div class=3D"section" tit=
le=3D"20.&nbsp;sqoop-list-tables"><div class=3D"titlepage"><div><div><h2 cl=
ass=3D"title" style=3D"clear: both"><a name=3D"_literal_sqoop_list_tables_l=
iteral"></a>20.&nbsp;<code class=3D"literal">sqoop-list-tables</code></h2><=
/div></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_13">20=
.1. Purpose</a></span></dt><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_13">20.2. Syntax</a>=
</span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org=
/docs/1.4.6/SqoopUserGuide.html#_example_invocations_10">20.3. Example Invo=
cations</a></span></dt></dl></div><div class=3D"section" title=3D"20.1.&nbs=
p;Purpose"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=
=3D"_purpose_13"></a>20.1.&nbsp;Purpose</h3></div></div></div><p>List table=
s present in a database.</p></div><div class=3D"section" title=3D"20.2.&nbs=
p;Syntax"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D=
"_syntax_13"></a>20.2.&nbsp;Syntax</h3></div></div></div><pre class=3D"scre=
en">$ sqoop list-tables (generic-args) (list-tables-args)
$ sqoop-list-tables (generic-args) (list-tables-args)</pre><p>Although the =
Hadoop generic arguments must preceed any list-tables
arguments, the list-tables arguments can be entered in any order
with respect to one another.</p><div class=3D"table"><a name=3D"idp4430416"=
></a><p class=3D"title"><b>Table&nbsp;49.&nbsp;Common arguments</b></p><div=
 class=3D"table-contents"><table summary=3D"Common arguments" style=3D"bord=
er-collapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid =
; "><colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr=
><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " al=
ign=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connect &lt;jdbc-uri&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify JDBC connect string
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-manager &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify connection manager class to                                    =
      use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--driver &lt;class-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Manually specify JDBC driver class                                     =
     to use
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--hadoop-mapred-home &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Override $HADOOP_MAPRED_HOME
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--help</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print usage instructions
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password-file</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set path for a file containing the                                     =
     authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-P</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Read password from console
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--password &lt;password&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication password
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--username &lt;username&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set authentication username
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--verbose</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Print more information while working
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--connection-param-file &lt;filename&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Optional properties file that                                          =
provides connection parameters
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--relaxed-isolation</code>
    </td><td style=3D"" align=3D"left">
    Set connection transaction isolation                                   =
       to read uncommitted for the mappers.
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"20.3.&nbsp;Example Invocations"><div class=
=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_example_invocation=
s_10"></a>20.3.&nbsp;Example Invocations</h3></div></div></div><p>List tabl=
es available in the "corp" database:</p><pre class=3D"screen">$ sqoop list-=
tables --connect jdbc:mysql://database.example.com/corp
employees
payroll_checks
job_descriptions
office_supplies</pre><p>In case of postgresql, list tables command with com=
mon arguments fetches only "public" schema. For custom schema, use --schema=
 argument to list tables of particular schema
Example</p><pre class=3D"screen">$ sqoop list-tables --connect jdbc:postgre=
sql://localhost/corp  --username name -P -- --schema payrolldept
employees
expenses</pre></div></div><div class=3D"section" title=3D"21.&nbsp;sqoop-he=
lp"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: =
both"><a name=3D"_literal_sqoop_help_literal"></a>21.&nbsp;<code class=3D"l=
iteral">sqoop-help</code></h2></div></div></div><div class=3D"toc"><dl><dt>=
<span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoo=
pUserGuide.html#_purpose_14">21.1. Purpose</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_syntax_14">21.2. Syntax</a></span></dt><dt><span class=3D"section"><a=
 href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example_i=
nvocations_11">21.3. Example Invocations</a></span></dt></dl></div><div cla=
ss=3D"section" title=3D"21.1.&nbsp;Purpose"><div class=3D"titlepage"><div><=
div><h3 class=3D"title"><a name=3D"_purpose_14"></a>21.1.&nbsp;Purpose</h3>=
</div></div></div><p>List tools available in Sqoop and explain their usage.=
</p></div><div class=3D"section" title=3D"21.2.&nbsp;Syntax"><div class=3D"=
titlepage"><div><div><h3 class=3D"title"><a name=3D"_syntax_14"></a>21.2.&n=
bsp;Syntax</h3></div></div></div><pre class=3D"screen">$ sqoop help [tool-n=
ame]
$ sqoop-help [tool-name]</pre><p>If no tool name is provided (for example, =
the user runs <code class=3D"literal">sqoop help</code>), then
the available tools are listed. With a tool name, the usage
instructions for that specific tool are presented on the console.</p></div>=
<div class=3D"section" title=3D"21.3.&nbsp;Example Invocations"><div class=
=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_example_invocation=
s_11"></a>21.3.&nbsp;Example Invocations</h3></div></div></div><p>List avai=
lable tools:</p><pre class=3D"screen">$ sqoop help
usage: sqoop COMMAND [ARGS]

Available commands:
  codegen            Generate code to interact with database records
  create-hive-table  Import a table definition into Hive
  eval               Evaluate a SQL statement and display the results
  export             Export an HDFS directory to a database table

...

See 'sqoop help COMMAND' for information on a specific command.</pre><p>Dis=
play usage instructions for the <code class=3D"literal">import</code> tool:=
</p><pre class=3D"screen">$ bin/sqoop help import
usage: sqoop import [GENERIC-ARGS] [TOOL-ARGS]

Common arguments:
   --connect &lt;jdbc-uri&gt;     Specify JDBC connect string
   --connection-manager &lt;class-name&gt;     Specify connection manager c=
lass to use
   --driver &lt;class-name&gt;    Manually specify JDBC driver class to use
   --hadoop-mapred-home &lt;dir&gt;            Override $HADOOP_MAPRED_HOME
   --help                   Print usage instructions
   --password-file          Set path for file containing authentication pas=
sword
   -P                       Read password from console
   --password &lt;password&gt;    Set authentication password
   --username &lt;username&gt;    Set authentication username
   --verbose                Print more information while working
   --hadoop-home &lt;dir&gt;      Deprecated. Override $HADOOP_HOME

Import control arguments:
   --as-avrodatafile             Imports data to Avro Data Files
   --as-sequencefile             Imports data to SequenceFiles
   --as-textfile                 Imports data as plain text (default)
   --as-parquetfile              Imports data to Parquet Data Files
...</pre></div></div><div class=3D"section" title=3D"22.&nbsp;sqoop-version=
"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: bo=
th"><a name=3D"_literal_sqoop_version_literal"></a>22.&nbsp;<code class=3D"=
literal">sqoop-version</code></h2></div></div></div><div class=3D"toc"><dl>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_purpose_15">22.1. Purpose</a></span></dt><dt><span cla=
ss=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuid=
e.html#_syntax_15">22.2. Syntax</a></span></dt><dt><span class=3D"section">=
<a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_example=
_invocations_12">22.3. Example Invocations</a></span></dt></dl></div><div c=
lass=3D"section" title=3D"22.1.&nbsp;Purpose"><div class=3D"titlepage"><div=
><div><h3 class=3D"title"><a name=3D"_purpose_15"></a>22.1.&nbsp;Purpose</h=
3></div></div></div><p>Display version information for Sqoop.</p></div><div=
 class=3D"section" title=3D"22.2.&nbsp;Syntax"><div class=3D"titlepage"><di=
v><div><h3 class=3D"title"><a name=3D"_syntax_15"></a>22.2.&nbsp;Syntax</h3=
></div></div></div><pre class=3D"screen">$ sqoop version
$ sqoop-version</pre></div><div class=3D"section" title=3D"22.3.&nbsp;Examp=
le Invocations"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a n=
ame=3D"_example_invocations_12"></a>22.3.&nbsp;Example Invocations</h3></di=
v></div></div><p>Display the version:</p><pre class=3D"screen">$ sqoop vers=
ion
Sqoop {revnumber}
git commit id 46b3e06b79a8411320d77c984c3030db47dd1c22
Compiled by aaron@jargon on Mon May 17 13:43:22 PDT 2010</pre></div></div><=
div class=3D"section" title=3D"23.&nbsp;Sqoop-HCatalog Integration"><div cl=
ass=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a na=
me=3D"_sqoop_hcatalog_integration"></a>23.&nbsp;Sqoop-HCatalog Integration<=
/h2></div></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a=
 href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_hcatalog_=
background">23.1. HCatalog Background</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_e=
xposing_hcatalog_tables_to_sqoop">23.2. Exposing HCatalog Tables to Sqoop</=
a></span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.=
apache.org/docs/1.4.6/SqoopUserGuide.html#_new_command_line_options">23.2.1=
. New Command Line Options</a></span></dt><dt><span class=3D"section"><a hr=
ef=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_supported_sq=
oop_hive_options">23.2.2. Supported Sqoop Hive Options</a></span></dt><dt><=
span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoop=
UserGuide.html#_direct_mode_support">23.2.3. Direct Mode support</a></span>=
</dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1=
.4.6/SqoopUserGuide.html#_unsupported_sqoop_options">23.2.4. Unsupported Sq=
oop Options</a></span></dt><dd><dl><dt><span class=3D"section"><a href=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_unsupported_sqoop_h=
ive_import_options">23.2.4.1. Unsupported Sqoop Hive Import Options</a></sp=
an></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/doc=
s/1.4.6/SqoopUserGuide.html#_unsupported_sqoop_export_and_import_options">2=
3.2.4.2. Unsupported Sqoop Export and Import Options</a></span></dt></dl></=
dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4=
.6/SqoopUserGuide.html#_ignored_sqoop_options">23.2.5. Ignored Sqoop Option=
s</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_automatic_table_creation">2=
3.3. Automatic Table Creation</a></span></dt><dt><span class=3D"section"><a=
 href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_delimited=
_text_formats_and_field_and_line_delimiter_characters">23.4. Delimited Text=
 Formats and Field and Line Delimiter Characters</a></span></dt><dt><span c=
lass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGu=
ide.html#_hcatalog_table_requirements">23.5. HCatalog Table Requirements</a=
></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.or=
g/docs/1.4.6/SqoopUserGuide.html#_support_for_partitioning">23.6. Support f=
or Partitioning</a></span></dt><dt><span class=3D"section"><a href=3D"https=
://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_schema_mapping">23.7. S=
chema Mapping</a></span></dt><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_support_for_hcatalog_data=
_types">23.8. Support for HCatalog Data Types</a></span></dt><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_providing_hive_and_hcatalog_libraries_for_the_sqoop_job">23.9. Provi=
ding Hive and HCatalog Libraries for the Sqoop Job</a></span></dt><dt><span=
 class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUser=
Guide.html#_examples">23.10. Examples</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_i=
mport">23.11. Import</a></span></dt><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_export">23.12. Exp=
ort</a></span></dt></dl></div><div class=3D"section" title=3D"23.1.&nbsp;HC=
atalog Background"><div class=3D"titlepage"><div><div><h3 class=3D"title"><=
a name=3D"_hcatalog_background"></a>23.1.&nbsp;HCatalog Background</h3></di=
v></div></div><p>HCatalog is a table and storage management service for Had=
oop that enables
users with different data processing tools Pig, MapReduce, and Hive
to more easily read and write data on the grid. HCatalog=92s table abstract=
ion
presents users with a relational view of data in the Hadoop distributed
file system (HDFS) and ensures that users need not worry about where or
in what format their data is stored: RCFile format, text files, or
SequenceFiles.</p><p>HCatalog supports reading and writing files in any for=
mat for which a Hive
SerDe (serializer-deserializer) has been written. By default, HCatalog
supports RCFile, CSV, JSON, and SequenceFile formats. To use a custom
format, you must provide the InputFormat and OutputFormat as well as the Se=
rDe.</p><p>The ability of HCatalog to abstract various storage formats is u=
sed in
providing the RCFile (and future file types) support to Sqoop.</p></div><di=
v class=3D"section" title=3D"23.2.&nbsp;Exposing HCatalog Tables to Sqoop">=
<div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_exposing=
_hcatalog_tables_to_sqoop"></a>23.2.&nbsp;Exposing HCatalog Tables to Sqoop=
</h3></div></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><=
a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_new_comm=
and_line_options">23.2.1. New Command Line Options</a></span></dt><dt><span=
 class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUser=
Guide.html#_supported_sqoop_hive_options">23.2.2. Supported Sqoop Hive Opti=
ons</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_direct_mode_support">23.2.3. Direct=
 Mode support</a></span></dt><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_unsupported_sqoop_options=
">23.2.4. Unsupported Sqoop Options</a></span></dt><dd><dl><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_unsupported_sqoop_hive_import_options">23.2.4.1. Unsupported Sqoop Hi=
ve Import Options</a></span></dt><dt><span class=3D"section"><a href=3D"htt=
ps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_unsupported_sqoop_exp=
ort_and_import_options">23.2.4.2. Unsupported Sqoop Export and Import Optio=
ns</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://=
sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_ignored_sqoop_options">23.=
2.5. Ignored Sqoop Options</a></span></dt></dl></div><p>HCatalog integratio=
n with Sqoop is patterned on an existing feature set that
supports Avro and Hive tables. Seven new command line options are introduce=
d,
and some command line options defined for Hive have been reused.</p><div cl=
ass=3D"section" title=3D"23.2.1.&nbsp;New Command Line Options"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_new_command_line_o=
ptions"></a>23.2.1.&nbsp;New Command Line Options</h4></div></div></div><di=
v class=3D"variablelist"><dl><dt><span class=3D"term">
<code class=3D"literal">--hcatalog-database</code>
</span></dt><dd>
Specifies the database name for the HCatalog table. If not specified,
the default database name <code class=3D"literal">default</code> is used. P=
roviding the
<code class=3D"literal">--hcatalog-database</code> option without <code cla=
ss=3D"literal">--hcatalog-table</code> is an error.
This is not a required option.
</dd><dt><span class=3D"term">
<code class=3D"literal">--hcatalog-table</code>
</span></dt><dd>
The argument value for this option is the HCatalog tablename.
The presence of the <code class=3D"literal">--hcatalog-table</code> option =
signifies that the import
or export job is done using HCatalog tables, and it is a required option fo=
r
HCatalog jobs.
</dd><dt><span class=3D"term">
<code class=3D"literal">--hcatalog-home</code>
</span></dt><dd>
The home directory for the HCatalog installation. The directory is
expected to have a <code class=3D"literal">lib</code> subdirectory and a <c=
ode class=3D"literal">share/hcatalog</code> subdirectory
with necessary HCatalog libraries. If not specified, the system property
<code class=3D"literal">hcatalog.home</code> will be checked and failing th=
at, a system environment
variable <code class=3D"literal">HCAT_HOME</code> will be checked.  If none=
 of these are set, the
default value will be used and currently the default is set to
<code class=3D"literal">/usr/lib/hcatalog</code>.
This is not a required option.
</dd><dt><span class=3D"term">
<code class=3D"literal">--create-hcatalog-table</code>
</span></dt><dd>
This option specifies whether an HCatalog table should be created
automatically when importing data. By default, HCatalog tables are assumed
to exist. The table name will be the same as the database table name
translated to lower case. Further described in <code class=3D"literal">Auto=
matic Table Creation</code>
below.
</dd><dt><span class=3D"term">
<code class=3D"literal">--hcatalog-storage-stanza</code>
</span></dt><dd>
This option specifies the storage stanza to be appended to the table.
Further described in <code class=3D"literal">Automatic Table Creation</code=
> below.
</dd><dt><span class=3D"term">
<code class=3D"literal">--hcatalog-partition-keys</code> and <code class=3D=
"literal">--hcatalog-partition-values</code>
</span></dt><dd>
These two options are used to specify multiple static partition key/value
pairs.  In the prior releases, <code class=3D"literal">--hive-partition-key=
</code> and
<code class=3D"literal">--hive-partition-value</code> options were used to =
specify the static partition
key/value pair, but only one level of static partition keys could be provid=
ed.
The options <code class=3D"literal">--hcatalog-partition-keys</code> and <c=
ode class=3D"literal">--hcatalog-partition-values</code>
allow multiple keys and values to be provided as static partitioning keys.
Multiple option values are to be separated by <span class=3D"emphasis"><em>=
,</em></span> (comma).
</dd></dl></div><p>For example, if the hive partition keys for the table to=
 export/import from are
defined with partition key names year, month and date and a specific partit=
ion
with year=3D1999, month=3D12, day=3D31 is the desired partition, then the v=
alues
for the two options will be as follows:</p><div class=3D"itemizedlist"><ul =
class=3D"itemizedlist" type=3D"disc"><li class=3D"listitem">
<code class=3D"literal">--hcatalog-partition-keys</code> year,month,day
</li><li class=3D"listitem">
<code class=3D"literal">--hcatalog-partition-values</code> 1999,12,31
</li></ul></div><p>To provide backward compatibility, if <code class=3D"lit=
eral">--hcatalog-partition-keys</code> or
<code class=3D"literal">--hcatalog-partition-values</code> options are not =
provided, then
<code class=3D"literal">--hive-partitition-key</code> and <code class=3D"li=
teral">--hive-partition-value</code> will be used if provided.</p><p>It is =
an error to specify only one of <code class=3D"literal">--hcatalog-partitio=
n-keys</code> or
<code class=3D"literal">--hcatalog-partition-values</code> options. Either =
both of the options should be
provided or neither of the options should be provided.</p></div><div class=
=3D"section" title=3D"23.2.2.&nbsp;Supported Sqoop Hive Options"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_supported_sqoop_hi=
ve_options"></a>23.2.2.&nbsp;Supported Sqoop Hive Options</h4></div></div><=
/div><p>The following Sqoop options are also used along with the <code clas=
s=3D"literal">--hcatalog-table</code>
option to provide additional input to the HCatalog jobs. Some of the existi=
ng
Hive import job options are reused with HCatalog jobs instead of creating
HCatalog-specific options for the same purpose.</p><div class=3D"variableli=
st"><dl><dt><span class=3D"term">
<code class=3D"literal">--map-column-hive</code>
</span></dt><dd>
This option maps a database column to HCatalog with a specific HCatalog
type.
</dd><dt><span class=3D"term">
<code class=3D"literal">--hive-home</code>
</span></dt><dd>
The Hive home location.
</dd><dt><span class=3D"term">
<code class=3D"literal">--hive-partition-key</code>
</span></dt><dd>
Used for static partitioning filter. The partitioning key should be of
type STRING. There can be only one static partitioning key.
Please see the discussion about <code class=3D"literal">--hcatalog-partitio=
n-keys</code> and
<code class=3D"literal">--hcatalog-partition-values</code> options.
</dd><dt><span class=3D"term">
<code class=3D"literal">--hive-partition-value</code>
</span></dt><dd>
The value associated with the partition.
Please see the discussion about <code class=3D"literal">--hcatalog-partitio=
n-keys</code> and
<code class=3D"literal">--hcatalog-partition-values</code> options.
</dd></dl></div></div><div class=3D"section" title=3D"23.2.3.&nbsp;Direct M=
ode support"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=
=3D"_direct_mode_support"></a>23.2.3.&nbsp;Direct Mode support</h4></div></=
div></div><p>HCatalog integration in Sqoop has been enhanced to support dir=
ect mode
connectors (which are high performance connectors specific to a database).
Netezza direct mode connector has been enhanced to take advatange of this
feature.</p><div class=3D"important" title=3D"Important" style=3D"margin-le=
ft: 0.5in; margin-right: 0.5in;"><table border=3D"0" summary=3D"Important">=
<tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><=
img alt=3D"[Important]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/i=
mportant.png"></td><th align=3D"left">Important</th></tr><tr><td align=3D"l=
eft" valign=3D"top"><p>Only Netezza direct mode connector is currently enab=
led to work
with HCatalog.</p></td></tr></tbody></table></div></div><div class=3D"secti=
on" title=3D"23.2.4.&nbsp;Unsupported Sqoop Options"><div class=3D"titlepag=
e"><div><div><h4 class=3D"title"><a name=3D"_unsupported_sqoop_options"></a=
>23.2.4.&nbsp;Unsupported Sqoop Options</h4></div></div></div><div class=3D=
"toc"><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/d=
ocs/1.4.6/SqoopUserGuide.html#_unsupported_sqoop_hive_import_options">23.2.=
4.1. Unsupported Sqoop Hive Import Options</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_unsupported_sqoop_export_and_import_options">23.2.4.2. Unsupported Sq=
oop Export and Import Options</a></span></dt></dl></div><div class=3D"secti=
on" title=3D"23.2.4.1.&nbsp;Unsupported Sqoop Hive Import Options"><div cla=
ss=3D"titlepage"><div><div><h5 class=3D"title"><a name=3D"_unsupported_sqoo=
p_hive_import_options"></a>23.2.4.1.&nbsp;Unsupported Sqoop Hive Import Opt=
ions</h5></div></div></div><p>The following Sqoop Hive import options are n=
ot supported with HCatalog jobs.</p><div class=3D"itemizedlist"><ul class=
=3D"itemizedlist" type=3D"disc"><li class=3D"listitem">
<code class=3D"literal">--hive-import</code>
</li><li class=3D"listitem">
<code class=3D"literal">--hive-overwrite</code>
</li></ul></div></div><div class=3D"section" title=3D"23.2.4.2.&nbsp;Unsupp=
orted Sqoop Export and Import Options"><div class=3D"titlepage"><div><div><=
h5 class=3D"title"><a name=3D"_unsupported_sqoop_export_and_import_options"=
></a>23.2.4.2.&nbsp;Unsupported Sqoop Export and Import Options</h5></div><=
/div></div><p>The following Sqoop export and import options are not support=
ed with HCatalog jobs.</p><div class=3D"itemizedlist"><ul class=3D"itemized=
list" type=3D"disc"><li class=3D"listitem">
<code class=3D"literal">--export-dir</code>
</li><li class=3D"listitem">
<code class=3D"literal">--target-dir</code>
</li><li class=3D"listitem">
<code class=3D"literal">--warehouse-dir</code>
</li><li class=3D"listitem">
<code class=3D"literal">--append</code>
</li><li class=3D"listitem">
<code class=3D"literal">--as-sequencefile</code>
</li><li class=3D"listitem">
<code class=3D"literal">--as-avrodatafile</code>
</li><li class=3D"listitem">
<code class=3D"literal">--as-parquetfile</code>
</li></ul></div></div></div><div class=3D"section" title=3D"23.2.5.&nbsp;Ig=
nored Sqoop Options"><div class=3D"titlepage"><div><div><h4 class=3D"title"=
><a name=3D"_ignored_sqoop_options"></a>23.2.5.&nbsp;Ignored Sqoop Options<=
/h4></div></div></div><p>The following options are ignored with HCatalog jo=
bs.</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"=
><li class=3D"listitem">
All input delimiter options are ignored.
</li><li class=3D"listitem">
Output delimiters are generally ignored unless either
<code class=3D"literal">--hive-drop-import-delims</code> or <code class=3D"=
literal">--hive-delims-replacement</code> is used. When the
<code class=3D"literal">--hive-drop-import-delims</code> or <code class=3D"=
literal">--hive-delims-replacement</code> option is
specified, all <code class=3D"literal">CHAR</code> type database table colu=
mns will be post-processed
to either remove or replace the delimiters, respectively. See <code class=
=3D"literal">Delimited Text
Formats and Field and Line Delimiter Characters</code> below. This is only =
needed
if the HCatalog table uses text formats.
</li></ul></div></div></div><div class=3D"section" title=3D"23.3.&nbsp;Auto=
matic Table Creation"><div class=3D"titlepage"><div><div><h3 class=3D"title=
"><a name=3D"_automatic_table_creation"></a>23.3.&nbsp;Automatic Table Crea=
tion</h3></div></div></div><p>One of the key features of Sqoop is to manage=
 and create the table metadata
when importing into Hadoop. HCatalog import jobs also provide for this
feature with the option <code class=3D"literal">--create-hcatalog-table</co=
de>. Furthermore, one of the
important benefits of the HCatalog integration is to provide storage
agnosticism to Sqoop data movement jobs. To provide for that feature,
HCatalog import jobs provide an option that lets a user specifiy the
storage format for the created table.</p><p>The option <code class=3D"liter=
al">--create-hcatalog-table</code> is used as an indicator that a table
has to be created as part of the HCatalog import job.  If the option
<code class=3D"literal">--create-hcatalog-table</code> is specified and the=
 table exists, then the
table creation will fail and the job will be aborted.</p><p>The option <cod=
e class=3D"literal">--hcatalog-storage-stanza</code> can be used to specify=
 the storage
format of the newly created table. The default value for this option is
<code class=3D"literal">stored as rcfile</code>. The value specified for th=
is option is assumed to be a
valid Hive storage format expression. It will be appended to the <code clas=
s=3D"literal">create table</code>
command generated by the HCatalog import job as part of automatic table
creation. Any error in the storage stanza will cause the table creation to
fail and the import job will be aborted.</p><p>Any additional resources nee=
ded to support the storage format referenced in
the option <code class=3D"literal">--hcatalog-storage-stanza</code> should =
be provided to the job either
by placing them in <code class=3D"literal">$HIVE_HOME/lib</code> or by prov=
iding them in <code class=3D"literal">HADOOP_CLASSPATH</code>
and <code class=3D"literal">LIBJAR</code> files.</p><p>If the option <code =
class=3D"literal">--hive-partition-key</code> is specified, then the value =
of this
option is used as the partitioning key for the newly created table. Only
one partitioning key can be specified with this option.</p><p>Object names =
are mapped to the lowercase equivalents as specified below
when mapped to an HCatalog table. This includes the table name (which
is the same as the external store table name converted to lower case)
and field names.</p></div><div class=3D"section" title=3D"23.4.&nbsp;Delimi=
ted Text Formats and Field and Line Delimiter Characters"><div class=3D"tit=
lepage"><div><div><h3 class=3D"title"><a name=3D"_delimited_text_formats_an=
d_field_and_line_delimiter_characters"></a>23.4.&nbsp;Delimited Text Format=
s and Field and Line Delimiter Characters</h3></div></div></div><p>HCatalog=
 supports delimited text format as one of the table storage formats.
But when delimited text is used and the imported data has fields that conta=
in
those delimiters, then the data may be parsed into a different number of
fields and records by Hive, thereby losing data fidelity.</p><p>For this ca=
se, one of these existing Sqoop import options can be used:</p><div class=
=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li class=3D"lis=
titem">
<code class=3D"literal">--hive-delims-replacement</code>
</li><li class=3D"listitem">
<code class=3D"literal">--hive-drop-import-delims</code>
</li></ul></div><p>If either of these options is provided for import, then =
any column of type
STRING will be formatted with the Hive delimiter processing and then writte=
n
to the HCatalog table.</p></div><div class=3D"section" title=3D"23.5.&nbsp;=
HCatalog Table Requirements"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a name=3D"_hcatalog_table_requirements"></a>23.5.&nbsp;HCatalog=
 Table Requirements</h3></div></div></div><p>The HCatalog table should be c=
reated before using it as part of a Sqoop job
if the default table creation options (with optional storage stanza) are no=
t
sufficient. All storage formats supported by HCatalog can be used with the
creation of the HCatalog tables. This makes this feature readily adopt new
storage formats that come into the Hive project, such as ORC files.</p></di=
v><div class=3D"section" title=3D"23.6.&nbsp;Support for Partitioning"><div=
 class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_support_for_=
partitioning"></a>23.6.&nbsp;Support for Partitioning</h3></div></div></div=
><p>The Sqoop HCatalog feature supports the following table types:</p><div =
class=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li class=
=3D"listitem">
Unpartitioned tables
</li><li class=3D"listitem">
Partitioned tables with a static partitioning key specified
</li><li class=3D"listitem">
Partitioned tables with dynamic partition keys from the database
result set
</li><li class=3D"listitem">
Partitioned tables with a combination of a static key and additional
dynamic partitioning keys
</li></ul></div></div><div class=3D"section" title=3D"23.7.&nbsp;Schema Map=
ping"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_sc=
hema_mapping"></a>23.7.&nbsp;Schema Mapping</h3></div></div></div><p>Sqoop =
currently does not support column name mapping. However, the user
is allowed to override the type mapping. Type mapping loosely follows
the Hive type mapping already present in Sqoop except that SQL types
FLOAT and REAL are mapped to HCatalog type float. In the Sqoop type
mapping for Hive, these two are mapped to double. Type mapping is primarily
used for checking the column definition correctness only and can be overrid=
den
with the --map-column-hive option.</p><p>All types except binary are assign=
able to a String type.</p><p>Any field of number type (int, shortint, tinyi=
nt, bigint and bigdecimal,
float and double) is assignable to another field of any number type during
exports and imports. Depending on the precision and scale of the target typ=
e
of assignment, truncations can occur.</p><p>Furthermore, date/time/timestam=
ps are mapped to date/timestamp hive types.
(the full date/time/timestamp representation).   Date/time/timstamp columns
can also be mapped to bigint Hive type in which case the value will be
the number of milliseconds since epoch.</p><p>BLOBs and CLOBs are only supp=
orted for imports. The BLOB/CLOB objects when
imported are stored in a Sqoop-specific format and knowledge of this format
is needed for processing these objects in a Pig/Hive job or another Map Red=
uce
job.</p><p>Database column names are mapped to their lowercase equivalents =
when mapped
to the HCatalog fields. Currently, case-sensitive database object names are
not supported.</p><p>Projection of a set of columns from a table to an HCat=
alog table or loading
to a column projection is allowed, subject to table constraints. The dynami=
c
partitioning columns, if any, must be part of the projection when importing
data into HCatalog tables.</p><p>Dynamic partitioning fields should be mapp=
ed to database columns that are
defined with the NOT NULL attribute (although this is not enforced during
schema mapping). A null value during import for a dynamic partitioning
column will abort the Sqoop job.</p></div><div class=3D"section" title=3D"2=
3.8.&nbsp;Support for HCatalog Data Types"><div class=3D"titlepage"><div><d=
iv><h3 class=3D"title"><a name=3D"_support_for_hcatalog_data_types"></a>23.=
8.&nbsp;Support for HCatalog Data Types</h3></div></div></div><p>All the pr=
imitive Hive types that are part of Hive 0.13 version are supported.
Currently all the complex HCatalog types are not supported.</p><p>BLOB/CLOB=
 database types are only supported for imports.</p></div><div class=3D"sect=
ion" title=3D"23.9.&nbsp;Providing Hive and HCatalog Libraries for the Sqoo=
p Job"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_p=
roviding_hive_and_hcatalog_libraries_for_the_sqoop_job"></a>23.9.&nbsp;Prov=
iding Hive and HCatalog Libraries for the Sqoop Job</h3></div></div></div><=
p>With the support for HCatalog added to Sqoop, any HCatalog job depends on=
 a
set of jar files being available both on the Sqoop client host and where th=
e
Map/Reduce tasks run. To run HCatalog jobs, the environment variable
<code class=3D"literal">HADOOP_CLASSPATH</code> must be set up as shown bel=
ow before launching the Sqoop
HCatalog jobs.</p><p><code class=3D"literal">HADOOP_CLASSPATH=3D$(hcat -cla=
sspath)</code>
<code class=3D"literal">export HADOOP_CLASSPATH</code></p><p>The necessary =
HCatalog dependencies will be copied to the distributed cache
automatically by the Sqoop job.</p></div><div class=3D"section" title=3D"23=
.10.&nbsp;Examples"><div class=3D"titlepage"><div><div><h3 class=3D"title">=
<a name=3D"_examples"></a>23.10.&nbsp;Examples</h3></div></div></div><p>Cre=
ate an HCatalog table, such as:</p><p><code class=3D"literal">hcat -e "crea=
te table txn(txn_date string, cust_id string, amount float,
store_id int) partitioned by (cust_id string) stored as rcfile;"</code></p>=
<p>Then Sqoop import and export of the "txn" HCatalog table can be invoked =
as
follows:</p></div><div class=3D"section" title=3D"23.11.&nbsp;Import"><div =
class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_import"></a>2=
3.11.&nbsp;Import</h3></div></div></div><p><code class=3D"literal">$SQOOP_H=
OME/bin/sqoop import --connect &lt;jdbc-url&gt; -table &lt;table-name&gt; -=
-hcatalog-table txn &lt;other sqoop options&gt;</code></p></div><div class=
=3D"section" title=3D"23.12.&nbsp;Export"><div class=3D"titlepage"><div><di=
v><h3 class=3D"title"><a name=3D"_export"></a>23.12.&nbsp;Export</h3></div>=
</div></div><p><code class=3D"literal">$SQOOP_HOME/bin/sqoop export --conne=
ct &lt;jdbc-url&gt; -table &lt;table-name&gt; --hcatalog-table txn &lt;othe=
r sqoop options&gt;</code></p></div></div><div class=3D"section" title=3D"2=
4.&nbsp;Compatibility Notes"><div class=3D"titlepage"><div><div><h2 class=
=3D"title" style=3D"clear: both"><a name=3D"_compatibility_notes"></a>24.&n=
bsp;Compatibility Notes</h2></div></div></div><div class=3D"toc"><dl><dt><s=
pan class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopU=
serGuide.html#_supported_databases">24.1. Supported Databases</a></span></d=
t><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.=
6/SqoopUserGuide.html#_mysql">24.2. MySQL</a></span></dt><dd><dl><dt><span =
class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserG=
uide.html#_zerodatetimebehavior">24.2.1. zeroDateTimeBehavior</a></span></d=
t><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.=
6/SqoopUserGuide.html#_literal_unsigned_literal_columns">24.2.2. <code clas=
s=3D"literal">UNSIGNED</code> columns</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_l=
iteral_blob_literal_and_literal_clob_literal_columns">24.2.3. <code class=
=3D"literal">BLOB</code> and <code class=3D"literal">CLOB</code> columns</a=
></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.or=
g/docs/1.4.6/SqoopUserGuide.html#_importing_views_in_direct_mode">24.2.4. I=
mporting views in direct mode</a></span></dt></dl></dd><dt><span class=3D"s=
ection"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#=
_postgresql">24.3. PostgreSQL</a></span></dt><dd><dl><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_i=
mporting_views_in_direct_mode_2">24.3.1. Importing views in direct mode</a>=
</span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://sqoop.=
apache.org/docs/1.4.6/SqoopUserGuide.html#_oracle">24.4. Oracle</a></span><=
/dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org=
/docs/1.4.6/SqoopUserGuide.html#_dates_and_times">24.4.1. Dates and Times</=
a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://sqoo=
p.apache.org/docs/1.4.6/SqoopUserGuide.html#_schema_definition_in_hive">24.=
5. Schema Definition in Hive</a></span></dt><dt><span class=3D"section"><a =
href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_cubrid">24=
.6. CUBRID</a></span></dt></dl></div><p>Sqoop uses JDBC to connect to datab=
ases and adheres to
published standards as much as possible. For databases which do not
support standards-compliant SQL, Sqoop uses alternate codepaths to
provide functionality. In general, Sqoop is believed to be compatible
with a large number of databases, but it is tested with only a few.</p><p>N=
onetheless, several database-specific decisions were made in the
implementation of Sqoop, and some databases offer additional settings
which are extensions to the standard.</p><p>This section describes the data=
bases tested with Sqoop, any
exceptions in Sqoop=92s handling of each database relative to the
norm, and any database-specific settings available in Sqoop.</p><div class=
=3D"section" title=3D"24.1.&nbsp;Supported Databases"><div class=3D"titlepa=
ge"><div><div><h3 class=3D"title"><a name=3D"_supported_databases"></a>24.1=
.&nbsp;Supported Databases</h3></div></div></div><p>While JDBC is a compati=
bility layer that allows a program to access
many different databases through a common API, slight differences in
the SQL language spoken by each database may mean that Sqoop can=92t use
every database out of the box, or that some databases may be used in
an inefficient manner.</p><p>When you provide a connect string to Sqoop, it=
 inspects the protocol scheme to
determine appropriate vendor-specific logic to use. If Sqoop knows about
a given database, it will work automatically. If not, you may need to
specify the driver class to load via <code class=3D"literal">--driver</code=
>. This will use a generic
code path which will use standard SQL to access the database. Sqoop provide=
s
some databases with faster, non-JDBC-based access mechanisms. These can be
enabled by specfying the <code class=3D"literal">--direct</code> parameter.=
</p><p>Sqoop includes vendor-specific support for the following databases:<=
/p><div class=3D"informaltable"><table style=3D"border-collapse: collapse;b=
order-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col alig=
n=3D"left"><col align=3D"left"><col align=3D"left"><col align=3D"left"></co=
lgroup><thead><tr><th style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    Database
    </th><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    version
    </th><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    <code class=3D"literal">--direct</code> support?
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    connect string matches
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    HSQLDB
    </td><td style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    1.8.0+
    </td><td style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    No
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">jdbc:hsqldb:*//</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    MySQL
    </td><td style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    5.0+
    </td><td style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    Yes
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">jdbc:mysql://</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    Oracle
    </td><td style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    10.2.0+
    </td><td style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    No
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">jdbc:oracle:*//</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    PostgreSQL
    </td><td style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    8.3+
    </td><td style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt soli=
d ; " align=3D"left">
    Yes (import only)
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">jdbc:postgresql://</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    CUBRID
    </td><td style=3D"border-right: 0.5pt solid ; " align=3D"left">
    9.2+
    </td><td style=3D"border-right: 0.5pt solid ; " align=3D"left">
    NO
    </td><td style=3D"" align=3D"left">
    <code class=3D"literal">jdbc:cubrid:*</code>
    </td></tr></tbody></table></div><p>Sqoop may work with older versions o=
f the databases listed, but we have
only tested it with the versions specified above.</p><p>Even if Sqoop suppo=
rts a database internally, you may still need to
install the database vendor=92s JDBC driver in your <code class=3D"literal"=
>$SQOOP_HOME/lib</code>
path on your client. Sqoop can load classes from any jars in
<code class=3D"literal">$SQOOP_HOME/lib</code> on the client and will use t=
hem as part of any
MapReduce jobs it runs; unlike older versions, you no longer need to
install JDBC jars in the Hadoop library path on your servers.</p></div><div=
 class=3D"section" title=3D"24.2.&nbsp;MySQL"><div class=3D"titlepage"><div=
><div><h3 class=3D"title"><a name=3D"_mysql"></a>24.2.&nbsp;MySQL</h3></div=
></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_zerodatetimebehavi=
or">24.2.1. zeroDateTimeBehavior</a></span></dt><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_litera=
l_unsigned_literal_columns">24.2.2. <code class=3D"literal">UNSIGNED</code>=
 columns</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoo=
p.apache.org/docs/1.4.6/SqoopUserGuide.html#_literal_blob_literal_and_liter=
al_clob_literal_columns">24.2.3. <code class=3D"literal">BLOB</code> and <c=
ode class=3D"literal">CLOB</code> columns</a></span></dt><dt><span class=3D=
"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.htm=
l#_importing_views_in_direct_mode">24.2.4. Importing views in direct mode</=
a></span></dt></dl></div><p>JDBC Driver: <a class=3D"ulink" href=3D"http://=
www.mysql.com/downloads/connector/j/" target=3D"_top">MySQL
Connector/J</a></p><p>MySQL v5.0 and above offers very thorough coverage by=
 Sqoop. Sqoop
has been tested with <code class=3D"literal">mysql-connector-java-5.1.13-bi=
n.jar</code>.</p><div class=3D"section" title=3D"24.2.1.&nbsp;zeroDateTimeB=
ehavior"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"=
_zerodatetimebehavior"></a>24.2.1.&nbsp;zeroDateTimeBehavior</h4></div></di=
v></div><p>MySQL allows values of <code class=3D"literal">'0000-00-00\'</co=
de> for <code class=3D"literal">DATE</code> columns, which is a
non-standard extension to SQL. When communicated via JDBC, these
values are handled in one of three different ways:</p><div class=3D"itemize=
dlist"><ul class=3D"itemizedlist" type=3D"disc"><li class=3D"listitem">
Convert to <code class=3D"literal">NULL</code>.
</li><li class=3D"listitem">
Throw an exception in the client.
</li><li class=3D"listitem">
Round to the nearest legal date (<code class=3D"literal">'0001-01-01\'</cod=
e>).
</li></ul></div><p>You specify the behavior by using the <code class=3D"lit=
eral">zeroDateTimeBehavior</code>
property of the connect string. If a <code class=3D"literal">zeroDateTimeBe=
havior</code> property
is not specified, Sqoop uses the <code class=3D"literal">convertToNull</cod=
e> behavior.</p><p>You can override this behavior. For example:</p><pre cla=
ss=3D"screen">$ sqoop import --table foo \
    --connect jdbc:mysql://db.example.com/someDb?zeroDateTimeBehavior=3Drou=
nd</pre></div><div class=3D"section" title=3D"24.2.2.&nbsp;UNSIGNED columns=
"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_litera=
l_unsigned_literal_columns"></a>24.2.2.&nbsp;<code class=3D"literal">UNSIGN=
ED</code> columns</h4></div></div></div><p>Columns with type <code class=3D=
"literal">UNSIGNED</code> in MySQL can hold values between 0 and
2^32 (<code class=3D"literal">4294967295</code>), but the database will rep=
ort the data type to Sqoop
as <code class=3D"literal">INTEGER</code>, which will can hold values betwe=
en <code class=3D"literal">-2147483648</code> and
<code class=3D"literal">\+2147483647</code>. Sqoop cannot currently import =
<code class=3D"literal">UNSIGNED</code> values above
<code class=3D"literal">2147483647</code>.</p></div><div class=3D"section" =
title=3D"24.2.3.&nbsp;BLOB and CLOB columns"><div class=3D"titlepage"><div>=
<div><h4 class=3D"title"><a name=3D"_literal_blob_literal_and_literal_clob_=
literal_columns"></a>24.2.3.&nbsp;<code class=3D"literal">BLOB</code> and <=
code class=3D"literal">CLOB</code> columns</h4></div></div></div><p>Sqoop=
=92s direct mode does not support imports of <code class=3D"literal">BLOB</=
code>, <code class=3D"literal">CLOB</code>, or
<code class=3D"literal">LONGVARBINARY</code> columns. Use JDBC-based import=
s for these
columns; do not supply the <code class=3D"literal">--direct</code> argument=
 to the import tool.</p></div><div class=3D"section" title=3D"24.2.4.&nbsp;=
Importing views in direct mode"><div class=3D"titlepage"><div><div><h4 clas=
s=3D"title"><a name=3D"_importing_views_in_direct_mode"></a>24.2.4.&nbsp;Im=
porting views in direct mode</h4></div></div></div><p>Sqoop is currently no=
t supporting import from view in direct mode. Use
JDBC based (non direct) mode in case that you need to import view (simply
omit <code class=3D"literal">--direct</code> parameter).</p></div></div><di=
v class=3D"section" title=3D"24.3.&nbsp;PostgreSQL"><div class=3D"titlepage=
"><div><div><h3 class=3D"title"><a name=3D"_postgresql"></a>24.3.&nbsp;Post=
greSQL</h3></div></div></div><div class=3D"toc"><dl><dt><span class=3D"sect=
ion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_im=
porting_views_in_direct_mode_2">24.3.1. Importing views in direct mode</a><=
/span></dt></dl></div><p>Sqoop supports JDBC-based connector for PostgreSQL=
: <a class=3D"ulink" href=3D"http://jdbc.postgresql.org/" target=3D"_top">h=
ttp://jdbc.postgresql.org/</a></p><p>The connector has been tested using JD=
BC driver version "9.1-903 JDBC 4" with
PostgreSQL server 9.1.</p><div class=3D"section" title=3D"24.3.1.&nbsp;Impo=
rting views in direct mode"><div class=3D"titlepage"><div><div><h4 class=3D=
"title"><a name=3D"_importing_views_in_direct_mode_2"></a>24.3.1.&nbsp;Impo=
rting views in direct mode</h4></div></div></div><p>Sqoop is currently not =
supporting import from view in direct mode. Use
JDBC based (non direct) mode in case that you need to import view (simply
omit <code class=3D"literal">--direct</code> parameter).</p></div></div><di=
v class=3D"section" title=3D"24.4.&nbsp;Oracle"><div class=3D"titlepage"><d=
iv><div><h3 class=3D"title"><a name=3D"_oracle"></a>24.4.&nbsp;Oracle</h3><=
/div></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_dates_and_time=
s">24.4.1. Dates and Times</a></span></dt></dl></div><p>JDBC Driver:
<a class=3D"ulink" href=3D"http://www.oracle.com/technology/software/tech/j=
ava/sqlj_jdbc/htdocs/jdbc_112010.html" target=3D"_top">Oracle
JDBC Thin Driver</a> - Sqoop is compatible with <code class=3D"literal">ojd=
bc6.jar</code>.</p><p>Sqoop has been tested with Oracle 10.2.0 Express Edit=
ion. Oracle is
notable in its different approach to SQL from the ANSI standard, and
its non-standard JDBC driver. Therefore, several features work
differently.</p><div class=3D"section" title=3D"24.4.1.&nbsp;Dates and Time=
s"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_dates=
_and_times"></a>24.4.1.&nbsp;Dates and Times</h4></div></div></div><p>Oracl=
e JDBC represents <code class=3D"literal">DATE</code> and <code class=3D"li=
teral">TIME</code> SQL types as <code class=3D"literal">TIMESTAMP</code>
values. Any <code class=3D"literal">DATE</code> columns in an Oracle databa=
se will be imported as a
<code class=3D"literal">TIMESTAMP</code> in Sqoop, and Sqoop-generated code=
 will store these values
in <code class=3D"literal">java.sql.Timestamp</code> fields.</p><p>When exp=
orting data back to a database, Sqoop parses text fields as
<code class=3D"literal">TIMESTAMP</code> types (with the form <code class=
=3D"literal">yyyy-mm-dd HH:MM:SS.ffffffff</code>) even
if you expect these fields to be formatted with the JDBC date escape
format of <code class=3D"literal">yyyy-mm-dd</code>. Dates exported to Orac=
le should be formatted
as full timestamps.</p><p>Oracle also includes the additional date/time typ=
es <code class=3D"literal">TIMESTAMP WITH
TIMEZONE</code> and <code class=3D"literal">TIMESTAMP WITH LOCAL TIMEZONE</=
code>. To support these types,
the user=92s session timezone must be specified. By default, Sqoop will
specify the timezone <code class=3D"literal">"GMT"</code> to Oracle. You ca=
n override this setting
by specifying a Hadoop property <code class=3D"literal">oracle.sessionTimeZ=
one</code> on the
command-line when running a Sqoop job. For example:</p><pre class=3D"screen=
">$ sqoop import -D oracle.sessionTimeZone=3DAmerica/Los_Angeles \
    --connect jdbc:oracle:thin:@//db.example.com/foo --table bar</pre><p>No=
te that Hadoop parameters (<code class=3D"literal">-D =85</code>) are <span=
 class=3D"emphasis"><em>generic arguments</em></span> and
must appear before the tool-specific arguments (<code class=3D"literal">--c=
onnect</code>,
<code class=3D"literal">--table</code>, and so on).</p><p>Legal values for =
the session timezone string are enumerated at
<a class=3D"ulink" href=3D"http://download-west.oracle.com/docs/cd/B19306_0=
1/server.102/b14225/applocaledata.htm#i637736" target=3D"_top">http://downl=
oad-west.oracle.com/docs/cd/B19306_01/server.102/b14225/applocaledata.htm#i=
637736</a>.</p></div></div><div class=3D"section" title=3D"24.5.&nbsp;Schem=
a Definition in Hive"><div class=3D"titlepage"><div><div><h3 class=3D"title=
"><a name=3D"_schema_definition_in_hive"></a>24.5.&nbsp;Schema Definition i=
n Hive</h3></div></div></div><p>Hive users will note that there is not a on=
e-to-one mapping between
SQL types and Hive types. In general, SQL types that do not have a
direct mapping (for example, <code class=3D"literal">DATE</code>, <code cla=
ss=3D"literal">TIME</code>, and <code class=3D"literal">TIMESTAMP</code>) w=
ill be coerced to
<code class=3D"literal">STRING</code> in Hive. The <code class=3D"literal">=
NUMERIC</code> and <code class=3D"literal">DECIMAL</code> SQL types will be=
 coerced to
<code class=3D"literal">DOUBLE</code>. In these cases, Sqoop will emit a wa=
rning in its log messages
informing you of the loss of precision.</p></div><div class=3D"section" tit=
le=3D"24.6.&nbsp;CUBRID"><div class=3D"titlepage"><div><div><h3 class=3D"ti=
tle"><a name=3D"_cubrid"></a>24.6.&nbsp;CUBRID</h3></div></div></div><p>Sqo=
op supports JDBC-based connector for Cubrid: <a class=3D"ulink" href=3D"htt=
p://www.cubrid.org/?mid=3Ddownloads&amp;item=3Djdbc_driver" target=3D"_top"=
>http://www.cubrid.org/?mid=3Ddownloads&amp;item=3Djdbc_driver</a></p><p>Th=
e connector has been tested using JDBC driver version "JDBC-9.2.0.0155-cubr=
id.jar" with Cubrid 9.2.</p></div></div><div class=3D"section" title=3D"25.=
&nbsp;Notes for specific connectors"><div class=3D"titlepage"><div><div><h2=
 class=3D"title" style=3D"clear: both"><a name=3D"connectors"></a>25.&nbsp;=
Notes for specific connectors</h2></div></div></div><div class=3D"toc"><dl>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_mysql_jdbc_connector">25.1. MySQL JDBC Connector</a></=
span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apac=
he.org/docs/1.4.6/SqoopUserGuide.html#_upsert_functionality">25.1.1. Upsert=
 functionality</a></span></dt></dl></dd><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_mysql_direct_c=
onnector">25.2. MySQL Direct Connector</a></span></dt><dd><dl><dt><span cla=
ss=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuid=
e.html#_requirements">25.2.1. Requirements</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_limitations_2">25.2.2. Limitations</a></span></dt><dt><span class=3D"=
section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html=
#_direct_mode_transactions">25.2.3. Direct-mode Transactions</a></span></dt=
></dl></dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/=
docs/1.4.6/SqoopUserGuide.html#_microsoft_sql_connector">25.3. Microsoft SQ=
L Connector</a></span></dt><dd><dl><dt><span class=3D"section"><a href=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_extra_arguments">25=
.3.1. Extra arguments</a></span></dt><dt><span class=3D"section"><a href=3D=
"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_allow_identity_in=
serts">25.3.2. Allow identity inserts</a></span></dt><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_n=
on_resilient_operations">25.3.3. Non-resilient operations</a></span></dt><d=
t><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sq=
oopUserGuide.html#_schema_support">25.3.4. Schema support</a></span></dt><d=
t><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sq=
oopUserGuide.html#_table_hints">25.3.5. Table hints</a></span></dt></dl></d=
d><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.=
6/SqoopUserGuide.html#_postgresql_connector">25.4. PostgreSQL Connector</a>=
</span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.ap=
ache.org/docs/1.4.6/SqoopUserGuide.html#_extra_arguments_2">25.4.1. Extra a=
rguments</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoo=
p.apache.org/docs/1.4.6/SqoopUserGuide.html#_schema_support_2">25.4.2. Sche=
ma support</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_postgresql_direct_=
connector">25.5. PostgreSQL Direct Connector</a></span></dt><dd><dl><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_requirements_2">25.5.1. Requirements</a></span></dt><dt><span=
 class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUser=
Guide.html#_limitations_3">25.5.2. Limitations</a></span></dt></dl></dd><dt=
><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqo=
opUserGuide.html#_pg_bulkload_connector">25.6. pg_bulkload connector</a></s=
pan></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apach=
e.org/docs/1.4.6/SqoopUserGuide.html#_purpose_16">25.6.1. Purpose</a></span=
></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/=
1.4.6/SqoopUserGuide.html#_requirements_3">25.6.2. Requirements</a></span><=
/dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.=
4.6/SqoopUserGuide.html#_syntax_16">25.6.3. Syntax</a></span></dt><dt><span=
 class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUser=
Guide.html#_data_staging">25.6.4. Data Staging</a></span></dt></dl></dd><dt=
><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqo=
opUserGuide.html#_netezza_connector">25.7. Netezza Connector</a></span></dt=
><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/do=
cs/1.4.6/SqoopUserGuide.html#_extra_arguments_3">25.7.1. Extra arguments</a=
></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.or=
g/docs/1.4.6/SqoopUserGuide.html#_direct_mode">25.7.2. Direct Mode</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_null_string_handling">25.7.3. Null string handl=
ing</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_data_connector_for_oracle=
_and_hadoop">25.8. Data Connector for Oracle and Hadoop</a></span></dt><dd>=
<dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.=
4.6/SqoopUserGuide.html#_about">25.8.1. About</a></span></dt><dd><dl><dt><s=
pan class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopU=
serGuide.html#_jobs">25.8.1.1. Jobs</a></span></dt><dt><span class=3D"secti=
on"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_how=
_the_standard_oracle_manager_works_for_imports">25.8.1.2. How The Standard =
Oracle Manager Works for Imports</a></span></dt><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_how_th=
e_data_connector_for_oracle_and_hadoop_works_for_imports">25.8.1.3. How The=
 Data Connector for Oracle and Hadoop Works for Imports</a></span></dt><dt>=
<span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoo=
pUserGuide.html#_data_connector_for_oracle_and_hadoop_exports">25.8.1.4. Da=
ta Connector for Oracle and Hadoop Exports</a></span></dt></dl></dd><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_requirements_4">25.8.2. Requirements</a></span></dt><dd><dl><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_ensure_the_oracle_database_jdbc_driver_is_setup_correct=
ly">25.8.2.1. Ensure The Oracle Database JDBC Driver Is Setup Correctly</a>=
</span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org=
/docs/1.4.6/SqoopUserGuide.html#_oracle_roles_and_privileges">25.8.2.2. Ora=
cle Roles and Privileges</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_additional_ora=
cle_roles_and_privileges_required_for_export">25.8.2.3. Additional Oracle R=
oles And Privileges Required for Export</a></span></dt><dt><span class=3D"s=
ection"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#=
_supported_data_types">25.8.2.4. Supported Data Types</a></span></dt></dl><=
/dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.=
4.6/SqoopUserGuide.html#_execute_sqoop_with_data_connector_for_oracle_and_h=
adoop">25.8.3. Execute Sqoop With Data Connector for Oracle and Hadoop</a><=
/span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_connect_to_oracle_oracle_rac">25.8.=
3.1. Connect to Oracle / Oracle RAC</a></span></dt><dt><span class=3D"secti=
on"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_con=
nect_to_an_oracle_database_instance">25.8.3.2. Connect to An Oracle Databas=
e Instance</a></span></dt><dt><span class=3D"section"><a href=3D"https://sq=
oop.apache.org/docs/1.4.6/SqoopUserGuide.html#_connect_to_an_oracle_rac">25=
.8.3.3. Connect to An Oracle RAC</a></span></dt><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_login_=
to_the_oracle_instance">25.8.3.4. Login to The Oracle Instance</a></span></=
dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4=
.6/SqoopUserGuide.html#_kill_data_connector_for_oracle_and_hadoop_jobs">25.=
8.3.5. Kill Data Connector for Oracle and Hadoop Jobs</a></span></dt></dl><=
/dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.=
4.6/SqoopUserGuide.html#_import_data_from_oracle">25.8.4. Import Data from =
Oracle</a></span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https:=
//sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_match_hadoop_files_to_or=
acle_table_partitions">25.8.4.1. Match Hadoop Files to Oracle Table Partiti=
ons</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_specify_the_partitions_to_import">2=
5.8.4.2. Specify The Partitions To Import</a></span></dt><dt><span class=3D=
"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.htm=
l#_consistent_read_all_mappers_read_from_the_same_point_in_time">25.8.4.3. =
Consistent Read: All Mappers Read From The Same Point In Time</a></span></d=
t></dl></dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org=
/docs/1.4.6/SqoopUserGuide.html#_export_data_into_oracle">25.8.5. Export Da=
ta into Oracle</a></span></dt><dd><dl><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_insert_export"=
>25.8.5.1. Insert-Export</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_update_export"=
>25.8.5.2. Update-Export</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_merge_export">=
25.8.5.3. Merge-Export</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_create_oracle_=
tables">25.8.5.4. Create Oracle Tables</a></span></dt><dt><span class=3D"se=
ction"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_=
nologging">25.8.5.5. NOLOGGING</a></span></dt><dt><span class=3D"section"><=
a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_partitio=
ning">25.8.5.6. Partitioning</a></span></dt><dt><span class=3D"section"><a =
href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_match_rows=
_via_multiple_columns">25.8.5.7. Match Rows Via Multiple Columns</a></span>=
</dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1=
.4.6/SqoopUserGuide.html#_storage_clauses">25.8.5.8. Storage Clauses</a></s=
pan></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_manage_date_and_timestamp_data_type=
s">25.8.6. Manage Date And Timestamp Data Types</a></span></dt><dd><dl><dt>=
<span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoo=
pUserGuide.html#_import_date_and_timestamp_data_types_from_oracle">25.8.6.1=
. Import Date And Timestamp Data Types from Oracle</a></span></dt><dt><span=
 class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUser=
Guide.html#_the_data_connector_for_oracle_and_hadoop_does_not_apply_a_time_=
zone_to_date_timestamp_data_types">25.8.6.2. The Data Connector for Oracle =
and Hadoop Does Not Apply A Time Zone to DATE / TIMESTAMP Data Types</a></s=
pan></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/do=
cs/1.4.6/SqoopUserGuide.html#_the_data_connector_for_oracle_and_hadoop_reta=
ins_time_zone_information_in_timezone_data_types">25.8.6.3. The Data Connec=
tor for Oracle and Hadoop Retains Time Zone Information in TIMEZONE Data Ty=
pes</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_data_connector_for_oracle_and_hadoo=
p_explicitly_states_time_zone_for_local_timezone_data_types">25.8.6.4. Data=
 Connector for Oracle and Hadoop Explicitly States Time Zone for LOCAL TIME=
ZONE Data Types</a></span></dt><dt><span class=3D"section"><a href=3D"https=
://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_java_sql_timestamp">25.=
8.6.5. java.sql.Timestamp</a></span></dt><dt><span class=3D"section"><a hre=
f=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_export_date_a=
nd_timestamp_data_types_into_oracle">25.8.6.6. Export Date And Timestamp Da=
ta Types into Oracle</a></span></dt></dl></dd><dt><span class=3D"section"><=
a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_configur=
e_the_data_connector_for_oracle_and_hadoop">25.8.7. Configure The Data Conn=
ector for Oracle and Hadoop</a></span></dt><dd><dl><dt><span class=3D"secti=
on"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_ora=
oop_site_template_xml">25.8.7.1. oraoop-site-template.xml</a></span></dt><d=
t><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sq=
oopUserGuide.html#_oraoop_oracle_session_initialization_statements">25.8.7.=
2. oraoop.oracle.session.initialization.statements</a></span></dt><dt><span=
 class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUser=
Guide.html#_oraoop_table_import_where_clause_location">25.8.7.3. oraoop.tab=
le.import.where.clause.location</a></span></dt><dt><span class=3D"section">=
<a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oracle_=
row_fetch_size">25.8.7.4. oracle.row.fetch.size</a></span></dt><dt><span cl=
ass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGui=
de.html#_oraoop_import_hint">25.8.7.5. oraoop.import.hint</a></span></dt><d=
t><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sq=
oopUserGuide.html#_oraoop_oracle_append_values_hint_usage">25.8.7.6. oraoop=
.oracle.append.values.hint.usage</a></span></dt><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_mapred=
_map_tasks_speculative_execution">25.8.7.7. mapred.map.tasks.speculative.ex=
ecution</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop=
.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_block_allocation">25.8.7=
.8. oraoop.block.allocation</a></span></dt><dt><span class=3D"section"><a h=
ref=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_impo=
rt_omit_lobs_and_long">25.8.7.9. oraoop.import.omit.lobs.and.long</a></span=
></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/=
1.4.6/SqoopUserGuide.html#_oraoop_locations">25.8.7.10. oraoop.locations</a=
></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.or=
g/docs/1.4.6/SqoopUserGuide.html#_sqoop_connection_factories">25.8.7.11. sq=
oop.connection.factories</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_expressions_in=
_oraoop_site_xml">25.8.7.12. Expressions in oraoop-site.xml</a></span></dt>=
</dl></dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/d=
ocs/1.4.6/SqoopUserGuide.html#_troubleshooting_the_data_connector_for_oracl=
e_and_hadoop">25.8.8. Troubleshooting The Data Connector for Oracle and Had=
oop</a></span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_quote_oracle_owners_and_tab=
les">25.8.8.1. Quote Oracle Owners And Tables</a></span></dt><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_quote_oracle_columns">25.8.8.2. Quote Oracle Columns</a></span></dt>=
<dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/=
SqoopUserGuide.html#_confirm_the_data_connector_for_oracle_and_hadoop_can_i=
nitialize_the_oracle_session">25.8.8.3. Confirm The Data Connector for Orac=
le and Hadoop Can Initialize The Oracle Session</a></span></dt><dt><span cl=
ass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGui=
de.html#_check_the_sqoop_debug_logs_for_error_messages">25.8.8.4. Check The=
 Sqoop Debug Logs for Error Messages</a></span></dt><dt><span class=3D"sect=
ion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_ex=
port_check_tables_are_compatible">25.8.8.5. Export: Check Tables Are Compat=
ible</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.ap=
ache.org/docs/1.4.6/SqoopUserGuide.html#_export_parallelization">25.8.8.6. =
Export: Parallelization</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_export_check_o=
raoop_oracle_append_values_hint_usage">25.8.8.7. Export: Check oraoop.oracl=
e.append.values.hint.usage</a></span></dt><dt><span class=3D"section"><a hr=
ef=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_turn_on_verb=
ose">25.8.8.8. Turn On Verbose</a></span></dt></dl></dd></dl></dd></dl></di=
v><div class=3D"section" title=3D"25.1.&nbsp;MySQL JDBC Connector"><div cla=
ss=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_mysql_jdbc_conne=
ctor"></a>25.1.&nbsp;MySQL JDBC Connector</h3></div></div></div><div class=
=3D"toc"><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apache.or=
g/docs/1.4.6/SqoopUserGuide.html#_upsert_functionality">25.1.1. Upsert func=
tionality</a></span></dt></dl></div><p>This section contains information sp=
ecific to MySQL JDBC Connector.</p><div class=3D"section" title=3D"25.1.1.&=
nbsp;Upsert functionality"><div class=3D"titlepage"><div><div><h4 class=3D"=
title"><a name=3D"_upsert_functionality"></a>25.1.1.&nbsp;Upsert functional=
ity</h4></div></div></div><p>MySQL JDBC Connector is supporting upsert func=
tionality using argument
<code class=3D"literal">--update-mode allowinsert</code>. To achieve that S=
qoop is using MySQL clause INSERT INTO
=85 ON DUPLICATE KEY UPDATE. This clause do not allow user to specify which=
 columns
should be used to distinct whether we should update existing row or add new=
 row. Instead
this clause relies on table=92s unique keys (primary key belongs to this se=
t). MySQL
will try to insert new row and if the insertion fails with duplicate unique=
 key error
it will update appropriate row instead. As a result, Sqoop is ignoring valu=
es specified
in parameter <code class=3D"literal">--update-key</code>, however user need=
s to specify at least one valid column
to turn on update mode itself.</p></div></div><div class=3D"section" title=
=3D"25.2.&nbsp;MySQL Direct Connector"><div class=3D"titlepage"><div><div><=
h3 class=3D"title"><a name=3D"_mysql_direct_connector"></a>25.2.&nbsp;MySQL=
 Direct Connector</h3></div></div></div><div class=3D"toc"><dl><dt><span cl=
ass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGui=
de.html#_requirements">25.2.1. Requirements</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_limitations_2">25.2.2. Limitations</a></span></dt><dt><span class=3D"=
section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html=
#_direct_mode_transactions">25.2.3. Direct-mode Transactions</a></span></dt=
></dl></div><p>MySQL Direct Connector allows faster import and export to/fr=
om MySQL using <code class=3D"literal">mysqldump</code> and <code class=3D"=
literal">mysqlimport</code> tools functionality
instead of SQL selects and inserts.</p><p>To use the MySQL Direct Connector=
, specify the <code class=3D"literal">--direct</code> argument for your imp=
ort or export job.</p><p>Example:</p><pre class=3D"screen">$ sqoop import -=
-connect jdbc:mysql://db.foo.com/corp --table EMPLOYEES \
    --direct</pre><p>Passing additional parameters to mysqldump:</p><pre cl=
ass=3D"screen">$ sqoop import --connect jdbc:mysql://server.foo.com/db --ta=
ble bar \
    --direct -- --default-character-set=3Dlatin1</pre><div class=3D"section=
" title=3D"25.2.1.&nbsp;Requirements"><div class=3D"titlepage"><div><div><h=
4 class=3D"title"><a name=3D"_requirements"></a>25.2.1.&nbsp;Requirements</=
h4></div></div></div><p>Utilities <code class=3D"literal">mysqldump</code> =
and <code class=3D"literal">mysqlimport</code> should be present in the she=
ll path of the user running the Sqoop command on
all nodes. To validate SSH as this user to all nodes and execute these comm=
ands. If you get an error, so will Sqoop.</p></div><div class=3D"section" t=
itle=3D"25.2.2.&nbsp;Limitations"><div class=3D"titlepage"><div><div><h4 cl=
ass=3D"title"><a name=3D"_limitations_2"></a>25.2.2.&nbsp;Limitations</h4><=
/div></div></div><div class=3D"itemizedlist"><ul class=3D"itemizedlist" typ=
e=3D"disc"><li class=3D"listitem">
Currently the direct connector does not support import of large object colu=
mns (BLOB and CLOB).
</li><li class=3D"listitem">
Importing to HBase and Accumulo is not supported
</li><li class=3D"listitem">
Use of a staging table when exporting data is not supported
</li><li class=3D"listitem">
Import of views is not supported
</li></ul></div></div><div class=3D"section" title=3D"25.2.3.&nbsp;Direct-m=
ode Transactions"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a=
 name=3D"_direct_mode_transactions"></a>25.2.3.&nbsp;Direct-mode Transactio=
ns</h4></div></div></div><p>For performance, each writer will commit the cu=
rrent transaction
approximately every 32 MB of exported data. You can control this
by specifying the following argument <span class=3D"emphasis"><em>before</e=
m></span> any tool-specific arguments: <code class=3D"literal">-D
sqoop.mysql.export.checkpoint.bytes=3Dsize</code>, where <span class=3D"emp=
hasis"><em>size</em></span> is a value in
bytes. Set <span class=3D"emphasis"><em>size</em></span> to 0 to disable in=
termediate checkpoints,
but individual files being exported will continue to be committed
independently of one another.</p><p>Sometimes you need to export large data=
 with Sqoop to a live MySQL cluster that
is under a high load serving random queries from the users of your applicat=
ion.
While data consistency issues during the export can be easily solved with a
staging table, there is still a problem with the performance impact caused =
by
the heavy export.</p><p>First off, the resources of MySQL dedicated to the =
import process can affect
the performance of the live product, both on the master and on the slaves.
Second, even if the servers can handle the import with no significant
performance impact (mysqlimport should be relatively "cheap"), importing bi=
g
tables can cause serious replication lag in the cluster risking data
inconsistency.</p><p>With <code class=3D"literal">-D sqoop.mysql.export.sle=
ep.ms=3Dtime</code>, where <span class=3D"emphasis"><em>time</em></span> is=
 a value in
milliseconds, you can let the server relax between checkpoints and the repl=
icas
catch up by pausing the export process after transferring the number of byt=
es
specified in <code class=3D"literal">sqoop.mysql.export.checkpoint.bytes</c=
ode>. Experiment with different
settings of these two parameters to archieve an export pace that doesn=92t
endanger the stability of your MySQL cluster.</p><div class=3D"important" t=
itle=3D"Important" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><tabl=
e border=3D"0" summary=3D"Important"><tbody><tr><td rowspan=3D"2" align=3D"=
center" valign=3D"top" width=3D"25"><img alt=3D"[Important]" src=3D"https:/=
/sqoop.apache.org/docs/1.4.6/images/important.png"></td><th align=3D"left">=
Important</th></tr><tr><td align=3D"left" valign=3D"top"><p>Note that any a=
rguments to Sqoop that are of the form <code class=3D"literal">-D
parameter=3Dvalue</code> are Hadoop <span class=3D"emphasis"><em>generic ar=
guments</em></span> and must appear before
any tool-specific arguments (for example, <code class=3D"literal">--connect=
</code>, <code class=3D"literal">--table</code>, etc).
Don=92t forget that these parameters are only supported with the <code clas=
s=3D"literal">--direct</code>
flag set.</p></td></tr></tbody></table></div></div></div><div class=3D"sect=
ion" title=3D"25.3.&nbsp;Microsoft SQL Connector"><div class=3D"titlepage">=
<div><div><h3 class=3D"title"><a name=3D"_microsoft_sql_connector"></a>25.3=
.&nbsp;Microsoft SQL Connector</h3></div></div></div><div class=3D"toc"><dl=
><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6=
/SqoopUserGuide.html#_extra_arguments">25.3.1. Extra arguments</a></span></=
dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4=
.6/SqoopUserGuide.html#_allow_identity_inserts">25.3.2. Allow identity inse=
rts</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_non_resilient_operations">25.3.3. N=
on-resilient operations</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_schema_support=
">25.3.4. Schema support</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_table_hints">2=
5.3.5. Table hints</a></span></dt></dl></div><div class=3D"section" title=
=3D"25.3.1.&nbsp;Extra arguments"><div class=3D"titlepage"><div><div><h4 cl=
ass=3D"title"><a name=3D"_extra_arguments"></a>25.3.1.&nbsp;Extra arguments=
</h4></div></div></div><p>List of all extra arguments supported by Microsof=
t SQL Connector is shown below:</p><div class=3D"table"><a name=3D"idp46093=
84"></a><p class=3D"title"><b>Table&nbsp;50.&nbsp;Supported Microsoft SQL C=
onnector extra arguments:</b></p><div class=3D"table-contents"><table summa=
ry=3D"Supported Microsoft SQL Connector extra arguments:" style=3D"border-c=
ollapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; ">=
<colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr><th=
 style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=
=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    +--identity-insert
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Set IDENTITY_INSERT to ON before                                       =
   export insert.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--non-resilient</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Don=92t attempt to recover failed                                      =
    export operations.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--schema &lt;name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Scheme name that sqoop should use.                                     =
     Default is "dbo".
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--table-hints &lt;hints&gt;</code>
    </td><td style=3D"" align=3D"left">
    Table hints that Sqoop should use for                                  =
        data movement.
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"25.3.2.&nbsp;Allow identity inserts"><div cl=
ass=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_allow_identity_=
inserts"></a>25.3.2.&nbsp;Allow identity inserts</h4></div></div></div><p>Y=
ou can allow inserts on columns that have identity. For example:</p><pre cl=
ass=3D"screen">$ sqoop export ... --export-dir custom_dir --table custom_ta=
ble -- --identity-insert</pre></div><div class=3D"section" title=3D"25.3.3.=
&nbsp;Non-resilient operations"><div class=3D"titlepage"><div><div><h4 clas=
s=3D"title"><a name=3D"_non_resilient_operations"></a>25.3.3.&nbsp;Non-resi=
lient operations</h4></div></div></div><p>You can override the default and =
not use resilient operations during export.
This will avoid retrying failed operations. For example:</p><pre class=3D"s=
creen">$ sqoop export ... --export-dir custom_dir --table custom_table -- -=
-non-resilient</pre></div><div class=3D"section" title=3D"25.3.4.&nbsp;Sche=
ma support"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=
=3D"_schema_support"></a>25.3.4.&nbsp;Schema support</h4></div></div></div>=
<p>If you need to work with tables that are located in non-default schemas,=
 you can
specify schema names via the <code class=3D"literal">--schema</code> argume=
nt. Custom schemas are supported for
both import and export jobs. For example:</p><pre class=3D"screen">$ sqoop =
import ... --table custom_table -- --schema custom_schema</pre></div><div c=
lass=3D"section" title=3D"25.3.5.&nbsp;Table hints"><div class=3D"titlepage=
"><div><div><h4 class=3D"title"><a name=3D"_table_hints"></a>25.3.5.&nbsp;T=
able hints</h4></div></div></div><p>Sqoop supports table hints in both impo=
rt and export jobs. Table hints are used only
for queries that move data from/to Microsoft SQL Server, but they cannot be=
 used for
meta data queries. You can specify a comma-separated list of table hints in=
 the
<code class=3D"literal">--table-hints</code> argument. For example:</p><pre=
 class=3D"screen">$ sqoop import ... --table custom_table -- --table-hints =
NOLOCK</pre></div></div><div class=3D"section" title=3D"25.4.&nbsp;PostgreS=
QL Connector"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a nam=
e=3D"_postgresql_connector"></a>25.4.&nbsp;PostgreSQL Connector</h3></div><=
/div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_extra_arguments_2">2=
5.4.1. Extra arguments</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_schema_support=
_2">25.4.2. Schema support</a></span></dt></dl></div><div class=3D"section"=
 title=3D"25.4.1.&nbsp;Extra arguments"><div class=3D"titlepage"><div><div>=
<h4 class=3D"title"><a name=3D"_extra_arguments_2"></a>25.4.1.&nbsp;Extra a=
rguments</h4></div></div></div><p>List of all extra arguments supported by =
PostgreSQL Connector is shown below:</p><div class=3D"table"><a name=3D"idp=
4623992"></a><p class=3D"title"><b>Table&nbsp;51.&nbsp;Supported PostgreSQL=
 extra arguments:</b></p><div class=3D"table-contents"><table summary=3D"Su=
pported PostgreSQL extra arguments:" style=3D"border-collapse: collapse;bor=
der-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=
=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-rig=
ht: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; "=
 align=3D"left">
    <code class=3D"literal">--schema &lt;name&gt;</code>
    </td><td style=3D"" align=3D"left">
    Scheme name that sqoop should use.                                     =
     Default is "public".
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"25.4.2.&nbsp;Schema support"><div class=3D"t=
itlepage"><div><div><h4 class=3D"title"><a name=3D"_schema_support_2"></a>2=
5.4.2.&nbsp;Schema support</h4></div></div></div><p>If you need to work wit=
h table that is located in schema other than default one,
you need to specify extra argument <code class=3D"literal">--schema</code>.=
 Custom schemas are supported for
both import and export job (optional staging table however must be present =
in the
same schema as target table). Example invocation:</p><pre class=3D"screen">=
$ sqoop import ... --table custom_table -- --schema custom_schema</pre></di=
v></div><div class=3D"section" title=3D"25.5.&nbsp;PostgreSQL Direct Connec=
tor"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a name=3D"_pos=
tgresql_direct_connector"></a>25.5.&nbsp;PostgreSQL Direct Connector</h3></=
div></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_requirements_2=
">25.5.1. Requirements</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_limitations_3"=
>25.5.2. Limitations</a></span></dt></dl></div><p>PostgreSQL Direct Connect=
or allows faster import and export to/from PostgresSQL "COPY" command.</p><=
p>To use the PostgreSQL Direct Connector, specify the <code class=3D"litera=
l">--direct</code> argument for your import or export job.</p><p>When impor=
ting from PostgreSQL in conjunction with direct mode, you
can split the import into separate files after
individual files reach a certain size. This size limit is controlled
with the <code class=3D"literal">--direct-split-size</code> argument.</p><p=
>The direct connector offers also additional extra arguments:</p><div class=
=3D"table"><a name=3D"idp4632600"></a><p class=3D"title"><b>Table&nbsp;52.&=
nbsp;Additional supported PostgreSQL extra arguments in direct mode:</b></p=
><div class=3D"table-contents"><table summary=3D"Additional supported Postg=
reSQL extra arguments in direct mode:" style=3D"border-collapse: collapse;b=
order-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col alig=
n=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-ri=
ght: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--boolean-true-string &lt;str&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    String that will be used to encode                                     =
     <code class=3D"literal">true</code> value of <code class=3D"literal">b=
oolean</code> columns.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Default is "TRUE".
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--boolean-false-string &lt;str&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    String that will be used to encode                                     =
     <code class=3D"literal">false</code> value of <code class=3D"literal">=
boolean</code> columns.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    </td><td style=3D"" align=3D"left">
    Default is "FALSE".
    </td></tr></tbody></table></div></div><br class=3D"table-break"><div cl=
ass=3D"section" title=3D"25.5.1.&nbsp;Requirements"><div class=3D"titlepage=
"><div><div><h4 class=3D"title"><a name=3D"_requirements_2"></a>25.5.1.&nbs=
p;Requirements</h4></div></div></div><p>Utility <code class=3D"literal">psq=
l</code> should be present in the shell path of the user running the Sqoop =
command on
all nodes. To validate SSH as this user to all nodes and execute these comm=
ands. If you get an error, so will Sqoop.</p></div><div class=3D"section" t=
itle=3D"25.5.2.&nbsp;Limitations"><div class=3D"titlepage"><div><div><h4 cl=
ass=3D"title"><a name=3D"_limitations_3"></a>25.5.2.&nbsp;Limitations</h4><=
/div></div></div><div class=3D"itemizedlist"><ul class=3D"itemizedlist" typ=
e=3D"disc"><li class=3D"listitem">
Currently the direct connector does not support import of large object colu=
mns (BLOB and CLOB).
</li><li class=3D"listitem">
Importing to HBase and Accumulo is not supported
</li><li class=3D"listitem">
Import of views is not supported
</li></ul></div></div></div><div class=3D"section" title=3D"25.6.&nbsp;pg_b=
ulkload connector"><div class=3D"titlepage"><div><div><h3 class=3D"title"><=
a name=3D"_pg_bulkload_connector"></a>25.6.&nbsp;pg_bulkload connector</h3>=
</div></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a hre=
f=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_purpose_16">2=
5.6.1. Purpose</a></span></dt><dt><span class=3D"section"><a href=3D"https:=
//sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_requirements_3">25.6.2. =
Requirements</a></span></dt><dt><span class=3D"section"><a href=3D"https://=
sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_syntax_16">25.6.3. Syntax<=
/a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.=
org/docs/1.4.6/SqoopUserGuide.html#_data_staging">25.6.4. Data Staging</a><=
/span></dt></dl></div><div class=3D"section" title=3D"25.6.1.&nbsp;Purpose"=
><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_purpose=
_16"></a>25.6.1.&nbsp;Purpose</h4></div></div></div><p>pg_bulkload connecto=
r is a direct connector for exporting data into PostgreSQL.
This connector uses
<a class=3D"ulink" href=3D"http://pgbulkload.projects.postgresql.org/index.=
html" target=3D"_top">pg_bulkload</a>.
Users benefit from functionality of pg_bulkload such as
fast exports bypassing shared bufferes and WAL,
flexible error records handling,
and ETL feature with filter functions.</p></div><div class=3D"section" titl=
e=3D"25.6.2.&nbsp;Requirements"><div class=3D"titlepage"><div><div><h4 clas=
s=3D"title"><a name=3D"_requirements_3"></a>25.6.2.&nbsp;Requirements</h4><=
/div></div></div><p>pg_bulkload connector requires following conditions for=
 export job execution:</p><div class=3D"itemizedlist"><ul class=3D"itemized=
list" type=3D"disc"><li class=3D"listitem">
The <a class=3D"ulink" href=3D"http://pgbulkload.projects.postgresql.org/in=
dex.html" target=3D"_top">pg_bulkload</a>
  must be installed on DB server and all slave nodes.
  RPM for RedHat or CentOS is available in then
  <a class=3D"ulink" href=3D"http://pgfoundry.org/frs/?group_id=3D1000261" =
target=3D"_top">download page</a>.
</li><li class=3D"listitem">
The <a class=3D"ulink" href=3D"http://jdbc.postgresql.org/index.html" targe=
t=3D"_top">PostgreSQL JDBC</a>
  is required on client node.
</li><li class=3D"listitem">
Superuser role of PostgreSQL database is required for execution of pg_bulkl=
oad.
</li></ul></div></div><div class=3D"section" title=3D"25.6.3.&nbsp;Syntax">=
<div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_syntax_1=
6"></a>25.6.3.&nbsp;Syntax</h4></div></div></div><p>Use <code class=3D"lite=
ral">--connection-manager</code> option to specify connection manager class=
name.</p><pre class=3D"screen">$ sqoop export (generic-args) --connection-m=
anager org.apache.sqoop.manager.PGBulkloadManager (export-args)
$ sqoop-export (generic-args) --connection-manager org.apache.sqoop.manager=
.PGBulkloadManager (export-args)</pre><p>This connector supports export arg=
uments shown below.</p><div class=3D"table"><a name=3D"idp4651696"></a><p c=
lass=3D"title"><b>Table&nbsp;53.&nbsp;Supported export control arguments:</=
b></p><div class=3D"table-contents"><table summary=3D"Supported export cont=
rol arguments:" style=3D"border-collapse: collapse;border-top: 0.5pt solid =
; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><col align=
=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt solid ; bo=
rder-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--export-dir &lt;dir&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    HDFS source path for the export
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-m,--num-mappers &lt;n&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Use <span class=3D"emphasis"><em>n</em></span> map tasks to export in  =
                                       parallel
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--table &lt;table-name&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Table to populate
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--input-null-string &lt;null-string&gt;</code>
    </td><td style=3D"" align=3D"left">
    The string to be interpreted as                                        =
 null for string columns
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>Ther=
e are additional configuration for pg_bulkload execution
specified via Hadoop Configuration properties
which can be given with <code class=3D"literal">-D &lt;property=3Dvalue&gt;=
</code> option.
Because Hadoop Configuration properties are generic arguments of the sqoop,
it must preceed any export control arguments.</p><div class=3D"table"><a na=
me=3D"idp4660120"></a><p class=3D"title"><b>Table&nbsp;54.&nbsp;Supported e=
xport control properties:</b></p><div class=3D"table-contents"><table summa=
ry=3D"Supported export control properties:" style=3D"border-collapse: colla=
pse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col=
 align=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"bord=
er-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Property
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    mapred.reduce.tasks
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Number of reduce tasks for staging.                                The =
defalt value is 1.                                Each tasks do staging in =
a single transaction.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    pgbulkload.bin
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Path of the pg_bulkoad binary                                installed =
on each slave nodes.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    pgbulkload.check.constraints
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify whether CHECK constraints are checked                          =
      during the loading.                                The default value =
is YES.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    pgbulkload.parse.errors
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The maximum mumber of ingored records                                th=
at cause errors during parsing,                                encoding, fi=
ltering, constraints checking,                                and data type=
 conversion.                                Error records are recorded     =
                           in the PARSE BADFILE.                           =
      The default value is INFINITE.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    pgbulkload.duplicate.errors
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Number of ingored records                                that violate u=
nique constraints.                                Duplicated records are re=
corded in the                                DUPLICATE BADFILE on DB server=
.                                The default value is INFINITE.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    pgbulkload.filter
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Specify the filter function                                to convert e=
ach row in the input file.                                 See the pg_bulkl=
oad documentation to know                                how to write FILTE=
R functions.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    pgbulkload.clear.staging.table
    </td><td style=3D"" align=3D"left">
    Indicates that any data present in                               the st=
aging table can be dropped.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>Here=
 is a example of complete command line.</p><pre class=3D"screen">$ sqoop ex=
port \
    -Dmapred.reduce.tasks=3D2
    -Dpgbulkload.bin=3D"/usr/local/bin/pg_bulkload" \
    -Dpgbulkload.input.field.delim=3D$'\t' \
    -Dpgbulkload.check.constraints=3D"YES" \
    -Dpgbulkload.parse.errors=3D"INFINITE" \
    -Dpgbulkload.duplicate.errors=3D"INFINITE" \
    --connect jdbc:postgresql://pgsql.example.net:5432/sqooptest \
    --connection-manager org.apache.sqoop.manager.PGBulkloadManager \
    --table test --username sqooptest --export-dir=3D/test -m 2</pre></div>=
<div class=3D"section" title=3D"25.6.4.&nbsp;Data Staging"><div class=3D"ti=
tlepage"><div><div><h4 class=3D"title"><a name=3D"_data_staging"></a>25.6.4=
.&nbsp;Data Staging</h4></div></div></div><p>Each map tasks of pg_bulkload =
connector=92s export job create
their own staging table on the fly.
The Name of staging tables is decided based on the destination table
and the task attempt ids.
For example, the name of staging table for the "test" table is like
<code class=3D"literal">test_attempt_1345021837431_0001_m_000000_0</code> .=
</p><p>Staging tables are automatically dropped if tasks successfully compl=
ete
or map tasks fail.
When reduce task fails,
staging table for the task are left for manual retry and
users must take care of it.</p></div></div><div class=3D"section" title=3D"=
25.7.&nbsp;Netezza Connector"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a name=3D"_netezza_connector"></a>25.7.&nbsp;Netezza Connector<=
/h3></div></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a=
 href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_extra_arg=
uments_3">25.7.1. Extra arguments</a></span></dt><dt><span class=3D"section=
"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_direc=
t_mode">25.7.2. Direct Mode</a></span></dt><dt><span class=3D"section"><a h=
ref=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_null_string=
_handling">25.7.3. Null string handling</a></span></dt></dl></div><div clas=
s=3D"section" title=3D"25.7.1.&nbsp;Extra arguments"><div class=3D"titlepag=
e"><div><div><h4 class=3D"title"><a name=3D"_extra_arguments_3"></a>25.7.1.=
&nbsp;Extra arguments</h4></div></div></div><p>List of all extra arguments =
supported by Netezza Connector is shown below:</p><div class=3D"table"><a n=
ame=3D"idp4675592"></a><p class=3D"title"><b>Table&nbsp;55.&nbsp;Supported =
Netezza extra arguments:</b></p><div class=3D"table-contents"><table summar=
y=3D"Supported Netezza extra arguments:" style=3D"border-collapse: collapse=
;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col al=
ign=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-=
right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--partitioned-access</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Whether each mapper acts on a subset                                   =
   of data slices of a table or all                                      De=
fault is "false" for standard mode                                      and=
 "true" for direct mode.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--max-errors</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Applicable only in direct mode.                                      Th=
is option specifies the error threshold                                    =
  per mapper while transferring data. If                                   =
   the number of errors encountered exceed                                 =
     this threshold then the job will fail.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Default value is 1.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--log-dir</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Applicable only in direct mode.                                      Sp=
ecifies the directory where Netezza                                      ex=
ternal table operation logs are stored                                     =
 on the hadoop filesystem.  Logs are                                      s=
tored under this directory with one                                      di=
rectory for the job and sub-directories                                    =
  for each task number and attempt.                                      De=
fault value is the user home directory.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">--trunc-string</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Applicable only in direct mode.                                      Sp=
ecifies whether the system                                       truncates =
strings to the declared                                      storage and lo=
ads the data. By default                                      truncation of=
 strings is reported as an                                      error.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--ctrl-chars</code>
    </td><td style=3D"" align=3D"left">
    Applicable only in direct mode.                                      Sp=
ecifies whether control characters                                       (A=
SCII chars 1 - 31) can be allowed                                       to =
be part of char/nchar/varchar/nvarchar                                     =
 columns.  Default is false.
    </td></tr></tbody></table></div></div><br class=3D"table-break"></div><=
div class=3D"section" title=3D"25.7.2.&nbsp;Direct Mode"><div class=3D"titl=
epage"><div><div><h4 class=3D"title"><a name=3D"_direct_mode"></a>25.7.2.&n=
bsp;Direct Mode</h4></div></div></div><p>Netezza connector supports an opti=
mized data transfer facility using the
Netezza external tables feature.  Each map tasks of Netezza connector=92s i=
mport
job will work on a subset of the Netezza partitions and transparently creat=
e
and use an external table to transport data.  Similarly, export jobs will u=
se
the external table to push data fast onto the NZ system.   Direct mode does
not support staging tables, upsert options etc.</p><p>Here is an example of=
 complete command line for import using the Netezza
external table feature.</p><pre class=3D"screen">$ sqoop import \
    --direct \
    --connect jdbc:netezza://nzhost:5480/sqoop \
    --table nztable \
    --username nzuser \
    --password nzpass \
    --target-dir hdfsdir</pre><p>Here is an example of complete command lin=
e for export with tab as the field
terminator character.</p><pre class=3D"screen">$ sqoop export \
    --direct \
    --connect jdbc:netezza://nzhost:5480/sqoop \
    --table nztable \
    --username nzuser \
    --password nzpass \
    --export-dir hdfsdir \
    --input-fields-terminated-by "\t"</pre></div><div class=3D"section" tit=
le=3D"25.7.3.&nbsp;Null string handling"><div class=3D"titlepage"><div><div=
><h4 class=3D"title"><a name=3D"_null_string_handling"></a>25.7.3.&nbsp;Nul=
l string handling</h4></div></div></div><p>Netezza direct connector support=
s the null-string features of Sqoop.  The null
string values are converted to appropriate external table options during ex=
port
and import operations.</p><div class=3D"table"><a name=3D"idp4691832"></a><=
p class=3D"title"><b>Table&nbsp;56.&nbsp;Supported export control arguments=
:</b></p><div class=3D"table-contents"><table summary=3D"Supported export c=
ontrol arguments:" style=3D"border-collapse: collapse;border-top: 0.5pt sol=
id ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><col alig=
n=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--input-null-string &lt;null-string&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The string to be interpreted as                                        =
 null for string columns.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--input-null-non-string &lt;null-string&gt;</co=
de>
    </td><td style=3D"" align=3D"left">
    The string to be interpreted as                                        =
 null for non string columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>In t=
he case of Netezza direct mode connector, both the arguments must be
left to the default values or explicitly set to the same value.  Furthermor=
e
the null string value is restricted to 0-4 utf8 characters.</p><p>On export=
, for non-string columns, if the chosen null value is a valid
representation in the column domain, then the column might not be loaded as
null.  For example, if the null string value is specified as "1", then on
export, any occurrence of "1" in the input file will be loaded as value 1
instead of NULL for int columns.</p><p>It is suggested that the null value =
be specified as empty string for
performance and consistency.</p><div class=3D"table"><a name=3D"idp4699000"=
></a><p class=3D"title"><b>Table&nbsp;57.&nbsp;Supported import control arg=
uments:</b></p><div class=3D"table-contents"><table summary=3D"Supported im=
port control arguments:" style=3D"border-collapse: collapse;border-top: 0.5=
pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><co=
l align=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0.5pt sol=
id ; border-bottom: 0.5pt solid ; " align=3D"left">
    Argument
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--null-string &lt;null-string&gt;</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The string to be interpreted as                                        =
 null for string columns.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">--null-non-string &lt;null-string&gt;</code>
    </td><td style=3D"" align=3D"left">
    The string to be interpreted as                                        =
 null for non string columns.
    </td></tr></tbody></table></div></div><br class=3D"table-break"><p>In t=
he case of Netezza direct mode connector, both the arguments must be
left to the default values or explicitly set to the same value.  Furthermor=
e
the null string value is restricted to 0-4 utf8 characters.</p><p>On import=
, for non-string columns, the chosen null value in current
implementations the null value representation is ignored for non character
columns.  For example, if the null string value is specified as "\N", then =
on
import, any occurrence of NULL for non-char columns in the table will be
imported as an empty string instead of <span class=3D"emphasis"><em>\N</em>=
</span>, the chosen null string
representation.</p><p>It is suggested that the null value be specified as e=
mpty string for
performance and consistency.</p></div></div><div class=3D"section" title=3D=
"25.8.&nbsp;Data Connector for Oracle and Hadoop"><div class=3D"titlepage">=
<div><div><h3 class=3D"title"><a name=3D"_data_connector_for_oracle_and_had=
oop"></a>25.8.&nbsp;Data Connector for Oracle and Hadoop</h3></div></div></=
div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_about">25.8.1. About</a></s=
pan></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apach=
e.org/docs/1.4.6/SqoopUserGuide.html#_jobs">25.8.1.1. Jobs</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_how_the_standard_oracle_manager_works_for_imports">25.8=
.1.2. How The Standard Oracle Manager Works for Imports</a></span></dt><dt>=
<span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoo=
pUserGuide.html#_how_the_data_connector_for_oracle_and_hadoop_works_for_imp=
orts">25.8.1.3. How The Data Connector for Oracle and Hadoop Works for Impo=
rts</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_data_connector_for_oracle_and_hadoo=
p_exports">25.8.1.4. Data Connector for Oracle and Hadoop Exports</a></span=
></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://sqoop.apache=
.org/docs/1.4.6/SqoopUserGuide.html#_requirements_4">25.8.2. Requirements</=
a></span></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.=
apache.org/docs/1.4.6/SqoopUserGuide.html#_ensure_the_oracle_database_jdbc_=
driver_is_setup_correctly">25.8.2.1. Ensure The Oracle Database JDBC Driver=
 Is Setup Correctly</a></span></dt><dt><span class=3D"section"><a href=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oracle_roles_and_pr=
ivileges">25.8.2.2. Oracle Roles and Privileges</a></span></dt><dt><span cl=
ass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGui=
de.html#_additional_oracle_roles_and_privileges_required_for_export">25.8.2=
.3. Additional Oracle Roles And Privileges Required for Export</a></span></=
dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4=
.6/SqoopUserGuide.html#_supported_data_types">25.8.2.4. Supported Data Type=
s</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_execute_sqoop_with_data_con=
nector_for_oracle_and_hadoop">25.8.3. Execute Sqoop With Data Connector for=
 Oracle and Hadoop</a></span></dt><dd><dl><dt><span class=3D"section"><a hr=
ef=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_connect_to_o=
racle_oracle_rac">25.8.3.1. Connect to Oracle / Oracle RAC</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_connect_to_an_oracle_database_instance">25.8.3.2. Conne=
ct to An Oracle Database Instance</a></span></dt><dt><span class=3D"section=
"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_conne=
ct_to_an_oracle_rac">25.8.3.3. Connect to An Oracle RAC</a></span></dt><dt>=
<span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoo=
pUserGuide.html#_login_to_the_oracle_instance">25.8.3.4. Login to The Oracl=
e Instance</a></span></dt><dt><span class=3D"section"><a href=3D"https://sq=
oop.apache.org/docs/1.4.6/SqoopUserGuide.html#_kill_data_connector_for_orac=
le_and_hadoop_jobs">25.8.3.5. Kill Data Connector for Oracle and Hadoop Job=
s</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_import_data_from_oracle">25=
.8.4. Import Data from Oracle</a></span></dt><dd><dl><dt><span class=3D"sec=
tion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_m=
atch_hadoop_files_to_oracle_table_partitions">25.8.4.1. Match Hadoop Files =
to Oracle Table Partitions</a></span></dt><dt><span class=3D"section"><a hr=
ef=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_specify_the_=
partitions_to_import">25.8.4.2. Specify The Partitions To Import</a></span>=
</dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1=
.4.6/SqoopUserGuide.html#_consistent_read_all_mappers_read_from_the_same_po=
int_in_time">25.8.4.3. Consistent Read: All Mappers Read From The Same Poin=
t In Time</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"h=
ttps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_export_data_into_or=
acle">25.8.5. Export Data into Oracle</a></span></dt><dd><dl><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_insert_export">25.8.5.1. Insert-Export</a></span></dt><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_update_export">25.8.5.2. Update-Export</a></span></dt><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_merge_export">25.8.5.3. Merge-Export</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_create_oracle_tables">25.8.5.4. Create Oracle Tables</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_nologging">25.8.5.5. NOLOGGING</a></span></dt><dt><span=
 class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUser=
Guide.html#_partitioning">25.8.5.6. Partitioning</a></span></dt><dt><span c=
lass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGu=
ide.html#_match_rows_via_multiple_columns">25.8.5.7. Match Rows Via Multipl=
e Columns</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqo=
op.apache.org/docs/1.4.6/SqoopUserGuide.html#_storage_clauses">25.8.5.8. St=
orage Clauses</a></span></dt></dl></dd><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_manage_date_an=
d_timestamp_data_types">25.8.6. Manage Date And Timestamp Data Types</a></s=
pan></dt><dd><dl><dt><span class=3D"section"><a href=3D"https://sqoop.apach=
e.org/docs/1.4.6/SqoopUserGuide.html#_import_date_and_timestamp_data_types_=
from_oracle">25.8.6.1. Import Date And Timestamp Data Types from Oracle</a>=
</span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org=
/docs/1.4.6/SqoopUserGuide.html#_the_data_connector_for_oracle_and_hadoop_d=
oes_not_apply_a_time_zone_to_date_timestamp_data_types">25.8.6.2. The Data =
Connector for Oracle and Hadoop Does Not Apply A Time Zone to DATE / TIMEST=
AMP Data Types</a></span></dt><dt><span class=3D"section"><a href=3D"https:=
//sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_the_data_connector_for_o=
racle_and_hadoop_retains_time_zone_information_in_timezone_data_types">25.8=
.6.3. The Data Connector for Oracle and Hadoop Retains Time Zone Informatio=
n in TIMEZONE Data Types</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_data_connector=
_for_oracle_and_hadoop_explicitly_states_time_zone_for_local_timezone_data_=
types">25.8.6.4. Data Connector for Oracle and Hadoop Explicitly States Tim=
e Zone for LOCAL TIMEZONE Data Types</a></span></dt><dt><span class=3D"sect=
ion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_ja=
va_sql_timestamp">25.8.6.5. java.sql.Timestamp</a></span></dt><dt><span cla=
ss=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuid=
e.html#_export_date_and_timestamp_data_types_into_oracle">25.8.6.6. Export =
Date And Timestamp Data Types into Oracle</a></span></dt></dl></dd><dt><spa=
n class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUse=
rGuide.html#_configure_the_data_connector_for_oracle_and_hadoop">25.8.7. Co=
nfigure The Data Connector for Oracle and Hadoop</a></span></dt><dd><dl><dt=
><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqo=
opUserGuide.html#_oraoop_site_template_xml">25.8.7.1. oraoop-site-template.=
xml</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_oracle_session_initializatio=
n_statements">25.8.7.2. oraoop.oracle.session.initialization.statements</a>=
</span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org=
/docs/1.4.6/SqoopUserGuide.html#_oraoop_table_import_where_clause_location"=
>25.8.7.3. oraoop.table.import.where.clause.location</a></span></dt><dt><sp=
an class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUs=
erGuide.html#_oracle_row_fetch_size">25.8.7.4. oracle.row.fetch.size</a></s=
pan></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/do=
cs/1.4.6/SqoopUserGuide.html#_oraoop_import_hint">25.8.7.5. oraoop.import.h=
int</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apa=
che.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_oracle_append_values_hint_us=
age">25.8.7.6. oraoop.oracle.append.values.hint.usage</a></span></dt><dt><s=
pan class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopU=
serGuide.html#_mapred_map_tasks_speculative_execution">25.8.7.7. mapred.map=
.tasks.speculative.execution</a></span></dt><dt><span class=3D"section"><a =
href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_blo=
ck_allocation">25.8.7.8. oraoop.block.allocation</a></span></dt><dt><span c=
lass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGu=
ide.html#_oraoop_import_omit_lobs_and_long">25.8.7.9. oraoop.import.omit.lo=
bs.and.long</a></span></dt><dt><span class=3D"section"><a href=3D"https://s=
qoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_locations">25.8.7.10=
. oraoop.locations</a></span></dt><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_sqoop_connection_fac=
tories">25.8.7.11. sqoop.connection.factories</a></span></dt><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_expressions_in_oraoop_site_xml">25.8.7.12. Expressions in oraoop-sit=
e.xml</a></span></dt></dl></dd><dt><span class=3D"section"><a href=3D"https=
://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_troubleshooting_the_dat=
a_connector_for_oracle_and_hadoop">25.8.8. Troubleshooting The Data Connect=
or for Oracle and Hadoop</a></span></dt><dd><dl><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_quote_=
oracle_owners_and_tables">25.8.8.1. Quote Oracle Owners And Tables</a></spa=
n></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs=
/1.4.6/SqoopUserGuide.html#_quote_oracle_columns">25.8.8.2. Quote Oracle Co=
lumns</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_confirm_the_data_connector_for_or=
acle_and_hadoop_can_initialize_the_oracle_session">25.8.8.3. Confirm The Da=
ta Connector for Oracle and Hadoop Can Initialize The Oracle Session</a></s=
pan></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/do=
cs/1.4.6/SqoopUserGuide.html#_check_the_sqoop_debug_logs_for_error_messages=
">25.8.8.4. Check The Sqoop Debug Logs for Error Messages</a></span></dt><d=
t><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sq=
oopUserGuide.html#_export_check_tables_are_compatible">25.8.8.5. Export: Ch=
eck Tables Are Compatible</a></span></dt><dt><span class=3D"section"><a hre=
f=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_export_parall=
elization">25.8.8.6. Export: Parallelization</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_export_check_oraoop_oracle_append_values_hint_usage">25.8.8.7. Export=
: Check oraoop.oracle.append.values.hint.usage</a></span></dt><dt><span cla=
ss=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuid=
e.html#_turn_on_verbose">25.8.8.8. Turn On Verbose</a></span></dt></dl></dd=
></dl></div><div class=3D"section" title=3D"25.8.1.&nbsp;About"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_about"></a>25.8.1.=
&nbsp;About</h4></div></div></div><div class=3D"toc"><dl><dt><span class=3D=
"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.htm=
l#_jobs">25.8.1.1. Jobs</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_how_the_standa=
rd_oracle_manager_works_for_imports">25.8.1.2. How The Standard Oracle Mana=
ger Works for Imports</a></span></dt><dt><span class=3D"section"><a href=3D=
"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_how_the_data_conn=
ector_for_oracle_and_hadoop_works_for_imports">25.8.1.3. How The Data Conne=
ctor for Oracle and Hadoop Works for Imports</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_data_connector_for_oracle_and_hadoop_exports">25.8.1.4. Data Connecto=
r for Oracle and Hadoop Exports</a></span></dt></dl></div><p>The Data Conne=
ctor for Oracle and Hadoop is now included in Sqoop.</p><p>It can be enable=
d by specifying the <code class=3D"literal">--direct</code> argument for yo=
ur import or
export job.</p><div class=3D"section" title=3D"25.8.1.1.&nbsp;Jobs"><div cl=
ass=3D"titlepage"><div><div><h5 class=3D"title"><a name=3D"_jobs"></a>25.8.=
1.1.&nbsp;Jobs</h5></div></div></div><p>The Data Connector for Oracle and H=
adoop inspects each Sqoop job and assumes
responsibility for the ones it can perform better than the Oracle manager b=
uilt
into Sqoop.</p><p>Data Connector for Oracle and Hadoop accepts responsibili=
ty for the following
Sqoop Job types:</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" =
type=3D"disc"><li class=3D"listitem">
<span class=3D"strong"><strong>Import</strong></span> jobs that are <span c=
lass=3D"strong"><strong>Non-Incremental</strong></span>.
</li><li class=3D"listitem">
<span class=3D"strong"><strong>Export</strong></span> jobs
</li><li class=3D"listitem">
Data Connector for Oracle and Hadoop does not accept responsibility for oth=
er
Sqoop job types. For example Data Connector for Oracle and Hadoop does not
accept <span class=3D"strong"><strong>eval</strong></span> jobs etc.
</li></ul></div><p>Data Connector for Oracle and Hadoop accepts responsibil=
ity for those Sqoop Jobs
with the following attributes:</p><div class=3D"itemizedlist"><ul class=3D"=
itemizedlist" type=3D"disc"><li class=3D"listitem">
Oracle-related
</li><li class=3D"listitem"><p class=3D"simpara">
Table-Based - Jobs where the table argument is used and the specified objec=
t
is a table.
</p><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin-=
right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=
=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=
=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"=
left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>Data Connector=
 for Oracle and Hadoop does not process index-organized
tables unless the table is partitioned and <code class=3D"literal">oraoop.c=
hunk.method</code> is set
to <code class=3D"literal">PARTITION</code></p></td></tr></tbody></table></=
div></li><li class=3D"listitem">
There are at least 2 mappers =97 Jobs where the Sqoop command-line does not
include: <code class=3D"literal">--num-mappers 1</code>
</li></ul></div></div><div class=3D"section" title=3D"25.8.1.2.&nbsp;How Th=
e Standard Oracle Manager Works for Imports"><div class=3D"titlepage"><div>=
<div><h5 class=3D"title"><a name=3D"_how_the_standard_oracle_manager_works_=
for_imports"></a>25.8.1.2.&nbsp;How The Standard Oracle Manager Works for I=
mports</h5></div></div></div><p>The Oracle manager built into Sqoop uses a =
range-based query for each mapper.
Each mapper executes a query of the form:</p><pre class=3D"screen">SELECT *=
 FROM sometable WHERE id &gt;=3D lo AND id &lt; hi</pre><p>The <span class=
=3D"strong"><strong>lo</strong></span> and <span class=3D"strong"><strong>h=
i</strong></span> values are based on the number of mappers and the minimum=
 and
maximum values of the data in the column the table is being split by.</p><p=
>If no suitable index exists on the table then these queries result in full
table-scans within Oracle. Even with a suitable index, multiple mappers may
fetch data stored within the same Oracle blocks, resulting in redundant IO
calls.</p></div><div class=3D"section" title=3D"25.8.1.3.&nbsp;How The Data=
 Connector for Oracle and Hadoop Works for Imports"><div class=3D"titlepage=
"><div><div><h5 class=3D"title"><a name=3D"_how_the_data_connector_for_orac=
le_and_hadoop_works_for_imports"></a>25.8.1.3.&nbsp;How The Data Connector =
for Oracle and Hadoop Works for Imports</h5></div></div></div><p>The Data C=
onnector for Oracle and Hadoop generates queries for the mappers of
the form:</p><pre class=3D"screen">SELECT *
  FROM sometable
 WHERE rowid &gt;=3D dbms_rowid.rowid_create(1, 893, 1, 279, 0) AND
       rowid &lt;=3D dbms_rowid.rowid_create(1, 893, 1, 286, 32767)</pre><p=
>The Data Connector for Oracle and Hadoop queries ensure that:</p><div clas=
s=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li class=3D"li=
stitem">
No two mappers read data from the same Oracle block. This minimizes
redundant IO.
</li><li class=3D"listitem">
The table does not require indexes.
</li><li class=3D"listitem">
The Sqoop command line does not need to specify a <code class=3D"literal">-=
-split-by</code> column.
</li></ul></div></div><div class=3D"section" title=3D"25.8.1.4.&nbsp;Data C=
onnector for Oracle and Hadoop Exports"><div class=3D"titlepage"><div><div>=
<h5 class=3D"title"><a name=3D"_data_connector_for_oracle_and_hadoop_export=
s"></a>25.8.1.4.&nbsp;Data Connector for Oracle and Hadoop Exports</h5></di=
v></div></div><p>Benefits of the Data Connector for Oracle and Hadoop:</p><=
div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li cla=
ss=3D"listitem">
<span class=3D"strong"><strong>Merge-Export facility</strong></span> - Upda=
te Oracle tables by modifying changed rows AND
inserting rows from the HDFS file that did not previously exist in the Orac=
le
table. The Connector for Oracle and Hadoop=92s Merge-Export is unique - the=
re is
no Sqoop equivalent.
</li><li class=3D"listitem">
<span class=3D"strong"><strong>Lower impact on the Oracle database</strong>=
</span> - Update the rows in the Oracle table
that have changed, not all rows in the Oracle table. This has performance
benefits and reduces the impact of the query on Oracle (for example, the Or=
acle
redo logs).
</li><li class=3D"listitem">
<span class=3D"strong"><strong>Improved performance</strong></span> - With =
partitioned tables, mappers utilize temporary
Oracle tables which allow parallel inserts and direct path writes.
</li></ul></div></div></div><div class=3D"section" title=3D"25.8.2.&nbsp;Re=
quirements"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=
=3D"_requirements_4"></a>25.8.2.&nbsp;Requirements</h4></div></div></div><d=
iv class=3D"toc"><dl><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_ensure_the_oracle_database_jdbc_d=
river_is_setup_correctly">25.8.2.1. Ensure The Oracle Database JDBC Driver =
Is Setup Correctly</a></span></dt><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oracle_roles_and_pri=
vileges">25.8.2.2. Oracle Roles and Privileges</a></span></dt><dt><span cla=
ss=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuid=
e.html#_additional_oracle_roles_and_privileges_required_for_export">25.8.2.=
3. Additional Oracle Roles And Privileges Required for Export</a></span></d=
t><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.=
6/SqoopUserGuide.html#_supported_data_types">25.8.2.4. Supported Data Types=
</a></span></dt></dl></div><div class=3D"section" title=3D"25.8.2.1.&nbsp;E=
nsure The Oracle Database JDBC Driver Is Setup Correctly"><div class=3D"tit=
lepage"><div><div><h5 class=3D"title"><a name=3D"_ensure_the_oracle_databas=
e_jdbc_driver_is_setup_correctly"></a>25.8.2.1.&nbsp;Ensure The Oracle Data=
base JDBC Driver Is Setup Correctly</h5></div></div></div><p>You may want t=
o ensure the Oracle Database 11g Release 2 JDBC driver is setup
correctly on your system. This driver is required for Sqoop to work with Or=
acle.</p><p>The Oracle Database 11g Release 2 JDBC driver file is <code cla=
ss=3D"literal">ojdbc6.jar</code> (3.2Mb).</p><p>If this file is not on your=
 system then download it from:
<a class=3D"ulink" href=3D"http://www.oracle.com/technetwork/database/featu=
res/jdbc/index-091264.html" target=3D"_top">http://www.oracle.com/technetwo=
rk/database/features/jdbc/index-091264.html</a></p><p>This file should be p=
ut into the <code class=3D"literal">$SQOOP_HOME/lib</code> directory.</p></=
div><div class=3D"section" title=3D"25.8.2.2.&nbsp;Oracle Roles and Privile=
ges"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a name=3D"_ora=
cle_roles_and_privileges"></a>25.8.2.2.&nbsp;Oracle Roles and Privileges</h=
5></div></div></div><p>The Oracle user for The Data Connector for Oracle an=
d Hadoop requires the
following roles and privileges:</p><div class=3D"itemizedlist"><ul class=3D=
"itemizedlist" type=3D"disc"><li class=3D"listitem">
<code class=3D"literal">create session</code>
</li></ul></div><p>In addition, the user must have the select any dictionar=
y privilege or
select_catalog_role role or all of the following object privileges:</p><div=
 class=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li class=
=3D"listitem">
<code class=3D"literal">select on v_$instance</code>
</li><li class=3D"listitem">
<code class=3D"literal">select on dba_tables</code>
</li><li class=3D"listitem">
<code class=3D"literal">select on dba_tab_columns</code>
</li><li class=3D"listitem">
<code class=3D"literal">select on dba_objects</code>
</li><li class=3D"listitem">
<code class=3D"literal">select on dba_extents</code>
</li><li class=3D"listitem">
<code class=3D"literal">select on dba_segments</code> =97 Required for Sqoo=
p imports only
</li><li class=3D"listitem">
<code class=3D"literal">select on dba_constraints</code> =97 Required for S=
qoop imports only
</li><li class=3D"listitem">
<code class=3D"literal">select on v_$database</code> =97 Required for Sqoop=
 imports only
</li><li class=3D"listitem">
<code class=3D"literal">select on v_$parameter</code> =97 Required for Sqoo=
p imports only
</li></ul></div><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.=
5in; margin-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr>=
<td rowspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"=
[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><t=
h align=3D"left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>The=
 user also requires the alter session privilege to make use of session
tracing functionality. See "oraoop.oracle.session.initialization.statements=
"
for more information.</p></td></tr></tbody></table></div></div><div class=
=3D"section" title=3D"25.8.2.3.&nbsp;Additional Oracle Roles And Privileges=
 Required for Export"><div class=3D"titlepage"><div><div><h5 class=3D"title=
"><a name=3D"_additional_oracle_roles_and_privileges_required_for_export"><=
/a>25.8.2.3.&nbsp;Additional Oracle Roles And Privileges Required for Expor=
t</h5></div></div></div><p>The Oracle user for Data Connector for Oracle an=
d Hadoop requires:</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist=
" type=3D"disc"><li class=3D"listitem"><p class=3D"simpara">
Quota on the tablespace in which the Oracle export tables are located.
</p><p class=3D"simpara">An example Oracle command to achieve this is</p><p=
re class=3D"screen">alter user username quota unlimited on tablespace</pre>=
</li><li class=3D"listitem"><p class=3D"simpara">
The following privileges:
</p><div class=3D"informaltable"><table style=3D"border-collapse: collapse;=
border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col ali=
gn=3D"left"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-r=
ight: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Type of Export
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Privileges Required
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    All Export
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">create table</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">select on dba_tab_partitions</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">select on dba_tab_subpartitions</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">select on dba_indexes</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">select on dba_ind_columns</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    Insert-Export with a template table into another schema
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">select any table</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">create any table</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">insert any table</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">alter any table</code> (partitioning)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    Insert-Export without a template table into another schema
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">select,insert on table</code> (no partitioning)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">select,alter on table</code> (partitioning)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    Update-Export into another schema
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">select,update on table</code> (no partitioning)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">select,delete,alter,insert on table</code> (par=
titioning)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    Merge-Export into another schema
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">select,insert,update on table</code> (no partit=
ioning)
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    </td><td style=3D"" align=3D"left">
    <code class=3D"literal">select,insert,delete,alter on table</code> (par=
titioning)
    </td></tr></tbody></table></div></li></ul></div></div><div class=3D"sec=
tion" title=3D"25.8.2.4.&nbsp;Supported Data Types"><div class=3D"titlepage=
"><div><div><h5 class=3D"title"><a name=3D"_supported_data_types"></a>25.8.=
2.4.&nbsp;Supported Data Types</h5></div></div></div><p>The following Oracl=
e data types are supported by the Data Connector for
Oracle and Hadoop:</p><div class=3D"informaltable"><table style=3D"border-c=
ollapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; ">=
<colgroup><col align=3D"left"><col align=3D"left"></colgroup><tbody><tr><td=
 style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=
=3D"left">
    BINARY_DOUBLE
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    NCLOB
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    BINARY_FLOAT
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    NUMBER
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    BLOB
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    NVARCHAR2
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    CHAR
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    RAW
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    CLOB
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    ROWID
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    DATE
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    TIMESTAMP
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    FLOAT
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    TIMESTAMP WITH TIME ZONE
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    INTERVAL DAY TO SECOND
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    TIMESTAMP WITH LOCAL TIME ZONE
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    INTERVAL YEAR TO MONTH
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    URITYPE
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    LONG
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    VARCHAR2
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    NCHAR
    </td><td style=3D"" align=3D"left">
    </td></tr></tbody></table></div><p>All other Oracle column types are NO=
T supported. Example Oracle column types NOT
supported by Data Connector for Oracle and Hadoop include:</p><div class=3D=
"informaltable"><table style=3D"border-collapse: collapse;border-top: 0.5pt=
 solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><col =
align=3D"left"></colgroup><tbody><tr><td style=3D"border-right: 0.5pt solid=
 ; border-bottom: 0.5pt solid ; " align=3D"left">
    All of the ANY types
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    BFILE
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    All of the MEDIA types
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    LONG RAW
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    All of the SPATIAL types
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    MLSLABEL
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    Any type referred to as UNDEFINED
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    UROWID
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    All custom (user-defined) URI types
    </td><td style=3D"" align=3D"left">
    XMLTYPE
    </td></tr></tbody></table></div><div class=3D"note" title=3D"Note" styl=
e=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"0" summary=
=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top" widt=
h=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/ima=
ges/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=3D"left" =
valign=3D"top"><p>Data types RAW, LONG and LOB (BLOB, CLOB and NCLOB) are s=
upported for
Data Connector for Oracle and Hadoop imports. They are not supported for Da=
ta
Connector for Oracle and Hadoop exports.</p></td></tr></tbody></table></div=
></div></div><div class=3D"section" title=3D"25.8.3.&nbsp;Execute Sqoop Wit=
h Data Connector for Oracle and Hadoop"><div class=3D"titlepage"><div><div>=
<h4 class=3D"title"><a name=3D"_execute_sqoop_with_data_connector_for_oracl=
e_and_hadoop"></a>25.8.3.&nbsp;Execute Sqoop With Data Connector for Oracle=
 and Hadoop</h4></div></div></div><div class=3D"toc"><dl><dt><span class=3D=
"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.htm=
l#_connect_to_oracle_oracle_rac">25.8.3.1. Connect to Oracle / Oracle RAC</=
a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.o=
rg/docs/1.4.6/SqoopUserGuide.html#_connect_to_an_oracle_database_instance">=
25.8.3.2. Connect to An Oracle Database Instance</a></span></dt><dt><span c=
lass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGu=
ide.html#_connect_to_an_oracle_rac">25.8.3.3. Connect to An Oracle RAC</a><=
/span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/=
docs/1.4.6/SqoopUserGuide.html#_login_to_the_oracle_instance">25.8.3.4. Log=
in to The Oracle Instance</a></span></dt><dt><span class=3D"section"><a hre=
f=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_kill_data_con=
nector_for_oracle_and_hadoop_jobs">25.8.3.5. Kill Data Connector for Oracle=
 and Hadoop Jobs</a></span></dt></dl></div><div class=3D"section" title=3D"=
25.8.3.1.&nbsp;Connect to Oracle / Oracle RAC"><div class=3D"titlepage"><di=
v><div><h5 class=3D"title"><a name=3D"_connect_to_oracle_oracle_rac"></a>25=
.8.3.1.&nbsp;Connect to Oracle / Oracle RAC</h5></div></div></div><p>The Sq=
oop <code class=3D"literal">--connect</code> parameter defines the Oracle i=
nstance or Oracle RAC to
connect to. It is required with all Sqoop import and export commands.</p><p=
>Data Connector for Oracle and Hadoop expects the associated connection str=
ing
to be of a specific format dependent on whether the Oracle SID, Service
or TNS name is defined.  The TNS name based URL scheme can be used to enabl=
e
authentication using Oracle wallets.</p><p><code class=3D"literal">--connec=
t jdbc:oracle:thin:@OracleServer:OraclePort:OracleSID</code></p><p><code cl=
ass=3D"literal">--connect jdbc:oracle:thin:@//OracleServer:OraclePort/Oracl=
eService</code></p><p><code class=3D"literal">--connect jdbc:oracle:thin:@T=
NSName</code></p></div><div class=3D"section" title=3D"25.8.3.2.&nbsp;Conne=
ct to An Oracle Database Instance"><div class=3D"titlepage"><div><div><h5 c=
lass=3D"title"><a name=3D"_connect_to_an_oracle_database_instance"></a>25.8=
.3.2.&nbsp;Connect to An Oracle Database Instance</h5></div></div></div><di=
v class=3D"informaltable"><table style=3D"border-collapse: collapse;border-=
top: 0.5pt solid ; border-bottom: 0.5pt solid ; "><colgroup><col align=3D"l=
eft"><col align=3D"left"></colgroup><thead><tr><th style=3D"border-right: 0=
.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left">
    Parameter / Component
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">jdbc:oracle:thin</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The Data Connector for Oracle and                                      =
        Hadoop requires the connection string                              =
                starts with jdbc:oracle.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The Data Connector for Oracle and                                      =
        Hadoop has been tested with the thin                               =
               driver however it should work equally                       =
                       well with other drivers such as OCI.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">OracleServer</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The host name of the Oracle server.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">OraclePort</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The port to connect to the Oracle server.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">OracleSID</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The Oracle instance.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">OracleService</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The Oracle Service.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">TNSName</code>
    </td><td style=3D"" align=3D"left">
    The TNS name for the entry describing                                  =
            the connection to the Oracle server.
    </td></tr></tbody></table></div><div class=3D"note" title=3D"Note" styl=
e=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"0" summary=
=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top" widt=
h=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/ima=
ges/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=3D"left" =
valign=3D"top"><p>The Hadoop mappers connect to the Oracle database using a=
 dynamically
generated JDBC URL. This is designed to improve performance however it can =
be
disabled by specifying:</p><p><code class=3D"literal">-D oraoop.jdbc.url.ve=
rbatim=3Dtrue</code></p></td></tr></tbody></table></div></div><div class=3D=
"section" title=3D"25.8.3.3.&nbsp;Connect to An Oracle RAC"><div class=3D"t=
itlepage"><div><div><h5 class=3D"title"><a name=3D"_connect_to_an_oracle_ra=
c"></a>25.8.3.3.&nbsp;Connect to An Oracle RAC</h5></div></div></div><p>Use=
 the <code class=3D"literal">--connect</code> parameter as above. The conne=
ction string should point to
one instance of the Oracle RAC. The listener of the host of this Oracle
instance will locate the other instances of the Oracle RAC.</p><div class=
=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"=
><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D=
"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqo=
op.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th>=
</tr><tr><td align=3D"left" valign=3D"top"><p>To improve performance, The D=
ata Connector for Oracle and Hadoop
identifies the active instances of the Oracle RAC and connects each Hadoop
mapper to them in a roundrobin manner.</p></td></tr></tbody></table></div><=
p>If services are defined for this Oracle RAC then use the following parame=
ter
to specify the service name:</p><p><code class=3D"literal">-D oraoop.oracle=
.rac.service.name=3DServiceName</code></p><div class=3D"informaltable"><tab=
le style=3D"border-collapse: collapse;border-top: 0.5pt solid ; border-bott=
om: 0.5pt solid ; "><colgroup><col align=3D"left"><col align=3D"left"></col=
group><thead><tr><th style=3D"border-right: 0.5pt solid ; border-bottom: 0.=
5pt solid ; " align=3D"left">
    Parameter / Component
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">OracleServer:OraclePort:OracleInstance</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Name one instance of the Oracle RAC.                                   =
                                   The Data Connector for Oracle and       =
                                                               Hadoop assum=
es the same port number for                                                =
                      all instances of the Oracle RAC.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The listener of the host of this Oracle                                =
                                      instance is used to locate other     =
                                                                 instances =
of the Oracle RAC. For more                                                =
                      information enter this command on the                =
                                                      host command line:
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">lsnrctl status</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    <code class=3D"literal">-D oraoop.oracle.rac.service.name=3DServiceName=
</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The service to connect to in the Oracle RAC.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    A connection is made to all instances                                  =
                                    of the Oracle RAC associated with the  =
                                                                    service=
 given by <code class=3D"literal">ServiceName</code>.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    If omitted, a connection is made to all                                =
                                      instances of the Oracle RAC.
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The listener of the host of this Oracle                                =
                                      instance needs to know the <code clas=
s=3D"literal">ServiceName</code>                                           =
                           and all instances of the Oracle RAC. For        =
                                                              more informat=
ion enter this command on                                                  =
                    the host command line:
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    </td><td style=3D"" align=3D"left">
    <code class=3D"literal">lsnrctl status</code>
    </td></tr></tbody></table></div></div><div class=3D"section" title=3D"2=
5.8.3.4.&nbsp;Login to The Oracle Instance"><div class=3D"titlepage"><div><=
div><h5 class=3D"title"><a name=3D"_login_to_the_oracle_instance"></a>25.8.=
3.4.&nbsp;Login to The Oracle Instance</h5></div></div></div><p>Login to th=
e Oracle instance on the Sqoop command line:</p><p><code class=3D"literal">=
--connect jdbc:oracle:thin:@OracleServer:OraclePort:OracleInstance --userna=
me
UserName -P</code></p><div class=3D"informaltable"><table style=3D"border-c=
ollapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid ; ">=
<colgroup><col align=3D"left"><col align=3D"left"></colgroup><thead><tr><th=
 style=3D"border-right: 0.5pt solid ; border-bottom: 0.5pt solid ; " align=
=3D"left">
    Parameter / Component
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Description
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">--username UserName</code>
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    The username to login to the Oracle                                    =
     instance (SID).
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    <code class=3D"literal">-P</code>
    </td><td style=3D"" align=3D"left">
    You will be prompted for the password                                  =
       to login to the Oracle instance.
    </td></tr></tbody></table></div></div><div class=3D"section" title=3D"2=
5.8.3.5.&nbsp;Kill Data Connector for Oracle and Hadoop Jobs"><div class=3D=
"titlepage"><div><div><h5 class=3D"title"><a name=3D"_kill_data_connector_f=
or_oracle_and_hadoop_jobs"></a>25.8.3.5.&nbsp;Kill Data Connector for Oracl=
e and Hadoop Jobs</h5></div></div></div><p>Use the Hadoop Job Tracker to ki=
ll the Sqoop job, just as you would kill any
other Map-Reduce job.</p><p>$ <code class=3D"literal">hadoop job -kill jobi=
d</code></p><p>To allow an Oracle DBA to kill a Data Connector for Oracle a=
nd Hadoop
job (via killing the sessions in Oracle) you need to prevent Map-Reduce fro=
m
re-attempting failed jobs. This is done via the following Sqoop
command-line switch:</p><p><code class=3D"literal">-D mapred.map.max.attemp=
ts=3D1</code></p><p>This sends instructions similar to the following to the=
 console:</p><pre class=3D"screen">14/07/07 15:24:51 INFO oracle.OraOopMana=
gerFactory:
Note: This Data Connector for Oracle and Hadoop job can be killed via Oracl=
e
by executing the following statement:
  begin
    for row in (select sid,serial# from v$session where
                module=3D'Data Connector for Oracle and Hadoop' and
                action=3D'import 20140707152451EST') loop
      execute immediate 'alter system kill session ''' || row.sid ||
                        ',' || row.serial# || '''';
    end loop;
  end;</pre></div></div><div class=3D"section" title=3D"25.8.4.&nbsp;Import=
 Data from Oracle"><div class=3D"titlepage"><div><div><h4 class=3D"title"><=
a name=3D"_import_data_from_oracle"></a>25.8.4.&nbsp;Import Data from Oracl=
e</h4></div></div></div><div class=3D"toc"><dl><dt><span class=3D"section">=
<a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_match_h=
adoop_files_to_oracle_table_partitions">25.8.4.1. Match Hadoop Files to Ora=
cle Table Partitions</a></span></dt><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_specify_the_partit=
ions_to_import">25.8.4.2. Specify The Partitions To Import</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_consistent_read_all_mappers_read_from_the_same_point_in=
_time">25.8.4.3. Consistent Read: All Mappers Read From The Same Point In T=
ime</a></span></dt></dl></div><p>Execute Sqoop. Following is an example com=
mand:</p><p>$ <code class=3D"literal">sqoop import --direct --connect =85 -=
-table OracleTableName</code></p><p>If The Data Connector for Oracle and Ha=
doop accepts the job then the following
text is output:</p><pre class=3D"screen">**********************************=
****************
*** Using Data Connector for Oracle and Hadoop ***
**************************************************</pre><div class=3D"note"=
 title=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table b=
order=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" =
valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache=
.org/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr><tr>=
<td align=3D"left" valign=3D"top"><div class=3D"itemizedlist"><ul class=3D"=
itemizedlist" type=3D"disc"><li class=3D"listitem">
More information is available on the <code class=3D"literal">--connect</cod=
e> parameter. See "Connect to
Oracle / Oracle RAC" for more information.
</li><li class=3D"listitem"><p class=3D"simpara">
If Java runs out of memory the workaround is to specify each mapper=92s
JVM memory allocation. Add the following parameter for example to allocate =
4GB:
</p><p class=3D"simpara"><code class=3D"literal">-Dmapred.child.java.opts=
=3D-Xmx4000M</code></p></li><li class=3D"listitem"><p class=3D"simpara">
An Oracle optimizer hint is included in the SELECT statement by default.
See "oraoop.import.hint" for more information.
</p><p class=3D"simpara">You can alter the hint on the command line as foll=
ows:</p><p class=3D"simpara"><code class=3D"literal">-Doraoop.import.hint=
=3D"NO_INDEX(t)"</code></p><p class=3D"simpara">You can turn off the hint o=
n the command line as follows (notice the space
between the double quotes):</p><p class=3D"simpara"><code class=3D"literal"=
>-Doraoop.import.hint=3D" "</code></p></li></ul></div></td></tr></tbody></t=
able></div><div class=3D"section" title=3D"25.8.4.1.&nbsp;Match Hadoop File=
s to Oracle Table Partitions"><div class=3D"titlepage"><div><div><h5 class=
=3D"title"><a name=3D"_match_hadoop_files_to_oracle_table_partitions"></a>2=
5.8.4.1.&nbsp;Match Hadoop Files to Oracle Table Partitions</h5></div></div=
></div><p><code class=3D"literal">-Doraoop.chunk.method=3D{ROWID|PARTITION}=
</code></p><p>To import data from a partitioned table in such a way that th=
e resulting HDFS
folder structure in Hadoop will match the table=92s partitions, set the chu=
nk
method to PARTITION. The alternative (default) chunk method is ROWID.</p><d=
iv class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin-right:=
 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" =
align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"htt=
ps://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"left">N=
ote</th></tr><tr><td align=3D"left" valign=3D"top"><div class=3D"itemizedli=
st"><ul class=3D"itemizedlist" type=3D"disc"><li class=3D"listitem">
For the number of Hadoop files to match the number of Oracle partitions,
set the number of mappers to be greater than or equal to the number of
partitions.
</li><li class=3D"listitem">
If the table is not partitioned then value PARTITION will lead to an error.
</li></ul></div></td></tr></tbody></table></div></div><div class=3D"section=
" title=3D"25.8.4.2.&nbsp;Specify The Partitions To Import"><div class=3D"t=
itlepage"><div><div><h5 class=3D"title"><a name=3D"_specify_the_partitions_=
to_import"></a>25.8.4.2.&nbsp;Specify The Partitions To Import</h5></div></=
div></div><p><code class=3D"literal">-Doraoop.import.partitions=3DPartition=
A,PartitionB --table OracleTableName</code></p><p>Imports <code class=3D"li=
teral">PartitionA</code> and <code class=3D"literal">PartitionB</code> of <=
code class=3D"literal">OracleTableName</code>.</p><div class=3D"note" title=
=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=
=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valig=
n=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/=
docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr><tr><td a=
lign=3D"left" valign=3D"top"><div class=3D"itemizedlist"><ul class=3D"itemi=
zedlist" type=3D"disc"><li class=3D"listitem"><p class=3D"simpara">
You can enclose an individual partition name in double quotes to retain the
letter case or if the name has special characters.
</p><p class=3D"simpara"><code class=3D"literal">-Doraoop.import.partitions=
=3D'"PartitionA",PartitionB' --table OracleTableName</code></p><p class=3D"=
simpara">If the partition name is not double quoted then its name will be a=
utomatically
converted to upper case, PARTITIONB for above.</p><p class=3D"simpara">When=
 using double quotes the entire list of partition names must be enclosed in
single quotes.</p><p class=3D"simpara">If the last partition name in the li=
st is double quoted then there must be a
comma at the end of the list.</p><p class=3D"simpara"><code class=3D"litera=
l">-Doraoop.import.partitions=3D'"PartitionA","PartitionB",' --table
OracleTableName</code></p></li><li class=3D"listitem">
Name each partition to be included. There is no facility to provide a range=
 of
partition names.
</li><li class=3D"listitem">
There is no facility to define sub partitions. The entire partition is
included/excluded as per the filter.
</li></ul></div></td></tr></tbody></table></div></div><div class=3D"section=
" title=3D"25.8.4.3.&nbsp;Consistent Read: All Mappers Read From The Same P=
oint In Time"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a nam=
e=3D"_consistent_read_all_mappers_read_from_the_same_point_in_time"></a>25.=
8.4.3.&nbsp;Consistent Read: All Mappers Read From The Same Point In Time</=
h5></div></div></div><p><code class=3D"literal">-Doraoop.import.consistent.=
read=3D{true|false}</code></p><p>When set to <code class=3D"literal">false<=
/code> (by default) each mapper runs a select query. This will
return potentially inconsistent data if there are a lot of DML operations o=
n
the table at the time of import.</p><p>Set to <code class=3D"literal">true<=
/code> to ensure all mappers read from the same point in time. The
System Change Number (SCN) is passed down to all mappers, which use the Ora=
cle
Flashback Query to query the table as at that SCN.</p><div class=3D"note" t=
itle=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table bor=
der=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" va=
lign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.o=
rg/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr><tr><t=
d align=3D"left" valign=3D"top"><div class=3D"itemizedlist"><ul class=3D"it=
emizedlist" type=3D"disc"><li class=3D"listitem">
Values <code class=3D"literal">true</code> | <code class=3D"literal">false<=
/code> are case sensitive.
</li><li class=3D"listitem"><p class=3D"simpara">
By default the SCN is taken from V$database. You can specify the SCN in the
following command
</p><p class=3D"simpara"><code class=3D"literal">-Doraoop.import.consistent=
.read.scn=3D12345</code></p></li></ul></div></td></tr></tbody></table></div=
></div></div><div class=3D"section" title=3D"25.8.5.&nbsp;Export Data into =
Oracle"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_=
export_data_into_oracle"></a>25.8.5.&nbsp;Export Data into Oracle</h4></div=
></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_insert_export">25.=
8.5.1. Insert-Export</a></span></dt><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_update_export">25.=
8.5.2. Update-Export</a></span></dt><dt><span class=3D"section"><a href=3D"=
https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_merge_export">25.8=
.5.3. Merge-Export</a></span></dt><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_create_oracle_tables=
">25.8.5.4. Create Oracle Tables</a></span></dt><dt><span class=3D"section"=
><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_nologg=
ing">25.8.5.5. NOLOGGING</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_partitioning">=
25.8.5.6. Partitioning</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_match_rows_via=
_multiple_columns">25.8.5.7. Match Rows Via Multiple Columns</a></span></dt=
><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6=
/SqoopUserGuide.html#_storage_clauses">25.8.5.8. Storage Clauses</a></span>=
</dt></dl></div><p>Execute Sqoop. Following is an example command:</p><p>$ =
<code class=3D"literal">sqoop export --direct --connect =85 --table OracleT=
ableName --export-dir
/user/username/tablename</code></p><p>The Data Connector for Oracle and Had=
oop accepts all jobs that export data to
Oracle. You can verify The Data Connector for Oracle and Hadoop is in use b=
y
checking the following text is output:</p><pre class=3D"screen">***********=
***************************************
*** Using Data Connector for Oracle and Hadoop ***
**************************************************</pre><div class=3D"note"=
 title=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table b=
order=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" =
valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache=
.org/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr><tr>=
<td align=3D"left" valign=3D"top"><div class=3D"itemizedlist"><ul class=3D"=
itemizedlist" type=3D"disc"><li class=3D"listitem">
<code class=3D"literal">OracleTableName</code> is the Oracle table the data=
 will export into.
</li><li class=3D"listitem">
<code class=3D"literal">OracleTableName</code> can be in a schema other tha=
n that for the connecting user.
Prefix the table name with the schema, for example <code class=3D"literal">=
SchemaName.OracleTableName</code>.
</li><li class=3D"listitem">
Hadoop tables are picked up from the <code class=3D"literal">/user/username=
/tablename</code> directory.
</li><li class=3D"listitem">
The export will fail if the Hadoop file contains any fields of a data type
not supported by The Data Connector for Oracle and Hadoop. See
"Supported Data Types" for more information.
</li><li class=3D"listitem">
The export will fail if the column definitions in the Hadoop table do not
exactly match the column definitions in the Oracle table.
</li><li class=3D"listitem">
The Data Connector for Oracle and Hadoop indicates if it finds temporary
tables that it created more than a day ago that still exist. Usually these
tables can be dropped. The only circumstance when these tables should not b=
e
dropped is when an The Data Connector for Oracle and Hadoop job has been
running for more than 24 hours and is still running.
</li><li class=3D"listitem">
More information is available on the <code class=3D"literal">--connect</cod=
e> parameter. See
"Connect to Oracle / Oracle RAC" for more information.
</li></ul></div></td></tr></tbody></table></div><div class=3D"section" titl=
e=3D"25.8.5.1.&nbsp;Insert-Export"><div class=3D"titlepage"><div><div><h5 c=
lass=3D"title"><a name=3D"_insert_export"></a>25.8.5.1.&nbsp;Insert-Export<=
/h5></div></div></div><p>Appends data to <code class=3D"literal">OracleTabl=
eName</code>. It does not modify existing data in
<code class=3D"literal">OracleTableName</code>.</p><p>Insert-Export is the =
default method, executed in the absence of the
<code class=3D"literal">--update-key parameter</code>. All rows in the HDFS=
 file in
<code class=3D"literal">/user/UserName/TableName</code> are inserted into <=
code class=3D"literal">OracleTableName</code>. No
change is made to pre-existing data in <code class=3D"literal">OracleTableN=
ame</code>.</p><p>$ <code class=3D"literal">sqoop export --direct --connect=
 =85 --table OracleTableName --export-dir
/user/username/tablename</code></p><div class=3D"note" title=3D"Note" style=
=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"0" summary=
=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top" widt=
h=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/ima=
ges/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=3D"left" =
valign=3D"top"><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=
=3D"disc"><li class=3D"listitem">
If <code class=3D"literal">OracleTableName</code> was previously created by=
 The Data Connector for Oracle
and Hadoop with partitions then this export will create a new partition for=
 the
data being inserted.
</li><li class=3D"listitem">
When creating <code class=3D"literal">OracleTableName</code> specify a temp=
late. See
"Create Oracle Tables" for more information.
</li></ul></div></td></tr></tbody></table></div></div><div class=3D"section=
" title=3D"25.8.5.2.&nbsp;Update-Export"><div class=3D"titlepage"><div><div=
><h5 class=3D"title"><a name=3D"_update_export"></a>25.8.5.2.&nbsp;Update-E=
xport</h5></div></div></div><p><code class=3D"literal">--update-key OBJECT<=
/code></p><p>Updates existing rows in <code class=3D"literal">OracleTableNa=
me</code>.</p><p>Rows in the HDFS file in <code class=3D"literal">/user/Use=
rName/TableName</code> are matched to rows in
<code class=3D"literal">OracleTableName</code> by the <code class=3D"litera=
l">OBJECT</code> column. Rows that match are copied from the
HDFS file to the Oracle table. No action is taken on rows that do not match=
.</p><p>$ <code class=3D"literal">sqoop export --direct --connect =85 --upd=
ate-key OBJECT --table
OracleTableName --export-dir /user/username/tablename</code></p><div class=
=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"=
><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D=
"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqo=
op.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th>=
</tr><tr><td align=3D"left" valign=3D"top"><div class=3D"itemizedlist"><ul =
class=3D"itemizedlist" type=3D"disc"><li class=3D"listitem">
If <code class=3D"literal">OracleTableName</code> was previously created by=
 The Data Connector for Oracle
and Hadoop with partitions then this export will create a new partition for=
 the
data being inserted. Updated rows will be moved to the new partition that w=
as
created for the export.
</li><li class=3D"listitem">
For performance reasons it is strongly recommended that where more than a f=
ew
rows are involved column <code class=3D"literal">OBJECT</code> be an index =
column of <code class=3D"literal">OracleTableName</code>.
</li><li class=3D"listitem">
Ensure the column name defined with <code class=3D"literal">--update-key OB=
JECT</code> is specified in the
correct letter case. Sqoop will show an error if the letter case is incorre=
ct.
</li><li class=3D"listitem">
It is possible to match rows via multiple columns. See "Match Rows Via
Multiple Columns" for more information.
</li></ul></div></td></tr></tbody></table></div></div><div class=3D"section=
" title=3D"25.8.5.3.&nbsp;Merge-Export"><div class=3D"titlepage"><div><div>=
<h5 class=3D"title"><a name=3D"_merge_export"></a>25.8.5.3.&nbsp;Merge-Expo=
rt</h5></div></div></div><p><code class=3D"literal">--update-key OBJECT -Do=
raoop.export.merge=3Dtrue</code></p><p>Updates existing rows in <code class=
=3D"literal">OracleTableName</code>. Copies across rows from the HDFS
file that do not exist within the Oracle table.</p><p>Rows in the HDFS file=
 in <code class=3D"literal">/user/UserName/TableName</code> are matched to =
rows in
<code class=3D"literal">OracleTableName</code> by the <code class=3D"litera=
l">OBJECT</code> column. Rows that match are copied from the
HDFS file to the Oracle table. Rows in the HDFS file that do not exist in
<code class=3D"literal">OracleTableName</code> are added to <code class=3D"=
literal">OracleTableName</code>.</p><p>$ <code class=3D"literal">sqoop expo=
rt --direct --connect =85 --update-key OBJECT
-Doraoop.export.merge=3Dtrue --table OracleTableName --export-dir
/user/username/tablename</code></p><div class=3D"note" title=3D"Note" style=
=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"0" summary=
=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top" widt=
h=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/ima=
ges/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=3D"left" =
valign=3D"top"><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=
=3D"disc"><li class=3D"listitem">
Merge-Export is unique to The Data Connector for Oracle and Hadoop. It is
not a standard Sqoop feature.
</li><li class=3D"listitem">
If <code class=3D"literal">OracleTableName</code> was previously created by=
 The Data Connector for Oracle
and Hadoop with partitions, then this export will create a new partition fo=
r
the data being inserted. Updated rows will be moved to the new partition th=
at
was created for the export.
</li><li class=3D"listitem">
For performance reasons it is strongly recommended that where more than a
few rows are involved column <code class=3D"literal">OBJECT</code> be an in=
dex column of <code class=3D"literal">OracleTableName</code>.
</li><li class=3D"listitem">
Ensure the column name defined with <code class=3D"literal">--update-key OB=
JECT</code> is specified in the
correct letter case. Sqoop will show an error if the letter case is incorre=
ct.
</li><li class=3D"listitem">
It is possible to match rows via multiple columns. See "Match Rows Via
Multiple Columns" for more information.
</li></ul></div></td></tr></tbody></table></div></div><div class=3D"section=
" title=3D"25.8.5.4.&nbsp;Create Oracle Tables"><div class=3D"titlepage"><d=
iv><div><h5 class=3D"title"><a name=3D"_create_oracle_tables"></a>25.8.5.4.=
&nbsp;Create Oracle Tables</h5></div></div></div><p><code class=3D"literal"=
>-Doraoop.template.table=3DTemplateTableName</code></p><p>Creates <code cla=
ss=3D"literal">OracleTableName</code> by replicating the structure and data=
 types of
<code class=3D"literal">TemplateTableName</code>. <code class=3D"literal">T=
emplateTableName</code> is a table that exists in Oracle prior
to executing the Sqoop command.</p><div class=3D"note" title=3D"Note" style=
=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"0" summary=
=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top" widt=
h=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/ima=
ges/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=3D"left" =
valign=3D"top"><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=
=3D"disc"><li class=3D"listitem">
The export will fail if the Hadoop file contains any fields of a data type
not supported by The Data Connector for Oracle and Hadoop. See "Supported
Data Types" for more information.
</li><li class=3D"listitem">
The export will fail if the column definitions in the Hadoop table do not
exactly match the column definitions in the Oracle table.
</li><li class=3D"listitem">
This parameter is specific to creating an Oracle table. The export will fai=
l
if <code class=3D"literal">OracleTableName</code> already exists in Oracle.
</li></ul></div></td></tr></tbody></table></div><p>Example command:</p><p>$=
 <code class=3D"literal">sqoop export --direct --connect.. --table OracleTa=
bleName --export-dir
/user/username/tablename -Doraoop.template.table=3DTemplateTableName</code>=
</p></div><div class=3D"section" title=3D"25.8.5.5.&nbsp;NOLOGGING"><div cl=
ass=3D"titlepage"><div><div><h5 class=3D"title"><a name=3D"_nologging"></a>=
25.8.5.5.&nbsp;NOLOGGING</h5></div></div></div><p><code class=3D"literal">-=
Doraoop.nologging=3Dtrue</code></p><p>Assigns the NOLOGGING option to <code=
 class=3D"literal">OracleTableName</code>.</p><p>NOLOGGING may enhance perf=
ormance but you will be unable to backup the table.</p></div><div class=3D"=
section" title=3D"25.8.5.6.&nbsp;Partitioning"><div class=3D"titlepage"><di=
v><div><h5 class=3D"title"><a name=3D"_partitioning"></a>25.8.5.6.&nbsp;Par=
titioning</h5></div></div></div><p><code class=3D"literal">-Doraoop.partiti=
oned=3Dtrue</code></p><p>Partitions the table with the following benefits:<=
/p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li=
 class=3D"listitem">
The speed of the export is improved by allowing each mapper to insert data
into a separate Oracle table using direct path writes. (An alter table exch=
ange
subpartition SQL statement is subsequently executed to swap the data into t=
he
export table.)
</li><li class=3D"listitem">
You can selectively query or delete the data inserted by each Sqoop export
job. For example, you can delete old data by dropping old partitions from
the table.
</li></ul></div><p>The partition value is the SYSDATE of when Sqoop export =
job was performed.</p><p>The partitioned table created by The Data Connecto=
r for Oracle and Hadoop
includes the following columns that don=92t exist in the template table:</p=
><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li c=
lass=3D"listitem">
<code class=3D"literal">oraoop_export_sysdate</code> - This is the Oracle S=
YSDATE when the Sqoop export
job was performed. The created table will be partitioned by this column.
</li><li class=3D"listitem">
<code class=3D"literal">oraoop_mapper_id</code> - This is the id of the Had=
oop mapper that was used to
process the rows from the HDFS file. Each partition is subpartitioned by th=
is
column. This column exists merely to facilitate the exchange subpartition
mechanism that is performed by each mapper during the export process.
</li><li class=3D"listitem">
<code class=3D"literal">oraoop_mapper_row</code> - A unique row id within t=
he mapper / partition.
</li></ul></div><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.=
5in; margin-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr>=
<td rowspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"=
[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><t=
h align=3D"left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>If =
a unique row id is required for the table it can be formed by a
combination of oraoop_export_sysdate, oraoop_mapper_id and oraoop_mapper_ro=
w.</p></td></tr></tbody></table></div></div><div class=3D"section" title=3D=
"25.8.5.7.&nbsp;Match Rows Via Multiple Columns"><div class=3D"titlepage"><=
div><div><h5 class=3D"title"><a name=3D"_match_rows_via_multiple_columns"><=
/a>25.8.5.7.&nbsp;Match Rows Via Multiple Columns</h5></div></div></div><p>=
<code class=3D"literal">-Doraoop.update.key.extra.columns=3D"ColumnA,Column=
B"</code></p><p>Used with Update-Export and Merge-Export to match on more t=
han one column. The
first column to be matched on is <code class=3D"literal">--update-key OBJEC=
T</code>. To match on additional
columns, specify those columns on this parameter.</p><div class=3D"note" ti=
tle=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table bord=
er=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" val=
ign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.or=
g/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr><tr><td=
 align=3D"left" valign=3D"top"><div class=3D"itemizedlist"><ul class=3D"ite=
mizedlist" type=3D"disc"><li class=3D"listitem">
Letter case for the column names on this parameter is not important.
</li><li class=3D"listitem">
All columns used for matching should be indexed. The first three items on t=
he
index should be <code class=3D"literal">ColumnA</code>, <code class=3D"lite=
ral">ColumnB</code> and the column specified on
<code class=3D"literal">--update-key</code> - but the order in which the co=
lumns are specified is not
important.
</li></ul></div></td></tr></tbody></table></div></div><div class=3D"section=
" title=3D"25.8.5.8.&nbsp;Storage Clauses"><div class=3D"titlepage"><div><d=
iv><h5 class=3D"title"><a name=3D"_storage_clauses"></a>25.8.5.8.&nbsp;Stor=
age Clauses</h5></div></div></div><p><code class=3D"literal">-Doraoop.tempo=
rary.table.storage.clause=3D"StorageClause"</code></p><p><code class=3D"lit=
eral">-Doraoop.table.storage.clause=3D"StorageClause"</code></p><p>Use to c=
ustomize storage with Oracle clauses as in TABLESPACE or COMPRESS</p><p><co=
de class=3D"literal">-Doraoop.table.storage.clause</code> applies to the ex=
port table that is created
from <code class=3D"literal">-Doraoop.template.table</code>. See "Create Or=
acle Tables" for more
information. <code class=3D"literal">-Doraoop.temporary.table.storage.claus=
e</code> applies to all other
working tables that are created during the export process and then dropped =
at
the end of the export job.</p></div></div><div class=3D"section" title=3D"2=
5.8.6.&nbsp;Manage Date And Timestamp Data Types"><div class=3D"titlepage">=
<div><div><h4 class=3D"title"><a name=3D"_manage_date_and_timestamp_data_ty=
pes"></a>25.8.6.&nbsp;Manage Date And Timestamp Data Types</h4></div></div>=
</div><div class=3D"toc"><dl><dt><span class=3D"section"><a href=3D"https:/=
/sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_import_date_and_timestamp=
_data_types_from_oracle">25.8.6.1. Import Date And Timestamp Data Types fro=
m Oracle</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoo=
p.apache.org/docs/1.4.6/SqoopUserGuide.html#_the_data_connector_for_oracle_=
and_hadoop_does_not_apply_a_time_zone_to_date_timestamp_data_types">25.8.6.=
2. The Data Connector for Oracle and Hadoop Does Not Apply A Time Zone to D=
ATE / TIMESTAMP Data Types</a></span></dt><dt><span class=3D"section"><a hr=
ef=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_the_data_con=
nector_for_oracle_and_hadoop_retains_time_zone_information_in_timezone_data=
_types">25.8.6.3. The Data Connector for Oracle and Hadoop Retains Time Zon=
e Information in TIMEZONE Data Types</a></span></dt><dt><span class=3D"sect=
ion"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_da=
ta_connector_for_oracle_and_hadoop_explicitly_states_time_zone_for_local_ti=
mezone_data_types">25.8.6.4. Data Connector for Oracle and Hadoop Explicitl=
y States Time Zone for LOCAL TIMEZONE Data Types</a></span></dt><dt><span c=
lass=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGu=
ide.html#_java_sql_timestamp">25.8.6.5. java.sql.Timestamp</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_export_date_and_timestamp_data_types_into_oracle">25.8.=
6.6. Export Date And Timestamp Data Types into Oracle</a></span></dt></dl><=
/div><div class=3D"section" title=3D"25.8.6.1.&nbsp;Import Date And Timesta=
mp Data Types from Oracle"><div class=3D"titlepage"><div><div><h5 class=3D"=
title"><a name=3D"_import_date_and_timestamp_data_types_from_oracle"></a>25=
.8.6.1.&nbsp;Import Date And Timestamp Data Types from Oracle</h5></div></d=
iv></div><p>This section lists known differences in the data obtained by pe=
rforming an
Data Connector for Oracle and Hadoop import of an Oracle table versus a nat=
ive
Sqoop import of the same table.</p></div><div class=3D"section" title=3D"25=
.8.6.2.&nbsp;The Data Connector for Oracle and Hadoop Does Not Apply A Time=
 Zone to DATE / TIMESTAMP Data Types"><div class=3D"titlepage"><div><div><h=
5 class=3D"title"><a name=3D"_the_data_connector_for_oracle_and_hadoop_does=
_not_apply_a_time_zone_to_date_timestamp_data_types"></a>25.8.6.2.&nbsp;The=
 Data Connector for Oracle and Hadoop Does Not Apply A Time Zone to DATE / =
TIMESTAMP Data Types</h5></div></div></div><p>Data stored in a DATE or TIME=
STAMP column of an Oracle table is not associated
with a time zone. Sqoop without the Data Connector for Oracle and Hadoop
inappropriately applies time zone information to this data.</p><p>Take for =
example the following timestamp in an Oracle DATE or TIMESTAMP column:
<code class=3D"literal">2am on 3rd October, 2010</code>.</p><p>Request Sqoo=
p without the Data Connector for Oracle and Hadoop import this data
using a system located in Melbourne Australia. The data is adjusted to Melb=
ourne
Daylight Saving Time. The data is imported into Hadoop as:
<code class=3D"literal">3am on 3rd October, 2010.</code></p><p>The Data Con=
nector for Oracle and Hadoop does not apply time zone information to
these Oracle data-types. Even from a system located in Melbourne Australia,=
 The
Data Connector for Oracle and Hadoop ensures the Oracle and Hadoop timestam=
ps
match. The Data Connector for Oracle and Hadoop correctly imports this
timestamp as:
<code class=3D"literal">2am on 3rd October, 2010</code>.</p><div class=3D"n=
ote" title=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><tab=
le border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"cent=
er" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.ap=
ache.org/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr>=
<tr><td align=3D"left" valign=3D"top"><p>In order for The Data Connector fo=
r Oracle and Hadoop to ensure data
accuracy, Oracle DATE and TIMESTAMP values must be represented by a String,
even when <code class=3D"literal">--as-sequencefile</code> is used on the S=
qoop command-line to produce a
binary file in Hadoop.</p></td></tr></tbody></table></div></div><div class=
=3D"section" title=3D"25.8.6.3.&nbsp;The Data Connector for Oracle and Hado=
op Retains Time Zone Information in TIMEZONE Data Types"><div class=3D"titl=
epage"><div><div><h5 class=3D"title"><a name=3D"_the_data_connector_for_ora=
cle_and_hadoop_retains_time_zone_information_in_timezone_data_types"></a>25=
.8.6.3.&nbsp;The Data Connector for Oracle and Hadoop Retains Time Zone Inf=
ormation in TIMEZONE Data Types</h5></div></div></div><p>Data stored in a T=
IMESTAMP WITH TIME ZONE column of an Oracle table is
associated with a time zone. This data consists of two distinct parts: when=
 the
event occurred and where the event occurred.</p><p>When Sqoop without The D=
ata Connector for Oracle and Hadoop is used to import
data it converts the timestamp to the time zone of the system running Sqoop=
 and
omits the component of the data that specifies where the event occurred.</p=
><p>Take for example the following timestamps (with time zone) in an Oracle
TIMESTAMP WITH TIME ZONE column:</p><pre class=3D"screen">2:59:00 am on 4th=
 April, 2010. Australia/Melbourne
2:59:00 am on 4th April, 2010. America/New York</pre><p>Request Sqoop witho=
ut The Data Connector for Oracle and Hadoop import this data
using a system located in Melbourne Australia. From the data imported into
Hadoop we know when the events occurred, assuming we know the Sqoop command=
 was
run from a system located in the Australia/Melbourne time zone, but we have=
 lost
the information regarding where the event occurred.</p><pre class=3D"screen=
">2010-04-04 02:59:00.0
2010-04-04 16:59:00.0</pre><p>Sqoop with The Data Connector for Oracle and =
Hadoop imports the example
timestamps as follows. The Data Connector for Oracle and Hadoop retains the
time zone portion of the data.</p><pre class=3D"screen">2010-04-04 02:59:00=
.0 Australia/Melbourne
2010-04-04 02:59:00.0 America/New_York</pre></div><div class=3D"section" ti=
tle=3D"25.8.6.4.&nbsp;Data Connector for Oracle and Hadoop Explicitly State=
s Time Zone for LOCAL TIMEZONE Data Types"><div class=3D"titlepage"><div><d=
iv><h5 class=3D"title"><a name=3D"_data_connector_for_oracle_and_hadoop_exp=
licitly_states_time_zone_for_local_timezone_data_types"></a>25.8.6.4.&nbsp;=
Data Connector for Oracle and Hadoop Explicitly States Time Zone for LOCAL =
TIMEZONE Data Types</h5></div></div></div><p>Data stored in a TIMESTAMP WIT=
H LOCAL TIME ZONE column of an Oracle table is
associated with a time zone. Multiple end-users in differing time zones
(locales) will each have that data expressed as a timestamp within their
respective locale.</p><p>When Sqoop without the Data Connector for Oracle a=
nd Hadoop is used to import
data it converts the timestamp to the time zone of the system running Sqoop=
 and
omits the component of the data that specifies location.</p><p>Take for exa=
mple the following two timestamps (with time zone) in an Oracle
TIMESTAMP WITH LOCAL TIME ZONE column:</p><pre class=3D"screen">2:59:00 am =
on 4th April, 2010. Australia/Melbourne
2:59:00 am on 4th April, 2010. America/New York</pre><p>Request Sqoop witho=
ut the Data Connector for Oracle and Hadoop import this data
using a system located in Melbourne Australia. The timestamps are imported
correctly but the local time zone has to be guessed. If multiple systems in
different locale were executing the Sqoop import it would be very difficult=
 to
diagnose the cause of the data corruption.</p><pre class=3D"screen">2010-04=
-04 02:59:00.0
2010-04-04 16:59:00.0</pre><p>Sqoop with the Data Connector for Oracle and =
Hadoop explicitly states the time
zone portion of the data imported into Hadoop. The local time zone is GMT b=
y
default. You can set the local time zone with parameter:</p><p><code class=
=3D"literal">-Doracle.sessionTimeZone=3DAustralia/Melbourne</code></p><p>Th=
e Data Connector for Oracle and Hadoop would import these two timestamps as=
:</p><pre class=3D"screen">2010-04-04 02:59:00.0 Australia/Melbourne
2010-04-04 16:59:00.0 Australia/Melbourne</pre></div><div class=3D"section"=
 title=3D"25.8.6.5.&nbsp;java.sql.Timestamp"><div class=3D"titlepage"><div>=
<div><h5 class=3D"title"><a name=3D"_java_sql_timestamp"></a>25.8.6.5.&nbsp=
;java.sql.Timestamp</h5></div></div></div><p>To use Sqoop=92s handling of d=
ate and timestamp data types when importing data
from Oracle use the following parameter:</p><p><code class=3D"literal">-Dor=
aoop.timestamp.string=3Dfalse</code></p><div class=3D"note" title=3D"Note" =
style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"0" summ=
ary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top" w=
idth=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/=
images/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=3D"lef=
t" valign=3D"top"><p>Sqoop=92s handling of date and timestamp data types do=
es not store the
timezone. However, some developers may prefer Sqoop=92s handling as the Dat=
a
Connector for Oracle and Hadoop converts date and timestamp data types to
string. This may not work for some developers as the string will require
parsing later in the workflow.</p></td></tr></tbody></table></div></div><di=
v class=3D"section" title=3D"25.8.6.6.&nbsp;Export Date And Timestamp Data =
Types into Oracle"><div class=3D"titlepage"><div><div><h5 class=3D"title"><=
a name=3D"_export_date_and_timestamp_data_types_into_oracle"></a>25.8.6.6.&=
nbsp;Export Date And Timestamp Data Types into Oracle</h5></div></div></div=
><p>Ensure the data in the HDFS file fits the required format exactly befor=
e using
Sqoop to export the data into Oracle.</p><div class=3D"note" title=3D"Note"=
 style=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"0" sum=
mary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top" =
width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6=
/images/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=3D"le=
ft" valign=3D"top"><div class=3D"itemizedlist"><ul class=3D"itemizedlist" t=
ype=3D"disc"><li class=3D"listitem">
The Sqoop export command will fail if the data is not in the required forma=
t.
</li><li class=3D"listitem">
ff =3D Fractional second
</li><li class=3D"listitem">
TZR =3D Time Zone Region
</li></ul></div></td></tr></tbody></table></div><div class=3D"informaltable=
"><table style=3D"border-collapse: collapse;border-top: 0.5pt solid ; borde=
r-bottom: 0.5pt solid ; "><colgroup><col align=3D"left"><col align=3D"left"=
></colgroup><thead><tr><th style=3D"border-right: 0.5pt solid ; border-bott=
om: 0.5pt solid ; " align=3D"left">
    Oracle Data Type
    </th><th style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    Required Format of The Data in the HDFS File
    </th></tr></thead><tbody><tr><td style=3D"border-right: 0.5pt solid ; b=
order-bottom: 0.5pt solid ; " align=3D"left">
    DATE
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">yyyy-mm-dd hh24:mi:ss</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    TIMESTAMP
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">yyyy-mm-dd hh24:mi:ss.ff</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; border-bottom: 0=
.5pt solid ; " align=3D"left">
    TIMESTAMPTZ
    </td><td style=3D"border-bottom: 0.5pt solid ; " align=3D"left">
    <code class=3D"literal">yyyy-mm-dd hh24:mi:ss.ff TZR</code>
    </td></tr><tr><td style=3D"border-right: 0.5pt solid ; " align=3D"left"=
>
    TIMESTAMPLTZ
    </td><td style=3D"" align=3D"left">
    <code class=3D"literal">yyyy-mm-dd hh24:mi:ss.ff TZR</code>
    </td></tr></tbody></table></div></div></div><div class=3D"section" titl=
e=3D"25.8.7.&nbsp;Configure The Data Connector for Oracle and Hadoop"><div =
class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_configure_the=
_data_connector_for_oracle_and_hadoop"></a>25.8.7.&nbsp;Configure The Data =
Connector for Oracle and Hadoop</h4></div></div></div><div class=3D"toc"><d=
l><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.=
6/SqoopUserGuide.html#_oraoop_site_template_xml">25.8.7.1. oraoop-site-temp=
late.xml</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoo=
p.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_oracle_session_initiali=
zation_statements">25.8.7.2. oraoop.oracle.session.initialization.statement=
s</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apach=
e.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_table_import_where_clause_loca=
tion">25.8.7.3. oraoop.table.import.where.clause.location</a></span></dt><d=
t><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sq=
oopUserGuide.html#_oracle_row_fetch_size">25.8.7.4. oracle.row.fetch.size</=
a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.o=
rg/docs/1.4.6/SqoopUserGuide.html#_oraoop_import_hint">25.8.7.5. oraoop.imp=
ort.hint</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoo=
p.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_oracle_append_values_hi=
nt_usage">25.8.7.6. oraoop.oracle.append.values.hint.usage</a></span></dt><=
dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/S=
qoopUserGuide.html#_mapred_map_tasks_speculative_execution">25.8.7.7. mapre=
d.map.tasks.speculative.execution</a></span></dt><dt><span class=3D"section=
"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoo=
p_block_allocation">25.8.7.8. oraoop.block.allocation</a></span></dt><dt><s=
pan class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopU=
serGuide.html#_oraoop_import_omit_lobs_and_long">25.8.7.9. oraoop.import.om=
it.lobs.and.long</a></span></dt><dt><span class=3D"section"><a href=3D"http=
s://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oraoop_locations">25.8=
.7.10. oraoop.locations</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_sqoop_connecti=
on_factories">25.8.7.11. sqoop.connection.factories</a></span></dt><dt><spa=
n class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUse=
rGuide.html#_expressions_in_oraoop_site_xml">25.8.7.12. Expressions in orao=
op-site.xml</a></span></dt></dl></div><div class=3D"section" title=3D"25.8.=
7.1.&nbsp;oraoop-site-template.xml"><div class=3D"titlepage"><div><div><h5 =
class=3D"title"><a name=3D"_oraoop_site_template_xml"></a>25.8.7.1.&nbsp;or=
aoop-site-template.xml</h5></div></div></div><p>The oraoop-site-template.xm=
l file is supplied with the Data Connector for
Oracle and Hadoop. It contains a number of ALTER SESSION statements that ar=
e
used to initialize the Oracle sessions created by the Data Connector for Or=
acle
and Hadoop.</p><p>If you need to customize these initializations to your en=
vironment then:</p><div class=3D"orderedlist"><ol class=3D"orderedlist" typ=
e=3D"1"><li class=3D"listitem">
Find <code class=3D"literal">oraoop-site-template.xml</code> in the Sqoop c=
onfiguration directory.
</li><li class=3D"listitem">
Copy <code class=3D"literal">oraoop-site-template.xml</code> to <code class=
=3D"literal">oraoop-site.xml</code>.
</li><li class=3D"listitem">
Edit the <code class=3D"literal">ALTER SESSION</code> statements in <code c=
lass=3D"literal">oraoop-site.xml</code>.
</li></ol></div></div><div class=3D"section" title=3D"25.8.7.2.&nbsp;oraoop=
.oracle.session.initialization.statements"><div class=3D"titlepage"><div><d=
iv><h5 class=3D"title"><a name=3D"_oraoop_oracle_session_initialization_sta=
tements"></a>25.8.7.2.&nbsp;oraoop.oracle.session.initialization.statements=
</h5></div></div></div><p>The value of this property is a semicolon-delimit=
ed list of Oracle SQL
statements. These statements are executed, in order, for each Oracle sessio=
n
created by the Data Connector for Oracle and Hadoop.</p><p>The default stat=
ements include:</p><div class=3D"variablelist"><dl><dt><span class=3D"term"=
>
<code class=3D"literal">alter session set time_zone =3D '{oracle.sessionTim=
eZone|GMT}';</code>
</span></dt><dd><p class=3D"simpara">
This statement initializes the timezone of the JDBC client. This ensures th=
at
data from columns of type TIMESTAMP WITH LOCAL TIMEZONE are correctly adjus=
ted
into the timezone of the client and not kept in the timezone of the Oracle
database.
</p><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin-=
right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=
=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=
=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"=
left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><div class=3D"ite=
mizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li class=3D"listitem">
There is an explanation to the text within the curly-braces. See
"Expressions in oraoop-site.xml" for more information..
</li><li class=3D"listitem">
A list of the time zones supported by your Oracle database is available by
executing the following query: <code class=3D"literal">SELECT TZNAME FROM V=
$TIMEZONE_NAMES;</code>
</li></ul></div></td></tr></tbody></table></div></dd><dt><span class=3D"ter=
m">
<code class=3D"literal">alter session disable parallel query;</code>
</span></dt><dd><p class=3D"simpara">
This statement instructs Oracle to not parallelize SQL statements executed =
by
the Data Connector for Oracle and Hadoop sessions. This Oracle feature is
disabled because the Map/Reduce job launched by Sqoop is the mechanism used
for parallelization.
</p><p class=3D"simpara">It is recommended that you not enable parallel que=
ry because it can have an
adverse effect the load on the Oracle instance and on the balance between
the Data Connector for Oracle and Hadoop mappers.</p><p class=3D"simpara">S=
ome export operations are performed in parallel where deemed appropriate by
the Data Connector for Oracle and Hadoop. See "Parallelization" for
more information.</p></dd><dt><span class=3D"term">
<code class=3D"literal">alter session set "_serial_direct_read"=3Dtrue;</co=
de>
</span></dt><dd>
This statement instructs Oracle to bypass the buffer cache. This is used to
prevent Oracle from filling its buffers with the data being read by the Dat=
a
Connector for Oracle and Hadoop, therefore diminishing its capacity to cach=
e
higher prioritized data. Hence, this statement is intended to minimize the
Data Connector for Oracle and Hadoop=92s impact on the immediate future
performance of the Oracle database.
</dd><dt><span class=3D"term">
<code class=3D"literal">--alter session set events '10046 trace name contex=
t forever, level 8';</code>
</span></dt><dd>
This statement has been commented-out. To allow tracing, remove the comment
token "--" from the start of the line.
</dd></dl></div><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.=
5in; margin-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr>=
<td rowspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"=
[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><t=
h align=3D"left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><div c=
lass=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li class=3D=
"listitem">
These statements are placed on separate lines for readability. They do not
need to be placed on separate lines.
</li><li class=3D"listitem">
A statement can be commented-out via the standard Oracle double-hyphen
token: "--". The comment takes effect until the next semicolon.
</li></ul></div></td></tr></tbody></table></div></div><div class=3D"section=
" title=3D"25.8.7.3.&nbsp;oraoop.table.import.where.clause.location"><div c=
lass=3D"titlepage"><div><div><h5 class=3D"title"><a name=3D"_oraoop_table_i=
mport_where_clause_location"></a>25.8.7.3.&nbsp;oraoop.table.import.where.c=
lause.location</h5></div></div></div><div class=3D"variablelist"><dl><dt><s=
pan class=3D"term">
SUBSPLIT (default)
</span></dt><dd><p class=3D"simpara">
When set to this value, the where clause is applied to each subquery used t=
o
retrieve data from the Oracle table.
</p><p class=3D"simpara">A Sqoop command like:</p><p class=3D"simpara"><cod=
e class=3D"literal">sqoop import -D oraoop.table.import.where.clause.locati=
on=3DSUBSPLIT --table
JUNK --where "owner like 'G%'"</code></p><p class=3D"simpara">Generates SQL=
 query of the form:</p><pre class=3D"screen">SELECT OWNER,OBJECT_NAME
  FROM JUNK
 WHERE ((rowid &gt;=3D
           dbms_rowid.rowid_create(1, 113320, 1024, 4223664, 0)
         AND rowid &lt;=3D
             dbms_rowid.rowid_create(1, 113320, 1024, 4223671, 32767)))
   AND (owner like 'G%')
UNION ALL
SELECT OWNER,OBJECT_NAME
  FROM JUNK
 WHERE ((rowid &gt;=3D
           dbms_rowid.rowid_create(1, 113320, 1024, 4223672, 0)
         AND rowid &lt;=3D
           dbms_rowid.rowid_create(1, 113320, 1024, 4223679, 32767)))
   AND (owner like 'G%')</pre></dd><dt><span class=3D"term">
SPLIT
</span></dt><dd><p class=3D"simpara">
When set to this value, the where clause is applied to the entire SQL
statement used by each split/mapper.
</p><p class=3D"simpara">A Sqoop command like:</p><p class=3D"simpara"><cod=
e class=3D"literal">sqoop import -D oraoop.table.import.where.clause.locati=
on=3DSPLIT --table
JUNK --where "rownum &#8656; 10"</code></p><p class=3D"simpara">Generates S=
QL query of the form:</p><pre class=3D"screen">SELECT OWNER,OBJECT_NAME
  FROM (
        SELECT OWNER,OBJECT_NAME
          FROM JUNK
         WHERE ((rowid &gt;=3D
                   dbms_rowid.rowid_create(1, 113320, 1024, 4223664, 0)
                 AND rowid &lt;=3D
                   dbms_rowid.rowid_create(1, 113320, 1024, 4223671, 32767)=
))
        UNION ALL
        SELECT OWNER,OBJECT_NAME
          FROM JUNK
         WHERE ((rowid &gt;=3D
                   dbms_rowid.rowid_create(1, 113320, 1024, 4223672, 0)
                 AND rowid &lt;=3D
                   dbms_rowid.rowid_create(1, 113320, 1024, 4223679,32767))=
)
       )
 WHERE rownum &lt;=3D 10</pre><div class=3D"note" title=3D"Note" style=3D"m=
argin-left: 0.5in; margin-right: 0.5in;"><table border=3D"0" summary=3D"Not=
e"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top" width=3D"25=
"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/not=
e.png"></td><th align=3D"left">Note</th></tr><tr><td align=3D"left" valign=
=3D"top"><div class=3D"itemizedlist"><ul class=3D"itemizedlist" type=3D"dis=
c"><li class=3D"listitem">
In this example, there are up to 10 rows imported per mapper.
</li><li class=3D"listitem">
The SPLIT clause may result in greater overhead than the SUBSPLIT
clause because the UNION statements need to be fully materialized
before the data can be streamed to the mappers. However, you may
wish to use SPLIT in the case where you want to limit the total
number of rows processed by each mapper.
</li></ul></div></td></tr></tbody></table></div></dd></dl></div></div><div =
class=3D"section" title=3D"25.8.7.4.&nbsp;oracle.row.fetch.size"><div class=
=3D"titlepage"><div><div><h5 class=3D"title"><a name=3D"_oracle_row_fetch_s=
ize"></a>25.8.7.4.&nbsp;oracle.row.fetch.size</h5></div></div></div><p>The =
value of this property is an integer specifying the number of rows the
Oracle JDBC driver should fetch in each network round-trip to the database.
The default value is 5000.</p><p>If you alter this setting, confirmation of=
 the
change is displayed in the logs of the mappers during the Map-Reduce job.</=
p></div><div class=3D"section" title=3D"25.8.7.5.&nbsp;oraoop.import.hint">=
<div class=3D"titlepage"><div><div><h5 class=3D"title"><a name=3D"_oraoop_i=
mport_hint"></a>25.8.7.5.&nbsp;oraoop.import.hint</h5></div></div></div><p>=
The Oracle optimizer hint is added to the SELECT statement for IMPORT jobs
as follows:</p><pre class=3D"screen">SELECT /*+ NO_INDEX(t) */ * FROM emplo=
yees;</pre><p>The default hint is <code class=3D"literal">NO_INDEX(t)</code=
></p><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; margin=
-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=
=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=
=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th align=3D"=
left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><div class=3D"ite=
mizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li class=3D"listitem">
The hint can be added to the command line. See "Import Data from Oracle" fo=
r
more information.
</li><li class=3D"listitem">
See the Oracle Database Performance Tuning Guide (Using Optimizer Hints)
for more information on Oracle optimizer hints.
</li><li class=3D"listitem"><p class=3D"simpara">
To turn the hint off, insert a space between the &lt;value&gt; elements.
</p><pre class=3D"screen">&lt;property&gt;
  &lt;name&gt;oraoop.import.hint&lt;/name&gt;
  &lt;value&gt; &lt;/value&gt;
&lt;/property&gt;</pre></li></ul></div></td></tr></tbody></table></div></di=
v><div class=3D"section" title=3D"25.8.7.6.&nbsp;oraoop.oracle.append.value=
s.hint.usage"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a nam=
e=3D"_oraoop_oracle_append_values_hint_usage"></a>25.8.7.6.&nbsp;oraoop.ora=
cle.append.values.hint.usage</h5></div></div></div><p>The value of this pro=
perty is one of: AUTO / ON / OFF.</p><div class=3D"variablelist"><dl><dt><s=
pan class=3D"term">
AUTO
</span></dt><dd><p class=3D"simpara">
AUTO is the default value.
</p><p class=3D"simpara">Currently AUTO is equivalent to OFF.</p></dd><dt><=
span class=3D"term">
ON
</span></dt><dd>
During export the Data Connector for Oracle and Hadoop uses direct path
writes to populate the target Oracle table, bypassing the buffer cache.
Oracle only allows a single session to perform direct writes against a spec=
ific
table at any time, so this has the effect of serializing the writes to the
table. This may reduce throughput, especially if the number of mappers is h=
igh.
However, for databases where DBWR is very busy, or where the IO bandwidth t=
o
the underlying table is narrow (table resides on a single disk spindle for
instance), then setting <code class=3D"literal">oraoop.oracle.append.values=
.hint.usage</code> to ON may
reduce the load on the Oracle database and possibly increase throughput.
</dd><dt><span class=3D"term">
OFF
</span></dt><dd>
During export the Data Connector for Oracle and Hadoop does not use the
<code class=3D"literal">APPEND_VALUES</code> Oracle hint.
</dd></dl></div><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.=
5in; margin-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr>=
<td rowspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"=
[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><t=
h align=3D"left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>Thi=
s parameter is only effective on Oracle 11g Release 2 and above.</p></td></=
tr></tbody></table></div></div><div class=3D"section" title=3D"25.8.7.7.&nb=
sp;mapred.map.tasks.speculative.execution"><div class=3D"titlepage"><div><d=
iv><h5 class=3D"title"><a name=3D"_mapred_map_tasks_speculative_execution">=
</a>25.8.7.7.&nbsp;mapred.map.tasks.speculative.execution</h5></div></div><=
/div><p>By default speculative execution is disabled for the Data Connector=
 for
Oracle and Hadoop. This avoids placing redundant load on the Oracle databas=
e.</p><p>If Speculative execution is enabled, then Hadoop may initiate mult=
iple mappers
to read the same blocks of data, increasing the overall load on the databas=
e.</p></div><div class=3D"section" title=3D"25.8.7.8.&nbsp;oraoop.block.all=
ocation"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a name=3D"=
_oraoop_block_allocation"></a>25.8.7.8.&nbsp;oraoop.block.allocation</h5></=
div></div></div><p>This setting determines how Oracle=92s data-blocks are a=
ssigned to Map-Reduce mappers.</p><div class=3D"note" title=3D"Note" style=
=3D"margin-left: 0.5in; margin-right: 0.5in;"><table border=3D"0" summary=
=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"center" valign=3D"top" widt=
h=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/ima=
ges/note.png"></td><th align=3D"left">Note</th></tr><tr><td align=3D"left" =
valign=3D"top"><p>Applicable to import. Not applicable to export.</p></td><=
/tr></tbody></table></div><div class=3D"variablelist"><dl><dt><span class=
=3D"term">
ROUNDROBIN (default)
</span></dt><dd><p class=3D"simpara">
Each chunk of Oracle blocks is allocated to the mappers in a roundrobin
manner. This helps prevent one of the mappers from being
allocated a large proportion of typically small-sized blocks from the
start of Oracle data-files. In doing so it also helps prevent one of the
other mappers from being allocated a large proportion of typically
larger-sized blocks from the end of the Oracle data-files.
</p><p class=3D"simpara">Use this method to help ensure all the mappers are=
 allocated a similar
amount of work.</p></dd><dt><span class=3D"term">
RANDOM
</span></dt><dd>
The list of Oracle blocks is randomized before being allocated to the
mappers via a round-robin approach. This has the benefit of increasing
the chance that, at any given instant in time, each mapper is reading
from a different Oracle data-file. If the Oracle data-files are located on
separate spindles, this should increase the overall IO throughput.
</dd><dt><span class=3D"term">
SEQUENTIAL
</span></dt><dd><p class=3D"simpara">
Each chunk of Oracle blocks is allocated to the mappers sequentially.
This produces the tendency for each mapper to sequentially read a large,
contiguous proportion of an Oracle data-file. It is unlikely for the
performance of this method to exceed that of the round-robin method
and it is more likely to allocate a large difference in the work between
the mappers.
</p><p class=3D"simpara">Use of this method is generally not recommended.</=
p></dd></dl></div></div><div class=3D"section" title=3D"25.8.7.9.&nbsp;orao=
op.import.omit.lobs.and.long"><div class=3D"titlepage"><div><div><h5 class=
=3D"title"><a name=3D"_oraoop_import_omit_lobs_and_long"></a>25.8.7.9.&nbsp=
;oraoop.import.omit.lobs.and.long</h5></div></div></div><p>This setting can=
 be used to omit all LOB columns (BLOB, CLOB and NCLOB) and LONG
column from an Oracle table being imported. This is advantageous in
troubleshooting, as it provides a convenient way to exclude all LOB-based d=
ata
from the import.</p></div><div class=3D"section" title=3D"25.8.7.10.&nbsp;o=
raoop.locations"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a =
name=3D"_oraoop_locations"></a>25.8.7.10.&nbsp;oraoop.locations</h5></div><=
/div></div><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.5in; =
margin-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr><td r=
owspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"[Note=
]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><th ali=
gn=3D"left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>Applicab=
le to import. Not applicable to export.</p></td></tr></tbody></table></div>=
<p>By default, four mappers are used for a Sqoop import job. The number of =
mappers
can be altered via the Sqoop <code class=3D"literal">--num-mappers</code> p=
arameter.</p><p>If the data-nodes in your Hadoop cluster have 4 task-slots =
(that is they are
4-CPU core machines) it is likely for all four mappers to execute on the
same machine. Therefore, IO may be concentrated between the Oracle database
and a single machine.</p><p>This setting allows you to control which DataNo=
des in your Hadoop cluster each
mapper executes on. By assigning each mapper to a separate machine you may
improve the overall IO performance for the job. This will also have the
side-effect of the imported data being more diluted across the machines in
the cluster. (HDFS replication will dilute the data across the cluster anyw=
ay.)</p><p>Specify the machine names as a comma separated list. The locatio=
ns are
allocated to each of the mappers in a round-robin manner.</p><p>If using EC=
2, specify the internal name of the machines. Here is an example
of using this parameter from the Sqoop command-line:</p><p>$ <code class=3D=
"literal">sqoop import -D
oraoop.locations=3Dip-10-250-23-225.ec2.internal,ip-10-250-107-32.ec2.inter=
nal,ip-10-250-207-2.ec2.internal,ip-10-250-27-114.ec2.internal
--direct --connect=85</code></p></div><div class=3D"section" title=3D"25.8.=
7.11.&nbsp;sqoop.connection.factories"><div class=3D"titlepage"><div><div><=
h5 class=3D"title"><a name=3D"_sqoop_connection_factories"></a>25.8.7.11.&n=
bsp;sqoop.connection.factories</h5></div></div></div><p>This setting determ=
ines behavior if the Data Connector for Oracle and Hadoop
cannot accept the job. By default Sqoop accepts the jobs that the Data Conn=
ector
for Oracle and Hadoop rejects.</p><p>Set the value to <code class=3D"litera=
l">org.apache.sqoop.manager.oracle.OraOopManagerFactory</code> when you
want the job to fail if the Data Connector for Oracle and Hadoop cannot
accept the job.</p></div><div class=3D"section" title=3D"25.8.7.12.&nbsp;Ex=
pressions in oraoop-site.xml"><div class=3D"titlepage"><div><div><h5 class=
=3D"title"><a name=3D"_expressions_in_oraoop_site_xml"></a>25.8.7.12.&nbsp;=
Expressions in oraoop-site.xml</h5></div></div></div><p>Text contained with=
in curly-braces { and } are expressions to be evaluated
prior to the SQL statement being executed. The expression contains the name
of the configuration property optionally followed by a default value to use
if the property has not been set. A pipe | character is used to delimit the
property name and the default value.</p><p>For example:</p><div class=3D"va=
riablelist"><dl><dt><span class=3D"term">
When this Sqoop command is executed
</span></dt><dd>
$ <code class=3D"literal">sqoop import -D oracle.sessionTimeZone=3DUS/Hawai=
i --direct --connect</code>
</dd><dt><span class=3D"term">
The statement within oraoop-site.xml
</span></dt><dd>
<code class=3D"literal">alter session set time_zone =3D'{oracle.sessionTime=
Zone|GMT}';</code>
</dd><dt><span class=3D"term">
Becomes
</span></dt><dd>
<code class=3D"literal">alter session set time_zone =3D 'US/Hawaii'</code>
</dd><dt><span class=3D"term">
If the oracle.sessionTimeZone property had not been set, then this statemen=
t would use the specified default value and would become
</span></dt><dd>
<code class=3D"literal">alter session set time_zone =3D 'GMT'</code>
</dd></dl></div><div class=3D"note" title=3D"Note" style=3D"margin-left: 0.=
5in; margin-right: 0.5in;"><table border=3D"0" summary=3D"Note"><tbody><tr>=
<td rowspan=3D"2" align=3D"center" valign=3D"top" width=3D"25"><img alt=3D"=
[Note]" src=3D"https://sqoop.apache.org/docs/1.4.6/images/note.png"></td><t=
h align=3D"left">Note</th></tr><tr><td align=3D"left" valign=3D"top"><p>The=
 <code class=3D"literal">oracle.sessionTimeZone</code> property can be spec=
ified within the
<code class=3D"literal">sqoop-site.xml</code> file if you want this setting=
 to be used all the time.</p></td></tr></tbody></table></div></div></div><d=
iv class=3D"section" title=3D"25.8.8.&nbsp;Troubleshooting The Data Connect=
or for Oracle and Hadoop"><div class=3D"titlepage"><div><div><h4 class=3D"t=
itle"><a name=3D"_troubleshooting_the_data_connector_for_oracle_and_hadoop"=
></a>25.8.8.&nbsp;Troubleshooting The Data Connector for Oracle and Hadoop<=
/h4></div></div></div><div class=3D"toc"><dl><dt><span class=3D"section"><a=
 href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_quote_ora=
cle_owners_and_tables">25.8.8.1. Quote Oracle Owners And Tables</a></span><=
/dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.=
4.6/SqoopUserGuide.html#_quote_oracle_columns">25.8.8.2. Quote Oracle Colum=
ns</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apac=
he.org/docs/1.4.6/SqoopUserGuide.html#_confirm_the_data_connector_for_oracl=
e_and_hadoop_can_initialize_the_oracle_session">25.8.8.3. Confirm The Data =
Connector for Oracle and Hadoop Can Initialize The Oracle Session</a></span=
></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/=
1.4.6/SqoopUserGuide.html#_check_the_sqoop_debug_logs_for_error_messages">2=
5.8.8.4. Check The Sqoop Debug Logs for Error Messages</a></span></dt><dt><=
span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/Sqoop=
UserGuide.html#_export_check_tables_are_compatible">25.8.8.5. Export: Check=
 Tables Are Compatible</a></span></dt><dt><span class=3D"section"><a href=
=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_export_paralle=
lization">25.8.8.6. Export: Parallelization</a></span></dt><dt><span class=
=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.=
html#_export_check_oraoop_oracle_append_values_hint_usage">25.8.8.7. Export=
: Check oraoop.oracle.append.values.hint.usage</a></span></dt><dt><span cla=
ss=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuid=
e.html#_turn_on_verbose">25.8.8.8. Turn On Verbose</a></span></dt></dl></di=
v><div class=3D"section" title=3D"25.8.8.1.&nbsp;Quote Oracle Owners And Ta=
bles"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a name=3D"_qu=
ote_oracle_owners_and_tables"></a>25.8.8.1.&nbsp;Quote Oracle Owners And Ta=
bles</h5></div></div></div><div class=3D"informaltable"><table style=3D"bor=
der-collapse: collapse;border-top: 0.5pt solid ; border-bottom: 0.5pt solid=
 ; "><colgroup><col><col></colgroup><tbody><tr><td style=3D"border-right: 0=
.5pt solid ; border-bottom: 0.5pt solid ; " align=3D"left" valign=3D"top"><=
div class=3D"literallayout"><p>If&nbsp;the&nbsp;owner&nbsp;of&nbsp;the&nbsp=
;Oracle&nbsp;table&nbsp;needs&nbsp;to&nbsp;be<br>
quoted,&nbsp;use:</p></div></td><td style=3D"border-bottom: 0.5pt solid ; "=
 align=3D"left" valign=3D"top"><div class=3D"literallayout"><p>$&nbsp;<code=
 class=3D"literal">sqoop&nbsp;import&nbsp;=85&nbsp;--table<br>
"\"\"Scott\".customers\""</code><br>
<br>
This&nbsp;is&nbsp;the&nbsp;equivalent&nbsp;of:<br>
"Scott".customers</p></div></td></tr><tr><td style=3D"border-right: 0.5pt s=
olid ; border-bottom: 0.5pt solid ; " align=3D"left" valign=3D"top"><div cl=
ass=3D"literallayout"><p>If&nbsp;the&nbsp;Oracle&nbsp;table&nbsp;needs&nbsp=
;to&nbsp;be&nbsp;quoted,&nbsp;use:</p></div></td><td style=3D"border-bottom=
: 0.5pt solid ; " align=3D"left" valign=3D"top"><div class=3D"literallayout=
"><p>$&nbsp;<code class=3D"literal">sqoop&nbsp;import&nbsp;=85&nbsp;--table=
<br>
"\"scott.\"Customers\"\""</code><br>
<br>
This&nbsp;is&nbsp;the&nbsp;equivalent&nbsp;of:<br>
scott."Customers"</p></div></td></tr><tr><td style=3D"border-right: 0.5pt s=
olid ; " align=3D"left" valign=3D"top"><div class=3D"literallayout"><p>If&n=
bsp;both&nbsp;the&nbsp;owner&nbsp;of&nbsp;the&nbsp;Oracle&nbsp;table&nbsp;a=
nd&nbsp;the<br>
table&nbsp;itself&nbsp;needs&nbsp;to&nbsp;be&nbsp;quoted,&nbsp;use:</p></di=
v></td><td style=3D"" align=3D"left" valign=3D"top"><div class=3D"literalla=
yout"><p>$&nbsp;<code class=3D"literal">sqoop&nbsp;import&nbsp;=85&nbsp;--t=
able<br>
"\"\"Scott\".\"Customers\"\""</code><br>
<br>
This&nbsp;is&nbsp;the&nbsp;equivalent&nbsp;of:<br>
"Scott"."Customers"</p></div></td></tr></tbody></table></div><div class=3D"=
note" title=3D"Note" style=3D"margin-left: 0.5in; margin-right: 0.5in;"><ta=
ble border=3D"0" summary=3D"Note"><tbody><tr><td rowspan=3D"2" align=3D"cen=
ter" valign=3D"top" width=3D"25"><img alt=3D"[Note]" src=3D"https://sqoop.a=
pache.org/docs/1.4.6/images/note.png"></td><th align=3D"left">Note</th></tr=
><tr><td align=3D"left" valign=3D"top"><div class=3D"itemizedlist"><ul clas=
s=3D"itemizedlist" type=3D"disc"><li class=3D"listitem">
The HDFS output directory is called something like:
/user/username/"Scott"."Customers"
</li><li class=3D"listitem">
If a table name contains a $ character, it may need to be escaped within yo=
ur
Unix shell. For example, the dr$object table in the ctxsys schema would be
referred to as: $ <code class=3D"literal">sqoop import =85 --table "ctxsys.=
dr\$object"</code>
</li></ul></div></td></tr></tbody></table></div></div><div class=3D"section=
" title=3D"25.8.8.2.&nbsp;Quote Oracle Columns"><div class=3D"titlepage"><d=
iv><div><h5 class=3D"title"><a name=3D"_quote_oracle_columns"></a>25.8.8.2.=
&nbsp;Quote Oracle Columns</h5></div></div></div><div class=3D"variablelist=
"><dl><dt><span class=3D"term">
If a column name of an Oracle table needs to be quoted, use
</span></dt><dd><p class=3D"simpara">
$ <code class=3D"literal">sqoop import =85 --table customers --columns "\"\=
"first name\"\""</code>
</p><p class=3D"simpara">This is the equivalent of: <code class=3D"literal"=
>select "first name" from customers</code></p></dd></dl></div></div><div cl=
ass=3D"section" title=3D"25.8.8.3.&nbsp;Confirm The Data Connector for Orac=
le and Hadoop Can Initialize The Oracle Session"><div class=3D"titlepage"><=
div><div><h5 class=3D"title"><a name=3D"_confirm_the_data_connector_for_ora=
cle_and_hadoop_can_initialize_the_oracle_session"></a>25.8.8.3.&nbsp;Confir=
m The Data Connector for Oracle and Hadoop Can Initialize The Oracle Sessio=
n</h5></div></div></div><p>If the Sqoop output includes feedback such as th=
e following then the
configuration properties contained within <code class=3D"literal">oraoop-si=
te-template.xml</code> and
<code class=3D"literal">oraoop-site.xml</code> have been loaded by Hadoop a=
nd can be accessed by the Data
Connector for Oracle and Hadoop.</p><p><code class=3D"literal">14/07/08 15:=
21:13 INFO oracle.OracleConnectionFactory:
Initializing Oracle session with SQL</code></p></div><div class=3D"section"=
 title=3D"25.8.8.4.&nbsp;Check The Sqoop Debug Logs for Error Messages"><di=
v class=3D"titlepage"><div><div><h5 class=3D"title"><a name=3D"_check_the_s=
qoop_debug_logs_for_error_messages"></a>25.8.8.4.&nbsp;Check The Sqoop Debu=
g Logs for Error Messages</h5></div></div></div><p>For more information abo=
ut any errors encountered during the Sqoop import,
refer to the log files generated by each of the (by default 4) mappers that
performed the import.</p><p>The logs can be obtained via your Map-Reduce Jo=
b Tracker=92s web page.</p><p>Include these log files with any requests you=
 make for assistance on the Sqoop
User Group web site.</p></div><div class=3D"section" title=3D"25.8.8.5.&nbs=
p;Export: Check Tables Are Compatible"><div class=3D"titlepage"><div><div><=
h5 class=3D"title"><a name=3D"_export_check_tables_are_compatible"></a>25.8=
.8.5.&nbsp;Export: Check Tables Are Compatible</h5></div></div></div><p>Che=
ck tables particularly in the case of a parsing error.</p><div class=3D"ite=
mizedlist"><ul class=3D"itemizedlist" type=3D"disc"><li class=3D"listitem">
Ensure the fields contained with the HDFS file and the columns within the
Oracle table are identical. If they are not identical, the Java code
dynamically generated by Sqoop to parse the HDFS file will throw an error w=
hen
reading the file =96 causing the export to fail. When creating a table in O=
racle
ensure the definitions for the table template are identical to the definiti=
ons
for the HDFS file.
</li><li class=3D"listitem">
Ensure the data types in the table are supported. See "Supported Data Types=
"
for more information.
</li><li class=3D"listitem">
Are date and time zone based data types used? See "Export Date And Timestam=
p
Data Types into Oracle" for more information.
</li></ul></div></div><div class=3D"section" title=3D"25.8.8.6.&nbsp;Export=
: Parallelization"><div class=3D"titlepage"><div><div><h5 class=3D"title"><=
a name=3D"_export_parallelization"></a>25.8.8.6.&nbsp;Export: Parallelizati=
on</h5></div></div></div><p><code class=3D"literal">-D oraoop.export.oracle=
.parallelization.enabled=3Dfalse</code></p><p>If you see a parallelization =
error you may decide to disable parallelization
on Oracle queries.</p></div><div class=3D"section" title=3D"25.8.8.7.&nbsp;=
Export: Check oraoop.oracle.append.values.hint.usage"><div class=3D"titlepa=
ge"><div><div><h5 class=3D"title"><a name=3D"_export_check_oraoop_oracle_ap=
pend_values_hint_usage"></a>25.8.8.7.&nbsp;Export: Check oraoop.oracle.appe=
nd.values.hint.usage</h5></div></div></div><p>The oraoop.oracle.append.valu=
es.hint.usage parameter should not be set to ON
if the Oracle table contains either a BINARY_DOUBLE or BINARY_FLOAT column =
and
the HDFS file being exported contains a NULL value in either of these colum=
n
types. Doing so will result in the error: <code class=3D"literal">ORA-12838=
: cannot read/modify an
object after modifying it in parallel</code>.</p></div><div class=3D"sectio=
n" title=3D"25.8.8.8.&nbsp;Turn On Verbose"><div class=3D"titlepage"><div><=
div><h5 class=3D"title"><a name=3D"_turn_on_verbose"></a>25.8.8.8.&nbsp;Tur=
n On Verbose</h5></div></div></div><p>Turn on verbose on the Sqoop command =
line.</p><p><code class=3D"literal">--verbose</code></p><p>Check Sqoop stdo=
ut (standard output) and the mapper logs for information as to
where the problem may be.</p></div></div></div></div><div class=3D"section"=
 title=3D"26.&nbsp;Getting Support"><div class=3D"titlepage"><div><div><h2 =
class=3D"title" style=3D"clear: both"><a name=3D"_getting_support"></a>26.&=
nbsp;Getting Support</h2></div></div></div><p>Some general information is a=
vailable at the
<a class=3D"ulink" href=3D"http://sqoop.apache.org/" target=3D"_top">http:/=
/sqoop.apache.org/</a></p><p>Report bugs in Sqoop to the issue tracker at
<a class=3D"ulink" href=3D"https://issues.apache.org/jira/browse/SQOOP" tar=
get=3D"_top">https://issues.apache.org/jira/browse/SQOOP</a>.</p><p>Questio=
ns and discussion regarding the usage of Sqoop should be directed to the
<a class=3D"ulink" href=3D"http://sqoop.apache.org/mail-lists.html" target=
=3D"_top">sqoop-user mailing list</a>.</p><p>Before contacting either forum=
, run your Sqoop job with the
<code class=3D"literal">--verbose</code> flag to acquire as much debugging =
information as
possible. Also report the string returned by <code class=3D"literal">sqoop =
version</code> as
well as the version of Hadoop you are running (<code class=3D"literal">hado=
op version</code>).</p></div><div class=3D"section" title=3D"27.&nbsp;Troub=
leshooting" data-find=3D"_9"><div class=3D"titlepage"><div><div><h2 class=
=3D"title" style=3D"clear: both"><a name=3D"_troubleshooting"></a>27.&nbsp;=
Troubleshooting</h2></div></div></div><div class=3D"toc"><dl><dt><span clas=
s=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide=
.html#_general_troubleshooting_process">27.1. General Troubleshooting Proce=
ss</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apac=
he.org/docs/1.4.6/SqoopUserGuide.html#_specific_troubleshooting_tips">27.2.=
 Specific Troubleshooting Tips</a></span></dt><dd><dl><dt><span class=3D"se=
ction"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_=
oracle_connection_reset_errors">27.2.1. Oracle: Connection Reset Errors</a>=
</span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org=
/docs/1.4.6/SqoopUserGuide.html#_oracle_case_sensitive_catalog_query_errors=
">27.2.2. Oracle: Case-Sensitive Catalog Query Errors</a></span></dt><dt><s=
pan class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6/SqoopU=
serGuide.html#_mysql_connection_failure">27.2.3. MySQL: Connection Failure<=
/a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache.=
org/docs/1.4.6/SqoopUserGuide.html#_oracle_ora_00933_error_sql_command_not_=
properly_ended">27.2.4. Oracle: ORA-00933 error (SQL command not properly e=
nded)</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.a=
pache.org/docs/1.4.6/SqoopUserGuide.html#_mysql_import_of_tinyint_1_from_my=
sql_behaves_strangely">27.2.5. MySQL: Import of TINYINT(1) from MySQL behav=
es strangely</a></span></dt></dl></dd></dl></div><div class=3D"section" tit=
le=3D"27.1.&nbsp;General Troubleshooting Process"><div class=3D"titlepage">=
<div><div><h3 class=3D"title"><a name=3D"_general_troubleshooting_process">=
</a>27.1.&nbsp;General Troubleshooting Process</h3></div></div></div><p>The=
 following steps should be followed to troubleshoot any failure that you
encounter while running Sqoop.</p><div class=3D"itemizedlist"><ul class=3D"=
itemizedlist" type=3D"disc"><li class=3D"listitem">
Turn on verbose output by executing the same command again and specifying
  the <code class=3D"literal">--verbose</code> option. This produces more d=
ebug output on the console
  which can be inspected to identify any obvious errors.
</li><li class=3D"listitem">
Look at the task logs from Hadoop to see if there are any specific failures
  recorded there. It is possible that the failure that occurs while task
  execution is not relayed correctly to the console.
</li><li class=3D"listitem">
Make sure that the necessary input files or input/output tables are present
  and can be accessed by the user that Sqoop is executing as or connecting =
to
  the database as. It is possible that the necessary files or tables are pr=
esent
  but the specific user that Sqoop connects as does not have the necessary
  permissions to access these files.
</li><li class=3D"listitem">
If you are doing a compound action such as populating a Hive table or
  partition, try breaking the job into two separate actions to see where th=
e
  problem really occurs. For example if an import that creates and populate=
s a
  Hive table is failing, you can break it down into two steps - first for d=
oing
  the import alone, and the second to create a Hive table without the impor=
t
  using the <code class=3D"literal">create-hive-table</code> tool. While th=
is does not address the original
  use-case of populating the Hive table, it does help narrow down the probl=
em
  to either regular import or during the creation and population of Hive ta=
ble.
</li><li class=3D"listitem">
Search the mailing lists archives and JIRA for keywords relating to the
  problem. It is possible that you may find a solution discussed there that
  will help you solve or work-around your problem.
</li></ul></div></div><div class=3D"section" title=3D"27.2.&nbsp;Specific T=
roubleshooting Tips" data-find=3D"_8"><div class=3D"titlepage"><div><div><h=
3 class=3D"title"><a name=3D"_specific_troubleshooting_tips"></a>27.2.&nbsp=
;Specific Troubleshooting Tips</h3></div></div></div><div class=3D"toc"><dl=
><dt><span class=3D"section"><a href=3D"https://sqoop.apache.org/docs/1.4.6=
/SqoopUserGuide.html#_oracle_connection_reset_errors">27.2.1. Oracle: Conne=
ction Reset Errors</a></span></dt><dt><span class=3D"section"><a href=3D"ht=
tps://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oracle_case_sensitiv=
e_catalog_query_errors">27.2.2. Oracle: Case-Sensitive Catalog Query Errors=
</a></span></dt><dt><span class=3D"section"><a href=3D"https://sqoop.apache=
.org/docs/1.4.6/SqoopUserGuide.html#_mysql_connection_failure">27.2.3. MySQ=
L: Connection Failure</a></span></dt><dt><span class=3D"section"><a href=3D=
"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_oracle_ora_00933_=
error_sql_command_not_properly_ended">27.2.4. Oracle: ORA-00933 error (SQL =
command not properly ended)</a></span></dt><dt><span class=3D"section"><a h=
ref=3D"https://sqoop.apache.org/docs/1.4.6/SqoopUserGuide.html#_mysql_impor=
t_of_tinyint_1_from_mysql_behaves_strangely">27.2.5. MySQL: Import of TINYI=
NT(1) from MySQL behaves strangely</a></span></dt></dl></div><div class=3D"=
section" title=3D"27.2.1.&nbsp;Oracle: Connection Reset Errors" data-find=
=3D"_7"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_=
oracle_connection_reset_errors"></a>27.2.1.&nbsp;Oracle: Connection Reset E=
rrors</h4></div></div></div><p>Problem: When using the default Sqoop connec=
tor for Oracle, some data does
get transferred, but during the map-reduce job a lot of errors are reported
as below:</p><pre class=3D"screen" data-find=3D"_6">11/05/26 16:23:47 INFO =
mapred.JobClient: Task Id : attempt_201105261333_0002_m_000002_0, Status : =
FAILED
java.lang.RuntimeException: java.lang.RuntimeException: java.sql.SQLRecover=
ableException: IO Error: Connection reset
at com.cloudera.sqoop.mapreduce.db.DBInputFormat.setConf(DBInputFormat.java=
:164)
at org.apache.hadoop.util.ReflectionUtils.setConf(ReflectionUtils.java:62)
at org.apache.hadoop.util.ReflectionUtils.newInstance(ReflectionUtils.java:=
117)
at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:605)
at org.apache.hadoop.mapred.MapTask.run(MapTask.java:322)
at org.apache.hadoop.mapred.Child$4.run(Child.java:268)
at java.security.AccessController.doPrivileged(Native Method)
at javax.security.auth.Subject.doAs(Subject.java:396)
at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformatio=
n.java:1115)
at org.apache.hadoop.mapred.Child.main(Child.java:262)
Caused by: java.lang.RuntimeException: java.sql.SQLRecoverableException: IO=
 Error: Connection reset
at com.cloudera.sqoop.mapreduce.db.DBInputFormat.getConnection(DBInputForma=
t.java:190)
at com.cloudera.sqoop.mapreduce.db.DBInputFormat.setConf(DBInputFormat.java=
:159)
... 9 more
Caused by: java.sql.SQLRecoverableException: IO Error: Connection reset
at oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:428)
at oracle.jdbc.driver.PhysicalConnection.&lt;init&gt;(PhysicalConnection.ja=
va:536)
at oracle.jdbc.driver.T4CConnection.&lt;init&gt;(T4CConnection.java:228)
at oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.j=
ava:32)
at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:521)
at java.sql.DriverManager.getConnection(DriverManager.java:582)
at java.sql.DriverManager.getConnection(DriverManager.java:185)
at com.cloudera.sqoop.mapreduce.db.DBConfiguration.getConnection(DBConfigur=
ation.java:152)
at com.cloudera.sqoop.mapreduce.db.DBInputFormat.getConnection(DBInputForma=
t.java:184)
... 10 more
Caused by: java.net.SocketException: Connection reset
at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:96)
at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
at oracle.net.ns.DataPacket.send(DataPacket.java:199)
at oracle.net.ns.NetOutputStream.flush(NetOutputStream.java:211)
at oracle.net.ns.NetInputStream.getNextPacket(NetInputStream.java:227)
at oracle.net.ns.NetInputStream.read(NetInputStream.java:175)
at oracle.net.ns.NetInputStream.read(NetInputStream.java:100)
at oracle.net.ns.NetInputStream.read(NetInputStream.java:85)
at oracle.jdbc.driver.T4CSocketInputStreamWrapper.readNextPacket(T4CSocketI=
nputStreamWrapper.java:123)
at oracle.jdbc.driver.T4CSocketInputStreamWrapper.read(T4CSocketInputStream=
Wrapper.java:79)
at oracle.jdbc.driver.T4CMAREngine.unmarshalUB1(T4CMAREngine.java:1122)
at oracle.jdbc.driver.T4CMAREngine.unmarshalSB1(T4CMAREngine.java:1099)
at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:288)
at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
at oracle.jdbc.driver.T4CTTIoauthenticate.doOAUTH(T4CTTIoauthenticate.java:=
366)
at oracle.jdbc.driver.T4CTTIoauthenticate.doOAUTH(T4CTTIoauthenticate.java:=
752)
at oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:366)
... 18 more</pre><p>Solution: This problem occurs primarily due to the lack=
 of a fast random
number generation device on the host where the map tasks execute. On
typical Linux systems this can be addressed by setting the following
property in the <code class=3D"literal">java.security</code> file:</p><pre =
class=3D"screen">securerandom.source=3Dfile:/dev/../dev/urandom</pre><p>The=
 <code class=3D"literal">java.security</code> file can be found under <code=
 class=3D"literal">$JAVA_HOME/jre/lib/security</code>
directory. Alternatively, this property can also be specified on the
command line via:</p><pre class=3D"screen">-D mapred.child.java.opts=3D"-Dj=
ava.security.egd=3Dfile:/dev/../dev/urandom"</pre><p>Please note that it=92=
s very important to specify this weird path <code class=3D"literal">/dev/..=
/dev/urandom</code>
as it is due to a Java bug
<a class=3D"ulink" href=3D"http://bugs.sun.com/bugdatabase/view_bug.do?bug_=
id=3D6202721" target=3D"_top">6202721</a>,
or <code class=3D"literal">/dev/urandom</code> will be ignored and substitu=
ted by <code class=3D"literal">/dev/random</code>.</p></div><div class=3D"s=
ection" title=3D"27.2.2.&nbsp;Oracle: Case-Sensitive Catalog Query Errors">=
<div class=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_oracle_c=
ase_sensitive_catalog_query_errors"></a>27.2.2.&nbsp;Oracle: Case-Sensitive=
 Catalog Query Errors</h4></div></div></div><p>Problem: While working with =
Oracle you may encounter problems when Sqoop can
not figure out column names. This happens because the catalog queries that
Sqoop uses for Oracle expect the correct case to be specified for the
user name and table name.</p><p>One example, using --hive-import and result=
ing in a NullPointerException:</p><pre class=3D"screen">1/09/21 17:18:49 IN=
FO manager.OracleManager: Time zone has been set to
GMT
11/09/21 17:18:49 DEBUG manager.SqlManager: Using fetchSize for next
query: 1000
11/09/21 17:18:49 INFO manager.SqlManager: Executing SQL statement:
SELECT t.* FROM addlabel_pris t WHERE 1=3D0
11/09/21 17:18:49 DEBUG manager.OracleManager$ConnCache: Caching
released connection for jdbc:oracle:thin:
11/09/21 17:18:49 ERROR sqoop.Sqoop: Got exception running Sqoop:
java.lang.NullPointerException
java.lang.NullPointerException
at com.cloudera.sqoop.hive.TableDefWriter.getCreateTableStmt(TableDefWriter=
.java:148)
at com.cloudera.sqoop.hive.HiveImport.importTable(HiveImport.java:187)
at com.cloudera.sqoop.tool.ImportTool.importTable(ImportTool.java:362)
at com.cloudera.sqoop.tool.ImportTool.run(ImportTool.java:423)
at com.cloudera.sqoop.Sqoop.run(Sqoop.java:144)
at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:65)
at com.cloudera.sqoop.Sqoop.runSqoop(Sqoop.java:180)
at com.cloudera.sqoop.Sqoop.runTool(Sqoop.java:219)
at com.cloudera.sqoop.Sqoop.runTool(Sqoop.java:228)
at com.cloudera.sqoop.Sqoop.main(Sqoop.java:237)</pre><div class=3D"ordered=
list" title=3D"Solution:"><p class=3D"title"><b>Solution:</b></p><ol class=
=3D"orderedlist" type=3D"1"><li class=3D"listitem">
Specify the user name, which Sqoop is connecting as, in upper case (unless
it was created with mixed/lower case within quotes).
</li><li class=3D"listitem">
Specify the table name, which you are working with, in upper case (unless
it was created with mixed/lower case within quotes).
</li></ol></div></div><div class=3D"section" title=3D"27.2.3.&nbsp;MySQL: C=
onnection Failure"><div class=3D"titlepage"><div><div><h4 class=3D"title"><=
a name=3D"_mysql_connection_failure"></a>27.2.3.&nbsp;MySQL: Connection Fai=
lure</h4></div></div></div><p>Problem: While importing a MySQL table into S=
qoop, if you do not have
the necessary permissions to access your MySQL database over the network,
you may get the below connection failure.</p><pre class=3D"screen">Caused b=
y: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications =
link failure</pre><p>Solution: First, verify that you can connect to the da=
tabase from the node where
you are running Sqoop:</p><pre class=3D"screen">$ mysql --host=3D&lt;IP Add=
ress&gt; --database=3Dtest --user=3D&lt;username&gt; --password=3D&lt;passw=
ord&gt;</pre><p>If this works, it rules out any problem with the client net=
work configuration
or security/authentication configuration.</p><p>Add the network port for th=
e server to your my.cnf file <code class=3D"literal">/etc/my.cnf</code>:</p=
><pre class=3D"screen">[mysqld]
port =3D xxxx</pre><p>Set up a user account to connect via Sqoop.
Grant permissions to the user to access the database over the network:
(1.) Log into MySQL as root <code class=3D"literal">mysql -u root -p&lt;Thi=
sIsMyPassword&gt;</code>.
(2.) Issue the following command:</p><pre class=3D"screen">mysql&gt; grant =
all privileges on test.* to 'testuser'@'%' identified by 'testpassword'</pr=
e><p>Note that doing this will enable the testuser to connect to the
MySQL server from any IP address. While this will work, it is not
advisable for a production environment. We advise consulting with your
DBA to grant the necessary privileges based on the setup topology.</p><p>If=
 the database server=92s IP address changes, unless it is bound to
a static hostname in your server, the connect string passed into Sqoop
will also need to be changed.</p></div><div class=3D"section" title=3D"27.2=
.4.&nbsp;Oracle: ORA-00933 error (SQL command not properly ended)"><div cla=
ss=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_oracle_ora_00933=
_error_sql_command_not_properly_ended"></a>27.2.4.&nbsp;Oracle: ORA-00933 e=
rror (SQL command not properly ended)</h4></div></div></div><p>Problem: Whi=
le working with Oracle you may encounter the below problem
when the Sqoop command explicitly specifies the --driver
&lt;driver name&gt; option. When the driver option is included in
the Sqoop command, the built-in connection manager selection defaults to th=
e
generic connection manager, which causes this issue with Oracle. If the
driver option is not specified, the built-in connection manager selection
mechanism selects the Oracle specific connection manager which generates
valid SQL for Oracle and uses the driver "oracle.jdbc.OracleDriver".</p><pr=
e class=3D"screen">ERROR manager.SqlManager: Error executing statement:
java.sql.SQLSyntaxErrorException: ORA-00933: SQL command not properly ended=
</pre><p>Solution: Omit the option --driver oracle.jdbc.driver.OracleDriver=
 and then
re-run the Sqoop command.</p></div><div class=3D"section" title=3D"27.2.5.&=
nbsp;MySQL: Import of TINYINT(1) from MySQL behaves strangely"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a name=3D"_mysql_import_of_ti=
nyint_1_from_mysql_behaves_strangely"></a>27.2.5.&nbsp;MySQL: Import of TIN=
YINT(1) from MySQL behaves strangely</h4></div></div></div><p>Problem: Sqoo=
p is treating TINYINT(1) columns as booleans, which is for example
causing issues with HIVE import. This is because by default the MySQL JDBC =
connector
maps the TINYINT(1) to java.sql.Types.BIT, which Sqoop by default maps to B=
oolean.</p><p>Solution: A more clean solution is to force MySQL JDBC Connec=
tor to stop
converting TINYINT(1) to java.sql.Types.BIT by adding <code class=3D"litera=
l">tinyInt1isBit=3Dfalse</code> into your
JDBC path (to create something like <code class=3D"literal">jdbc:mysql://lo=
calhost/test?tinyInt1isBit=3Dfalse</code>).
Another solution would be to explicitly override the column mapping for the=
 datatype
TINYINT(1) column. For example, if the column name is foo, then pass the fo=
llowing
option to Sqoop during import: --map-column-hive foo=3Dtinyint. In the case=
 of non-Hive
imports to HDFS, use --map-column-java foo=3Dinteger.</p></div></div></div>=
</div><div class=3D"footer-text"><span align=3D"center"><a href=3D"https://=
sqoop.apache.org/docs/1.4.6/index.html"><img src=3D"https://sqoop.apache.or=
g/docs/1.4.6/images/home.png" alt=3D"Documentation Home"></a></span><br>
  This document was built from Sqoop source available at
  <a href=3D"https://git-wip-us.apache.org/repos/asf?p=3Dsqoop.git">https:/=
/git-wip-us.apache.org/repos/asf?p=3Dsqoop.git</a>.
  </div>
</body></html>
------=_NextPart_000_4831_41CE522A.34C6271F
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://sqoop.apache.org/docs/1.4.6/docbook.css

body address { line-height: 1.3; margin: 0.6em 0px; }

body blockquote { margin-top: 0.75em; line-height: 1.5; margin-bottom: 0.75=
em; }

html body { margin: 1em 4%; line-height: 1.2; font-family: verdana; }

a { text-decoration: none; color: rgb(28, 132, 191); }

a:hover { text-decoration: underline; }

a:visited { color: rgb(89, 126, 147); }

div.titlepage .title { font-size: 26px; }

.legalnotice { font-size: small; font-variant: small-caps; }

body div { margin: 0px; }

dl { margin: 0.8em 0px; line-height: 1.2; }

body form { margin: 0.6em 0px; }

h1, h2, h3, h4, h5, h6, div.example p b, .question, div.table p b, div.proc=
edure p b { color: rgb(20, 139, 207); }

body h1, body h2, body h3, body h4, body h5, body h6 { line-height: 1.3; ma=
rgin-left: 0px; }

body h1, h2, h3, h4, h5, h6 { margin: 6px 0px 0px; }

body hr { border-width: 0px 0px 1px; border-style: solid; border-color: rgb=
(0, 104, 187); }

body img.navheader { margin: 0px 0px 0px -4%; }

ol { margin: 0px 0px 0px 5%; line-height: 1.2; }

body pre { margin: 0.75em 0px; line-height: 1; font-family: monospace; }

body td, body th { line-height: 1.2; }

ul, body dir, body menu { margin: 0px 0px 0px 5%; line-height: 1.2; }

html { margin: 0px; padding: 0px; }

body p b.application { color: rgb(0, 0, 0); }

.navfooter td, .literal, .filename { color: rgb(0, 122, 0); font-family: mo=
nospace; }

.guimenu, .guimenuitem, .guisubmenu, .guilabel, .interface, .shortcut, .sho=
rtcut .keycap { font-weight: bold; }

.guibutton { padding: 2px; background-color: rgb(207, 207, 207); }

.accel { text-decoration: underline; background-color: rgb(240, 240, 240); =
}

.programlisting { padding: 1ex; border: 1px solid rgb(204, 204, 204); backg=
round-color: rgb(238, 238, 238); }

@media screen {=20
}

.note, .screen { color: rgb(34, 34, 34); border: 1px solid rgb(204, 204, 20=
4); padding: 0.4em; background: rgb(255, 255, 255); }

.screen { background: rgb(238, 238, 238); }

.tip { color: rgb(0, 79, 0); border: 1px solid green; padding: 0.4em; backg=
round: rgb(255, 255, 255); }

table.cdh { padding: 0px 0px 8px; }

table.cdh th { border-right-width: 0.5pt; border-right-style: solid; border=
-right-color: rgb(173, 182, 205); border-bottom-width: 0.5pt; border-bottom=
-style: solid; border-bottom-color: rgb(173, 182, 205); padding: 2px 8px 1p=
x; background: rgb(237, 242, 249); }

table.cdh td { font-size: 12px; }

div.breadcrumbs { border-top-width: 2px; border-top-style: solid; border-to=
p-color: rgb(0, 104, 187); font-size: small; padding: 0.6em; background: rg=
b(237, 242, 249); }

span.breadcrumb-node { font-style: italic; }

div.footer-text { border-bottom-width: 2px; border-bottom-style: solid; bor=
der-bottom-color: rgb(0, 104, 187); font-size: small; padding: 0.2em; text-=
align: center; background: rgb(237, 242, 249); }

.important, .caution { font-style: italic; border-width: 1px 1px 1px 12px; =
border-style: solid; border-color: rgb(170, 0, 0) rgb(170, 0, 0) rgb(170, 0=
, 0) rgb(204, 0, 0); padding: 0.1em 1em; }

.warning { color: rgb(159, 19, 19); border: 1px solid rgb(229, 149, 149); p=
adding: 0.4em; width: 85%; background: rgb(255, 255, 255); }

.example { width: 100%; }

.tip, .note, .caution { margin: 4px 0px; }

img { border: 0px; }

.informaltable tr { height: 10px; vertical-align: top; }
------=_NextPart_000_4831_41CE522A.34C6271F
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://sqoop.apache.org/docs/1.4.6/images/home.png

iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAABmJLR0QA/wD/AP+gvaeTAAAACXBI
WXMAAAsNAAALDQHtB8AsAAAAB3RJTUUH0wkJEw8Iv0VgDgAABMlJREFUeNqFldtrXEUYwH8z58zZ
c/beXBrTyyYx2iKhbdyoWAqiFZHS6oOCFKs+CAF9848Q+heIwgHFJ1+KCL4IFUW8UY1bY1st1aZp
0kuyySZ7ycnZ3XPOjA/bq7b6wccMwze/7zLzzQj+Q8pvzyowg6CHMSYNBjAhRi8p3aye8p/r3m+v
+A/ofuAVMJMISgiVAUB3NjHJIjArdHyibD783vf95H/B5bdnx0G8g6VezWbSxQcG8nKo32X3QAtP
JVxcyzJf1ayurOi1RhjqOPxemY1395pPfvR9P77Jsf4BHQHxHk7+2ORDee+1g1vE0QMWR6Zsas0u
Xsri9WeyHNglmBjxRCxc5+q6GY8SnlxjbP5Q2ZurVCr6LvCNSN/L5vPPv7i/IN542uPhYYuUsvju
XItnJws8tM3jy9MNSltdBvI2e0YUQ1sUl6pmoNkWj9XMWOXQlHelUqmYW+Dhx986jpM7eviJonhh
SuEoSTc2/Hox4Kk9eQpZG2ULtvc7fHe2ST5tY4xhW58il1bi9ytJf7tr1DZOn5yamoqsXrS/7BdW
6vi+8bx7qKyQErqRZm6pzWO7sgwUFJYUCCFwbMFgQVH5awPH7jnvy0qCrs3CSjS6kuycHeKPS1b5
rRkFvJPL5Z56djIjtmShExlqrZh9D2bYMZDCtm6fsRACLyUpZmzOL4ZoA+1I41hd5pa1E7TjyIob
39rAIDCZzxdk0Y1pBhLbEuza7jIylMKS/76RUgi29Ts8Op7h858azCwWaIZpWmSlpj7RFKWSBIYR
sjSQE4RdzUaYMDqUYvfO9D2hd8rOrSn2jPcRxi4rQQrsDAhrGMspSSCNTGXSKqIeaLYWHSZG0nel
fz+xpGD/Lpsj5dtlQqY8ATn7plGzrVhuGMxCzEanSc6zOLgvi+v0HNQDTT2A2Eh29IGrwP8aLlUF
yw0Qgl7HAwItbTAhurO5HHgEiculOpy6DA8UJQcmwHV6xp/OSD76pjf/4E2Y2AG/LcCvl29GS4+c
tNvCxB0bo5eAxcamHkuEdyvNbPSPjjf3L4ltgQQ2wg6YpCp1sCSVblaBWTprWlkG54Yqy9xNu0fJ
XTshrRJcO8GxE0S3pm3aF4rm8nV5yn+uK3R8Iuk0GipZZzAdsDUdsCW1yWZH0wo19UDjyjZjxRZj
xRZJEtMKNcVUm+Fsz14l6+j2euAmyycL1uqaBXCkLK9cY++YMPFUadAmn4qRRJxf7DDzZ8hXv21w
dbVDVkVknYj55Q6Vi22aQQfPirFFxOL1Gp1g/Ys94rOPgaoFUKlUzI7ysblOxCNaJyPb+y3hOQKt
NYnWKGlIKUPK7o1we10QcWGhqWtrjZn+5Nz7RXHtHNC69QgdLqtazZRmGqE90dyMR3NpRV/OxlES
xxb/UmXBaiPizFyDpZXmzGB8+nhJVn4GVn3fT26BK5WKOTSVXquZ0dON0EqvNKLR1mbsuHYsMp6N
LSVSgDEJtfWAs/Ob+vxCa6Neb37Rn5x7/wa06vt+dM+znp6elkDmDC8fjGX2JY2akFIM5zzLA2iF
SVsnumrTvuAmyyd3yy9/AJaB+p0/yD37dnp6WgBONRktNkWphOWUBOQEWgoTd6QOlorm8vWCtboG
tIDQ9319J+Nvy7QldhQPXPoAAAAASUVORK5CYII=
------=_NextPart_000_4831_41CE522A.34C6271F
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://sqoop.apache.org/docs/1.4.6/images/note.png

iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAIAAADYYG7QAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAACihJREFU
WEftmAtQU1cax6u1uq2OM1arLlbF9YXKqLuz7UwfttUuS7tt6a7WjrRVa5XtCrooVBRBXvIssAjK
Q1FQeSUQHgLySAIh4SGElwlJSEKSe5N7b573FRXd7WO7X2BEZ3c7lJSd6c70m//cOfeew7k//uc7
59yTGd99990TP6kAoJ9UPPGTonEN189AkzgwNYe4XK6vr++zYwEFuJ12g6cAFB4evnv5gsHDu9Uf
vKb8nXf7K55wCw+nl+mHAoEZ8PqR/b6qd34r27x4aNOzyi2LNC8thYccDmcamX4oEAyQ7POd2j1v
DHk/q/z1c+oXlmhe+qVum0fv79ZB1T/HYlqwfigQJA0a/JEKUF5con3ZQ7/teWT7CqOPJ35gB1R9
880340w/HmtyIFjGZ8yY8cwzz+j3vDryiof+9eeRHStMvp74O6st76+1Re6Fqn9b6qH9zJkzn3os
5s6dC9yLxwIK8+bN+z47JweC3p12+RvbXpC+uQ59cyXmu4p4dwxllxd58CV95MHFixcOdJQgyjrS
KLxna7/v6HxAdrlE9TzULVeB7v070w96QPcvXLjw+7ycHAj+T4eu7FzcLshfo6+n5U/rbbs3kP4b
2dA/UMlHwnxf+8WcpyRVn8tbgo3SU3b5GUoZRauiaVXsIw3H05ovmZEsVpcLYnQ5Hh4eMMr/1aTJ
gZ5++mmHjqvtijng/yowyd/zdgTtYJIPI1EBAb/xCly9cPbsJ4XcQ7cFwYbuMJssEoBIZQyliqfU
KROitZmMLo81XGGRQriuWrXqq6++chNo/vz5Nh1PJ03q5Ud5rfV44bn5C+bNBb29Zln25iVNLy7d
usmjpmCftOGI7tYp8yDQxJHKs9Rw0oRoTTq4AhxOpMiJlrBokZeX14MHD9wEWrJkicNQjQ6kyyWJ
eWn7Z8+eBRCG7ctBUJg1a2ZwwLaS7I8lVUFqSTg+GEOqEklVEqVOozVZE2L0+SzQGDlOI9eJcry9
vUdHR90EWrFiBYXUYfLzyq60jrrItJjdWzYte2rWzFlPzoTJtf3lNRHBPgUZ/nxuYG/jF/qeaIss
0a5MoTQZE6JHshl9AYuWOU0VTlOl08TbsmXLvXv33ARavXo1gzXiirzhnswefvzN0uPXLxzISdr9
rs+mdb96zs/XOyb07auZe5u5R6TNJxXiKKQv0SJPdQxnAseEGMN11ljuNFU7TTVw3bp1q/tA69at
Y3EBoSrQ9V8cFKe1Vp+uuRZYnP1pVvyu08G/DwvyyUz4sDT3Mz43eEAQqe46a+hNMg2mEkP/CcRz
YjVOrBaYNm/efPfuXTcd2rBhA0u0WjXFiOyKojOzpzlOwAutKwqqKvgL91JASc7B0tyA6mtB4pqw
fkGUQhI/0p2Cy88RiguPHDIUM2glY+KzploWq2exWsgh94HWr1/P4iKrpgRXFmn7cmSSlO6mM5Ib
YS2VIQJeSAvvC1H1yc76iO6GM4r2RGVHsr433XQ7y6LIcwEZisc1BgQooJsMVr9x40b3gZYvX37H
LLZrSy3qYvT2ZU3POZk4cbAlto8f1ceP7hfG9gvj5OJE9a1UZCATGThvlGVDwtk1hZS+hEKqx0Uj
PABiMCGLNTOmRpj27gMtW7bsjkVC6rkWdRmhKkQGsnXSdG136nBXiqY7VSf9m7Y7XSvN0Pdnobez
CcVFRWcGvzKKNFSP65bwwk1eslVXR5sEDN7K4AIGa4K8dB8IHLpr6yINPLu+wqouKb10XNuTUXU1
pJ4TSwwXm9WlZVfCjwfurC4KwxT5UmHqxXPHQ4/sloryKPRm6tnAimtxnfycpJjDDM6nAYhoZUyC
tWvXug+0aeP6ew4pbaqjjTV2Lfd8yuepMfuKLp4ouXSSUxDeL87OSgkk1Jz0hCNS0eXW+qzC3IiK
ogQSvQkKO/aRA6mnjI3X8iJpQsjgYoZoAyxYSqYHyKbhcAvCPvvY16opA52N2Jeb/tdBSa5Zw0WG
Ss5GHHDoq3pEl6tKk4HGgTYnRh8OOfpJTkY4MlRHE6L/CVBbfWJI0K5xoAupQV8c/UDWkQdABnlx
zKn9LqDWXE5hNABdy4torEyz6WvFjdnaQd70AMGO8/iQOfS16t6rR//8/jhQxdUISKCY8H0l+eGR
Jz7pbbsMQP2SS4W5pwDoQtpxSVO2yyrkpkLKGQOSMITkRw2Z2Wx++63XR8lBJ9FMmxootMahKzcM
5tt1vIeqxFXcAcklTFXuMNSQSC2urrzBSYa8seoar12MzvwyNCPpmKAuh8YggdoZswQK7udQX1/f
Xn+/UUruJFqdkJUYMFXB95pdW2TTXLdqrtu0JXZ9jV1XbdffINE6Eq0nUWjTRBn5j2QSUlgrjUto
ooPGOwDI09PTzb0MjjgnQw6O0kqnWeIk2hismUJvkIYKh45j05ZZ1LBallk0HIuGaxupgPEiDS4s
CpgAyNQyIRqTMIBCdLiuuAQ+0NwESkhISEsKuc8MOy0drFnMYHx4n0NXadeVAwc+XGZSgqBQbtFW
glUOA5gEDoE9wkcytblQiFuMudt1xTtgYXQTKCDgUHlx2iijdlo6WUJMYwIYFIe+2jbCI4YrjEou
Iucgcq5RySPUNTZdrcPQQKJNpAuohcLEE6KJTsbSw1r7WEsvY+6CzdUdoJaWljVr1jiI26OMhjV3
MJiIMvFJpN5huGEdqSbUVaiiwiArB6EKF5B1BIBgPWyC4wdpEk2IwjoYSzdrlrLWfqelD0xyE6io
qCj8RMAoPcwSXYy5ncJFFCogkUaHoR7MMGtqTKpKZKgCBAW4tenqHAg4xKfQVvCGIaSPC7wBGtbc
y+BdsNvfuXNnCt9D44emEydOtAkrR2k1Q3RBJlKmVhJtJpEGALLr68APgMDV1SAowK1dXz8G1Owa
L5OYIjonBMPEmnvAJ5q4RWHtMMucTufUgIBp6dKl9yigcc0LVV/lUHdZ6ZXYzJRjh/a/d3DvO8cO
fxh96sD1vNMDkoLB9gJABFDAHRsyAWUSwfSeEJC55hfWLpdWcAqTFyxYwLLs1IC+/fbblStX3iWV
+Tkxl86f2em340hgwOmTxxMS4hLiY69cvnjh/LnExNj4szEf7fmj31sv79m549Cn78WeDigriFP0
lLnS6KHk3eX8utycc+EnQz71/+Ct7a+/mJ+fP+Uhg5MlHIDgzLto0SI/P7+cnJyqqio+ny8QCEQi
UXNzMxTa2tog8RsaGpqamqA2NDQ0KirK399/zpw5cLzcsMFrXJDCPj4+R48ezczMFAqFMplMo9Hc
v39/Cg5B06+//hrOcjRNw+6BoqjBYEDGQq/Xj4yM6MZi/CGGYdDGbrdTFAXtYSwYhrFYLI6HAVXQ
AMfx8ZYkSYI90L87QNC71WolxgIK0Nf4W+GVUAX9QsCXDSwq8B//47GAh7AxjwdUQQPI4onGcI6G
lJga0LT8+uRGJ5P/2OBGpz/mT34Gmsy9nx36v3PoX1H4mIUGLCOSAAAAAElFTkSuQmCC
------=_NextPart_000_4831_41CE522A.34C6271F
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://sqoop.apache.org/docs/1.4.6/images/warning.png

iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAIAAADYYG7QAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAACopJREFU
WEfNmWlUVOcZx598az/1NB96ek4/JHY56eLxWDUmSjQeI/FESVxSl6ClptYNCdZjoknVQIQg1TRa
tyJS2RQHZRsWEQUXQBxAYURgZpgBZoa5M3Nnu7OAJq1L/8ON15c7AzPxU9/zP5zLMPfe37O8z/O+
Ly88efKE/q8GgKIZjx8/fvTo0X+fjv9EPcQ7cC+eEM2LKJov4VlOpzM+Pn7VqlV/GB3vRz1WrlzZ
2Njo8XhgQjRMkYHwFJfLtXXr1p6eHpEen4QdcEPosFgsa9asqaqqstls3377bUSmCEAizcaNG61W
63PQgO/hw4dDQ0MJCQlgwkMiMk0EBBqO45KSkkQaySvffPPNA2bcfzqkdJH8BBppIHbRMI0LJPmG
dQxQ3G63Vqu993T09fUNMMNoNDpGB74GFOSNBAQ/rV69WqlUTuyn8ECibxAp1jEjIyN4df3Jk9VE
0aj7889ZD+EaLly7dm1dXd0ETGGApEixNMPDw7C+/IsvqogkRcTqTkmRmKSSsWTJkgmY5EAizebN
m2W+GRwcLN27V0nEqpIoorpSUyUU6QKxq62tDeunMUCgMZvNiYmJ7KxGpDDhlWlpFUTPIRhwd9eu
UKb33nuvoaEhlOkZECDw4m3btrE0iBTSturLL8uIQnWI6GWiF0Y7TyxRJtE5ovJwUu/ZwzKJdX7Z
smWhfvoOCBAISnJyssw3oClPSSkhYnWUaP6oXiH6es8mp1nvdfP5R9J+SjSb6C2iDURniUrHqmP3
bjDJWs6KFStkfgoCAUKv12/fvj00UqA5T3SB0QGiHxO1Xr9YWZwLxygVOcMBv+C0N9ecOZKSrFHf
Muo1H2/58yKiwrFmwKQ727fLgEwmkyx2QaD+/n6ZbxApjUaDSCmIiscqhqhP3TwS8Nstg5mfbamv
VPjcDnu/+royuzDrgNvB+QUXb9J+MO8XyaM3wh5Wdz79VMaE2o15h9iJvSUI9Oqrr8p8o1ara/bt
Q0LIBD4AmXTqgOAyadpzDuxqKM8VnBynUzVWnCrO+RowAj/Ur246+NnaHxH9GjEdfQhulNS+c6fI
hNeLw2AwzJ49W6VSoQcHgdC52bYA34AGSRBWyBJzX6eLM+huVZ1I2dRQdkpwWDhNS7My53z2QcFl
5wfvVeVlVl/IdfHc1ZrSnxP9g6horG3tn3wi0eDC7/fHxsaWlJQggmOAQN3d3V2dmnqGaDzNIuIM
ateQTnuz4vjedfUlWaNAN5uVJxUnMjwOKz+grj131G42+AQPfu7/aH1qONvadu+WmESg/Px8pPIY
IHRJ9Kl8ooLxJQI5zVpNU/mRz+LrFMcE3sz1Nt0oO150PA1AyKdrZTnOIb3HaTdqO/ckr90xmuCs
RGsRFpFJBMrNzcWkfgaEFi0C5RFNoNeJLIa7zqE+TUvlsZQPAeS2m8xdN66WHC08kurmOZuhMztt
C/LaxQ32ttUnJ8RuJ4KRrESDJSCfzycHEhcMItBpIlaY3KwAZNaph/o6e1qqS06m1xdndbdeVTdV
VuQeKDqW7rSaOL36RMoGu0nrtBh6VLVJa+f/dRwLRSCsICIA/ZtoAr2GWabtMPW2ae9cb7lUprpS
cateebvxYn1FUXFWZmfTRXOv6lT6Nt6kQ+L3BoFiMf9lRoq/Agg0kYFOEUk6QfQl0d+I9hClEGUR
BYF0nYLT6vc4A173sF8YDngDPsHrcdk5o6ajpaOpJitjh82k5c3a7ls1ifFvfkSUw0iyNlqgk0SS
/ojYp6fk/evwgfS98XNnLiD6GZFe3eS2DQq2fr/LEhD4EZ/nfsB7fzgwDC6Xw2zorcg/NtDdyuk7
ulqqAJTEWMhaGxkIjR1FCG6QhOI20HPX7/X4BDcioPhqH/pXdW6msavJrr/t4foE3uh3WYe9rvsB
34ORwLDfi8LNm/TGey369st3rl1Yt+i3AGKNlK4jAGElJQIhTJJ+R9RcW+lxO2G8X0BNNnYqzyQu
BNO+3psVNsMdj63f5+R8Lh7hg5OgkYAX3cNjHbDqb9+uL163aFIiYyFrrQTk9Xrls0xc14lAx4gk
/QVtNf+UgzP6XHa0dMHtdHCDzVW5h3e+f+jj9zWqi7aBe17e7HPZ0ExA82Bk+H7Aj/QSrAa7oaPt
siIhbtIWouOMJGtFIGwXIgAdIRKFZcZXRNOxwmptRFFBRfa6bF63E37SttXlpG/YlTCzKu8gqgD+
5Pc4RgK++8P+gM8j8Ca3RcNpVY1Vp1fPp82Mhay1ABI3L+MCoQ7BQ/8kYoXHHdyRZDP0uLgBNE6v
k/O6eAdn0qhq7lwu6Gqq6G1t4AY0PjePsGLS4cJjNaCBDKqvXT5/bPWbtOmphZKp4kVkIERNp9Nh
HcgKrXEyFvZ5WRbDPZQWWO+Fq5xWt33I1N1i6Lhq1rTyRg0aCFLH53EgWA5Tt/Fek/pG2YWTqStf
I4RMZqT4a2QgrOh4nj+/cCEgWKE7/p7oWrWCN/Z4RCbeHIyLzcQb1DZDh8PUI9hNKE6CbdBh6rVo
27StlxqVpwu+2pH0On081kLR2htJSRGAxDUvajnW+UULFiB7WKH8v4Ql39Vym77Djdlu6xeseoHT
CZzGPdSLjIFjUAWw9rBo2w0dDTer8itz9+dnbN74YrCiyiysX78e0ZB2v4IgjJlly5cvl+0KsIY8
+9ZbWK2y+pRoElFDabZN1+Y0drmHejyW3lFpPEO9LnOPrb8TmaVrr7tZU1CanVaevXfJS/Th6ENY
25SLF4utUwRC4gJo4cKFz7r9ggULQrcpYFLMn/93IknYVOwi+g3RnBdJo6rGoozvv20ztHF97WaN
ynC3sVt16XbDhVrFoaIjO88dSl72S3pntPOwD6lLSECkRBrpUECcZVgPYekYXH5g1x0XFyfbpqBC
4M+F8+btJ2KVTrSe6CeYJqmJuraLA+oGVKOOq6WqS0XNylOXzxxUHE4+nb4ujmg50b7RvZGk8sWL
Q2lwSjBjxoz09HRs+0ESBAoEAvh06dKlodsUMBXMnQsrWaURoRvgfX96mX449jjwB0S/IoonQkXF
VMhgVBYXJ9JIjsEFjiWwmk5LS1MoFGAASRAIX8KKpKurCzsSrGpluwIcMOTOmQPHPJ9ES0oXLQIN
EllGM23aNJEGbwcDvvDdRlFievfdd0O3KUE/zZkD/0cpuJBVyTvviJsIlgb+CKUJnsBKZ4wSE/JJ
8pO0DsdqNzcmBlFg9QVRRKGqhdLAH7NmzZL5RiQZc9jAMrW1tbE7FVxj3uXHxKCoRK/i2NiwNPBN
RkYGGynJL/LjGDZ2OBCSMSEHz8TE7CWKRmffeCOUpr6+fvr06WF9E8ZD4kcSE3a4V65ckZjE9S9G
2NPWsB/Kshjnw1OnTp2ARh6y0HzCvAOThCK7YI8+Zdds/orXoEG9GS9S44YslAknJoWFhaFM49GE
ouATpMvEkYoMxMYOZ/jnzp1DnZAGin3Yga4kG/haeXn5zJkzI/pm3BySYFmmt99+G+F/5fuPKVOm
TJ48OTMzM+ycYt8VFZDEhDqGXlNQUJCXl4e2/L0G7sK9eIJYi0Mh2E8i/69DZEKXwX8tULJxQIEi
+b0G7sK9eAKeMzEN/vo/qlYSUg+t4IgAAAAASUVORK5CYII=
------=_NextPart_000_4831_41CE522A.34C6271F
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://sqoop.apache.org/docs/1.4.6/images/important.png

iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAIAAADYYG7QAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAACd9JREFU
WEfNmWlQVUcWx5ssJhbGGLYErCQKCQWUfogVzaIfEk1IiCAgBK0KIxIfsgybKET2oMiiMipGETcE
BuEhYIhDubxyq6jgviDuinGJ46jJuOvo6Pwejdfr23xYmaqcemVdb/c9/e9z/mfpxubhw4fiTyUA
+lOJeDY0Dx48+G+H3Lt37z8q4b+8ZPTZ1Ord1dUvJZRL7e266dMXBQYmCiF/Wb17l/r7bykru3bt
2p07d54ZWRcAKVBq4+IUHMYP8U5OS5KSLl68ePv2bWB11VrWAkIv2tcVFlqAIocShBgvRLSj4+ba
2qtXr2KtLjnRKkDSRzMHDVKj+asQER1rxz7ymno0Roi/CPFjUdHly5dv3bplvameDgg0F0+ehCLq
9aKEGCNElIPDVH//BampFTk5c318mDDhueeUadEdc6Z/9tmFCxdu3LhhJaanADJGg0c0QoTb2RVp
NJs3b25tbW1vbz/dIa3btlXHx+e8/XZy9+4SlsRdOHTouXPnIDvh+FRKWQJkjAZHhAqRPnw4UI4e
PfqLKTm8cyfhluXsLK0lMeV/+umZM2eswWQWkEk0GGZxQcHu3buxBwtYkIqxY3P69El68UWJKUyI
xXFxZ8+evX79umXfmQaEYTHvwoAAhRDYRmNvX1dZefz4cfRaIz9XVGQ/Yh6YxgpRV1Bw/vx5+HT/
/n1zvjMBSEa4NjZWQUMcjXdwWFFefvDgQdhgvTRMnpz62mtSz7dCxNjZNet0MkXhAZM52RAQaIB/
eONGBQ0sZnPFycnwl/11Vaqjoia9/DLa4jocl+bhceTIkStXrty9e9ekkQwBAZxUpg5ydjYzImLX
rl2/mpKsrCxfX19vb+/U1FTjcQL++L59swcPlmTC7xB8QXT0qVOnyJkmyfQEIOms1Xl5inkihUjy
9Ny0aRMsRruBJCcnR0VFBQQEeHh4dO/ePTIyUpnwT5Xs1+m+f+utRBsb1JJI2eHmpibQ37x50ziJ
PwGI4V+PHVPQYGSy7aqamra2NvUCyrOfn19wcHCvXr2UhoohKGIsP6alpdnbS80QIMXdHZ0kcWPH
PQYkI6s6JkYBxJf5wcEEuck1eDlmzJgBAwYoaHj4lxm5dOnSrI8+SnrhBZRj9XAhVpaUkFHJTAaO
ewwILp8/elSd+CmQLS0tRLjJVYi4sLAwLy8vNaD9+/eztklpXb+ezITjZJRMcHPbu3cvu5LVV4m4
TkCYB+upzcMmSmJjDxw4YG4BIiUkJKRPnz5qQHjBgpT6+qY7OEh2E3Ha4uITJ04YsLsTkIF5SDwU
zubmZoLc3AIACg0NNQDESwvSqtNR6ZS0lOjqCh+gnTot6QFJ9vxj6lTFX/QVxdHR8M6c9t86ZNq0
af369VMsNHDgQPnegiweOXLiSy+xEN0LKcDYSHpAuJAIzHBxkYD05nF03LJlCw42Vv27ShYsWDBi
xAgbGxuJKSYmRj1q8vnQxo1KPYEVKe+/L4MGJsk8KWTuwZiKecbRMISEQE8Djf82kq1bt44ePdrZ
2VkC0ul0xnOM3ywJClKMBJM2bNhAnqToygKnBwS6qqgoCYjcgyXX1NdTsBRd8M6kELSkIkmj3r17
m5tm8H5HTc33b74pl8NIcxISKEpwQ3ZLAn9RfjOcneUMynJa//579uxRtLCqBcFrnp6e3bp1y8vL
szxTPZr77rsptrYsB1knvffetm3biB5JbYG/fmlrU/wF5NKEhEOHDvE9ZrRGRo0aFRQUZM1MZc7f
w8JkuEFtctLatWuJf1bEa4L0s2nRIsVfOPXnNWtgGWb7fwjRg7RUVmIk2VIC6G8dCY/8gtcER4KK
iAgJiLY8xtGRMfnZHysspBZoJKsb5TZr5EhyHuUWrwnM8MNXX0lAeDR76FBKjMHH5v5L7k9MTBw2
bFhgYCD9iblpLGMsVeHhGa+/zqJk7dh+/davX09DARgBeYu//FIB9ENsLLnHpArjl/QbRJmLi0uP
Hj0GDx5sPIH4NSeNKSkcBGTai/byampqOnbsGGAEyWbOF18oQViVn49eC4rUQ/3791eSEJFv8BXs
tCC7tFrJa2pteM+eDQ0NVGvACOwx29tbATR99GjLitSjPj4+9vb2MitiIWVIfR9i7nm3VjvV1fWx
Iaqq9u3bB68FGUkBBIdiPT3hsjUamQOHhgwZItHwzBuSiJWCy6b07SsBaVxcKioqqCF0FnoLVaek
yIF4IUKEaFq2rEuqJQJSSJdk9scfyyjTH7Dc3ZcvX94JiPqwqaZGSYxk6iAhajMzrdcub66sl1PN
zWVff535xhtyUVrspM8/12q12FjvMvIjZ79sT08FE3biR01uSEy8fPq0hZUoPV2SPVptqY9PnofH
d6+8IpcjxPQH7YyMlStX0u3oSQ1jaFLXNTRMsrNTMKkfZn3wwYaiovaWFvXa1t+7/XbmzP6GhuXj
xnHwmObuzr/qqwgOEQl+fvPnz1+3bp2sHvrSgaHIzrVLl058dMo0QDbh+ecznJymurktDQqqi4vb
Wlra+tNPBxobfz93zgAZL+WvWqOpGT+eOOIryEsOpHmVtYI4xzBjO7rYBF/fwsLC6urq7du3d2Zq
uEJ+5NqA5I0jMz/5xKSdlJcTu3Wb/OqrMCDd0dHCDwRpdnb6M2vHcUxxEIEMDkr4t05OE0ND8/Pz
y8rKSNNkRfylr2Wyf4XadEk0XCtWrJidm5vm4zOhZ0/LyKwZlcYgUMCBScBB9xft5jbxm2848hYV
FZWXl9PWwR4ONp3th2xhSbIABNOOHTvI4swrLi7OiY5O/vDDxEet7VMREAosTxhTL0EgjQEOQETY
2oJjgp8fJ+6cnJyZM2cuXLiwrq6Oe6bDhw/TXEDlzo5RkgBMkIlSQqMEXkwFLHIDn82aNYvmK0Oj
+Y7+fNCgyHfeCe/bd6ytLds1+Elf8NO4uvKLdHOLHz58kr8/p1bskZubO2PGjHnz5rFbYorOlTin
kMtLSOWC5omTK/kNpORu4o47ip07d/LZqlWr4NayZctKS0vnzp2LUvBNmTIlOzs7IyODxdi0lPT0
9MzMTNbGBixfUFCAJebMmVNSUrJkyRK2Bw6iif5QXgRiGMIKQ6hP+IaXDYxBKWDhQU5MtASYlK1A
ea4caO3AV19fD8Sqqir2CiWXPilAr6ysJHDwSGNj4+rVq+EsZxj6E8rnyZMncQJ7pnuU9+sGlzKm
L6zk3wz4gACE71iVaw0uFFGH5dBLIWQBCMdZG6xqIYAxLXsgldAKk3XZFSCgLWUKHJCXPUsfGV8R
mb1jlLOVv2YADrOhDp5hPCCyADY3vhXhJUNMwAxsBqfwISBwjSx5lu/Rn35PLY+2EhzqZCmV7YC5
RkWOKkVXIjB5X2ac8f8HA74K8I0SaJkAAAAASUVORK5CYII=
------=_NextPart_000_4831_41CE522A.34C6271F--
